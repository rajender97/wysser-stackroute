package com.google.protobuf;

import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public final class DescriptorProtos {
   private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorSet_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_FileDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_FieldDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_OneofDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_MethodDescriptorProto_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_FileOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FileOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_MessageOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MessageOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_FieldOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_FieldOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_OneofOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_OneofOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_EnumValueOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_ServiceOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_ServiceOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_MethodOptions_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_MethodOptions_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable;
   private static final Descriptors.Descriptor internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
   private static final GeneratedMessageV3.FieldAccessorTable internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable;
   private static Descriptors.FileDescriptor descriptor;

   private DescriptorProtos() {
   }

   public static void registerAllExtensions(ExtensionRegistryLite var0) {
   }

   public static void registerAllExtensions(ExtensionRegistry var0) {
      registerAllExtensions((ExtensionRegistryLite)var0);
   }

   public static Descriptors.FileDescriptor getDescriptor() {
      return descriptor;
   }

   static {
      String[] var0 = new String[]{"\n google/protobuf/descriptor.proto\u0012\u000fgoogle.protobuf\"G\n\u0011FileDescriptorSet\u00122\n\u0004file\u0018\u0001 \u0003(\u000b2$.google.protobuf.FileDescriptorProto\"Û\u0003\n\u0013FileDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u000f\n\u0007package\u0018\u0002 \u0001(\t\u0012\u0012\n\ndependency\u0018\u0003 \u0003(\t\u0012\u0019\n\u0011public_dependency\u0018\n \u0003(\u0005\u0012\u0017\n\u000fweak_dependency\u0018\u000b \u0003(\u0005\u00126\n\fmessage_type\u0018\u0004 \u0003(\u000b2 .google.protobuf.DescriptorProto\u00127\n\tenum_type\u0018\u0005 \u0003(\u000b2$.google.protobuf.EnumDescriptorProto\u00128\n\u0007service\u0018\u0006 \u0003(\u000b2'.google.protobuf.ServiceDescriptorProto\u00128\n\textension\u0018\u0007 \u0003(\u000b2%.google.protobuf.FieldDescriptorProto\u0012-\n\u0007options\u0018\b \u0001(\u000b2\u001c.google.protobuf.FileOptions\u00129\n\u0010source_code_info\u0018\t \u0001(\u000b2\u001f.google.protobuf.SourceCodeInfo\u0012\u000e\n\u0006syntax\u0018\f \u0001(\t\"©\u0005\n\u000fDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00124\n\u0005field\u0018\u0002 \u0003(\u000b2%.google.protobuf.FieldDescriptorProto\u00128\n\textension\u0018\u0006 \u0003(\u000b2%.google.protobuf.FieldDescriptorProto\u00125\n\u000bnested_type\u0018\u0003 \u0003(\u000b2 .google.protobuf.DescriptorProto\u00127\n\tenum_type\u0018\u0004 \u0003(\u000b2$.google.protobuf.EnumDescriptorProto\u0012H\n\u000fextension_range\u0018\u0005 \u0003(\u000b2/.google.protobuf.DescriptorProto.ExtensionRange\u00129\n\noneof_decl\u0018\b \u0003(\u000b2%.google.protobuf.OneofDescriptorProto\u00120\n\u0007options\u0018\u0007 \u0001(\u000b2\u001f.google.protobuf.MessageOptions\u0012F\n\u000ereserved_range\u0018\t \u0003(\u000b2..google.protobuf.DescriptorProto.ReservedRange\u0012\u0015\n\rreserved_name\u0018\n \u0003(\t\u001ae\n\u000eExtensionRange\u0012\r\n\u0005start\u0018\u0001 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0005\u00127\n\u0007options\u0018\u0003 \u0001(\u000b2&.google.protobuf.ExtensionRangeOptions\u001a+\n\rReservedRange\u0012\r\n\u0005start\u0018\u0001 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0005\"g\n\u0015ExtensionRangeOptions\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"¼\u0005\n\u0014FieldDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u000e\n\u0006number\u0018\u0003 \u0001(\u0005\u0012:\n\u0005label\u0018\u0004 \u0001(\u000e2+.google.protobuf.FieldDescriptorProto.Label\u00128\n\u0004type\u0018\u0005 \u0001(\u000e2*.google.protobuf.FieldDescriptorProto.Type\u0012\u0011\n\ttype_name\u0018\u0006 \u0001(\t\u0012\u0010\n\bextendee\u0018\u0002 \u0001(\t\u0012\u0015\n\rdefault_value\u0018\u0007 \u0001(\t\u0012\u0013\n\u000boneof_index\u0018\t \u0001(\u0005\u0012\u0011\n\tjson_name\u0018\n \u0001(\t\u0012.\n\u0007options\u0018\b \u0001(\u000b2\u001d.google.protobuf.FieldOptions\"¶\u0002\n\u0004Type\u0012\u000f\n\u000bTYPE_DOUBLE\u0010\u0001\u0012\u000e\n\nTYPE_FLOAT\u0010\u0002\u0012\u000e\n\nTYPE_INT64\u0010\u0003\u0012\u000f\n\u000bTYPE_UINT64\u0010\u0004\u0012\u000e\n\nTYPE_INT32\u0010\u0005\u0012\u0010\n\fTYPE_FIXED64\u0010\u0006\u0012\u0010\n\fTYPE_FIXED32\u0010\u0007\u0012\r\n\tTYPE_BOOL\u0010\b\u0012\u000f\n\u000bTYPE_STRING\u0010\t\u0012\u000e\n\nTYPE_GROUP\u0010\n\u0012\u0010\n\fTYPE_MESSAGE\u0010\u000b\u0012\u000e\n\nTYPE_BYTES\u0010\f\u0012\u000f\n\u000bTYPE_UINT32\u0010\r\u0012\r\n\tTYPE_ENUM\u0010\u000e\u0012\u0011\n\rTYPE_SFIXED32\u0010\u000f\u0012\u0011\n\rTYPE_SFIXED64\u0010\u0010\u0012\u000f\n\u000bTYPE_SINT32\u0010\u0011\u0012\u000f\n\u000bTYPE_SINT64\u0010\u0012\"C\n\u0005Label\u0012\u0012\n\u000eLABEL_OPTIONAL\u0010\u0001\u0012\u0012\n\u000eLABEL_REQUIRED\u0010\u0002\u0012\u0012\n\u000eLABEL_REPEATED\u0010\u0003\"T\n\u0014OneofDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012.\n\u0007options\u0018\u0002 \u0001(\u000b2\u001d.google.protobuf.OneofOptions\"¤\u0002\n\u0013EnumDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00128\n\u0005value\u0018\u0002 \u0003(\u000b2).google.protobuf.EnumValueDescriptorProto\u0012-\n\u0007options\u0018\u0003 \u0001(\u000b2\u001c.google.protobuf.EnumOptions\u0012N\n\u000ereserved_range\u0018\u0004 \u0003(\u000b26.google.protobuf.EnumDescriptorProto.EnumReservedRange\u0012\u0015\n\rreserved_name\u0018\u0005 \u0003(\t\u001a/\n\u0011EnumReservedRange\u0012\r\n\u0005start\u0018\u0001 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0002 \u0001(\u0005\"l\n\u0018EnumValueDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u000e\n\u0006number\u0018\u0002 \u0001(\u0005\u00122\n\u0007options\u0018\u0003 \u0001(\u000b2!.google.protobuf.EnumValueOptions\"\u0090\u0001\n\u0016ServiceDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u00126\n\u0006method\u0018\u0002 \u0003(\u000b2&.google.protobuf.MethodDescriptorProto\u00120\n\u0007options\u0018\u0003 \u0001(\u000b2\u001f.google.protobuf.ServiceOptions\"Á\u0001\n\u0015MethodDescriptorProto\u0012\f\n\u0004name\u0018\u0001 \u0001(\t\u0012\u0012\n\ninput_type\u0018\u0002 \u0001(\t\u0012\u0013\n\u000boutput_type\u0018\u0003 \u0001(\t\u0012/\n\u0007options\u0018\u0004 \u0001(\u000b2\u001e.google.protobuf.MethodOptions\u0012\u001f\n\u0010client_streaming\u0018\u0005 \u0001(\b:\u0005false\u0012\u001f\n\u0010server_streaming\u0018\u0006 \u0001(\b:\u0005false\"¦\u0006\n\u000bFileOptions\u0012\u0014\n\fjava_package\u0018\u0001 \u0001(\t\u0012\u001c\n\u0014java_outer_classname\u0018\b \u0001(\t\u0012\"\n\u0013java_multiple_files\u0018\n \u0001(\b:\u0005false\u0012)\n\u001djava_generate_equals_and_hash\u0018\u0014 \u0001(\bB\u0002\u0018\u0001\u0012%\n\u0016java_string_check_utf8\u0018\u001b \u0001(\b:\u0005false\u0012F\n\foptimize_for\u0018\t \u0001(\u000e2).google.protobuf.FileOptions.OptimizeMode:\u0005SPEED\u0012\u0012\n\ngo_package\u0018\u000b \u0001(\t\u0012\"\n\u0013cc_generic_services\u0018\u0010 \u0001(\b:\u0005false\u0012$\n\u0015java_generic_services\u0018\u0011 \u0001(\b:\u0005false\u0012\"\n\u0013py_generic_services\u0018\u0012 \u0001(\b:\u0005false\u0012#\n\u0014php_generic_services\u0018* \u0001(\b:\u0005false\u0012\u0019\n\ndeprecated\u0018\u0017 \u0001(\b:\u0005false\u0012\u001f\n\u0010cc_enable_arenas\u0018\u001f \u0001(\b:\u0005false\u0012\u0019\n\u0011objc_class_prefix\u0018$ \u0001(\t\u0012\u0018\n\u0010csharp_namespace\u0018% \u0001(\t\u0012\u0014\n\fswift_prefix\u0018' \u0001(\t\u0012\u0018\n\u0010php_class_prefix\u0018( \u0001(\t\u0012\u0015\n\rphp_namespace\u0018) \u0001(\t\u0012\u001e\n\u0016php_metadata_namespace\u0018, \u0001(\t\u0012\u0014\n\fruby_package\u0018- \u0001(\t\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption\":\n\fOptimizeMode\u0012\t\n\u0005SPEED\u0010\u0001\u0012\r\n\tCODE_SIZE\u0010\u0002\u0012\u0010\n\fLITE_RUNTIME\u0010\u0003*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b&\u0010'\"ò\u0001\n\u000eMessageOptions\u0012&\n\u0017message_set_wire_format\u0018\u0001 \u0001(\b:\u0005false\u0012.\n\u001fno_standard_descriptor_accessor\u0018\u0002 \u0001(\b:\u0005false\u0012\u0019\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u0011\n\tmap_entry\u0018\u0007 \u0001(\b\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b\b\u0010\tJ\u0004\b\t\u0010\n\"\u009e\u0003\n\fFieldOptions\u0012:\n\u0005ctype\u0018\u0001 \u0001(\u000e2#.google.protobuf.FieldOptions.CType:\u0006STRING\u0012\u000e\n\u0006packed\u0018\u0002 \u0001(\b\u0012?\n\u0006jstype\u0018\u0006 \u0001(\u000e2$.google.protobuf.FieldOptions.JSType:\tJS_NORMAL\u0012\u0013\n\u0004lazy\u0018\u0005 \u0001(\b:\u0005false\u0012\u0019\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012\u0013\n\u0004weak\u0018\n \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption\"/\n\u0005CType\u0012\n\n\u0006STRING\u0010\u0000\u0012\b\n\u0004CORD\u0010\u0001\u0012\u0010\n\fSTRING_PIECE\u0010\u0002\"5\n\u0006JSType\u0012\r\n\tJS_NORMAL\u0010\u0000\u0012\r\n\tJS_STRING\u0010\u0001\u0012\r\n\tJS_NUMBER\u0010\u0002*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b\u0004\u0010\u0005\"^\n\fOneofOptions\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"\u0093\u0001\n\u000bEnumOptions\u0012\u0013\n\u000ballow_alias\u0018\u0002 \u0001(\b\u0012\u0019\n\ndeprecated\u0018\u0003 \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002J\u0004\b\u0005\u0010\u0006\"}\n\u0010EnumValueOptions\u0012\u0019\n\ndeprecated\u0018\u0001 \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"{\n\u000eServiceOptions\u0012\u0019\n\ndeprecated\u0018! \u0001(\b:\u0005false\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"\u00ad\u0002\n\rMethodOptions\u0012\u0019\n\ndeprecated\u0018! \u0001(\b:\u0005false\u0012_\n\u0011idempotency_level\u0018\" \u0001(\u000e2/.google.protobuf.MethodOptions.IdempotencyLevel:\u0013IDEMPOTENCY_UNKNOWN\u0012C\n\u0014uninterpreted_option\u0018ç\u0007 \u0003(\u000b2$.google.protobuf.UninterpretedOption\"P\n\u0010IdempotencyLevel\u0012\u0017\n\u0013IDEMPOTENCY_UNKNOWN\u0010\u0000\u0012\u0013\n\u000fNO_SIDE_EFFECTS\u0010\u0001\u0012\u000e\n\nIDEMPOTENT\u0010\u0002*\t\bè\u0007\u0010\u0080\u0080\u0080\u0080\u0002\"\u009e\u0002\n\u0013UninterpretedOption\u0012;\n\u0004name\u0018\u0002 \u0003(\u000b2-.google.protobuf.UninterpretedOption.NamePart\u0012\u0018\n\u0010identifier_value\u0018\u0003 \u0001(\t\u0012\u001a\n\u0012positive_int_value\u0018\u0004 \u0001(\u0004\u0012\u001a\n\u0012negative_int_value\u0018\u0005 \u0001(\u0003\u0012\u0014\n\fdouble_value\u0018\u0006 \u0001(\u0001\u0012\u0014\n\fstring_value\u0018\u0007 \u0001(\f\u0012\u0017\n\u000faggregate_value\u0018\b \u0001(\t\u001a3\n\bNamePart\u0012\u0011\n\tname_part\u0018\u0001 \u0002(\t\u0012\u0014\n\fis_extension\u0018\u0002 \u0002(\b\"Õ\u0001\n\u000eSourceCodeInfo\u0012:\n\blocation\u0018\u0001 \u0003(\u000b2(.google.protobuf.SourceCodeInfo.Location\u001a\u0086\u0001\n\bLocation\u0012\u0010\n\u0004path\u0018\u0001 \u0003(\u0005B\u0002\u0010\u0001\u0012\u0010\n\u0004span\u0018\u0002 \u0003(\u0005B\u0002\u0010\u0001\u0012\u0018\n\u0010leading_comments\u0018\u0003 \u0001(\t\u0012\u0019\n\u0011trailing_comments\u0018\u0004 \u0001(\t\u0012!\n\u0019leading_detached_comments\u0018\u0006 \u0003(\t\"§\u0001\n\u0011GeneratedCodeInfo\u0012A\n\nannotation\u0018\u0001 \u0003(\u000b2-.google.protobuf.GeneratedCodeInfo.Annotation\u001aO\n\nAnnotation\u0012\u0010\n\u0004path\u0018\u0001 \u0003(\u0005B\u0002\u0010\u0001\u0012\u0013\n\u000bsource_file\u0018\u0002 \u0001(\t\u0012\r\n\u0005begin\u0018\u0003 \u0001(\u0005\u0012\u000b\n\u0003end\u0018\u0004 \u0001(\u0005B\u008f\u0001\n\u0013com.google.protobufB\u0010DescriptorProtosH\u0001Z>github.com/golang/protobuf/protoc-gen-go/descriptor;descriptorø\u0001\u0001¢\u0002\u0003GPBª\u0002\u001aGoogle.Protobuf.Reflection"};
      descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(var0, new Descriptors.FileDescriptor[0]);
      internal_static_google_protobuf_FileDescriptorSet_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(0);
      internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileDescriptorSet_descriptor, new String[]{"File"});
      internal_static_google_protobuf_FileDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(1);
      internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileDescriptorProto_descriptor, new String[]{"Name", "Package", "Dependency", "PublicDependency", "WeakDependency", "MessageType", "EnumType", "Service", "Extension", "Options", "SourceCodeInfo", "Syntax"});
      internal_static_google_protobuf_DescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(2);
      internal_static_google_protobuf_DescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_descriptor, new String[]{"Name", "Field", "Extension", "NestedType", "EnumType", "ExtensionRange", "OneofDecl", "Options", "ReservedRange", "ReservedName"});
      internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes().get(0);
      internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor, new String[]{"Start", "End", "Options"});
      internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_DescriptorProto_descriptor.getNestedTypes().get(1);
      internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor, new String[]{"Start", "End"});
      internal_static_google_protobuf_ExtensionRangeOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(3);
      internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ExtensionRangeOptions_descriptor, new String[]{"UninterpretedOption"});
      internal_static_google_protobuf_FieldDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(4);
      internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FieldDescriptorProto_descriptor, new String[]{"Name", "Number", "Label", "Type", "TypeName", "Extendee", "DefaultValue", "OneofIndex", "JsonName", "Options"});
      internal_static_google_protobuf_OneofDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(5);
      internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_OneofDescriptorProto_descriptor, new String[]{"Name", "Options"});
      internal_static_google_protobuf_EnumDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(6);
      internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumDescriptorProto_descriptor, new String[]{"Name", "Value", "Options", "ReservedRange", "ReservedName"});
      internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_EnumDescriptorProto_descriptor.getNestedTypes().get(0);
      internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor, new String[]{"Start", "End"});
      internal_static_google_protobuf_EnumValueDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(7);
      internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumValueDescriptorProto_descriptor, new String[]{"Name", "Number", "Options"});
      internal_static_google_protobuf_ServiceDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(8);
      internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ServiceDescriptorProto_descriptor, new String[]{"Name", "Method", "Options"});
      internal_static_google_protobuf_MethodDescriptorProto_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(9);
      internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MethodDescriptorProto_descriptor, new String[]{"Name", "InputType", "OutputType", "Options", "ClientStreaming", "ServerStreaming"});
      internal_static_google_protobuf_FileOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(10);
      internal_static_google_protobuf_FileOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FileOptions_descriptor, new String[]{"JavaPackage", "JavaOuterClassname", "JavaMultipleFiles", "JavaGenerateEqualsAndHash", "JavaStringCheckUtf8", "OptimizeFor", "GoPackage", "CcGenericServices", "JavaGenericServices", "PyGenericServices", "PhpGenericServices", "Deprecated", "CcEnableArenas", "ObjcClassPrefix", "CsharpNamespace", "SwiftPrefix", "PhpClassPrefix", "PhpNamespace", "PhpMetadataNamespace", "RubyPackage", "UninterpretedOption"});
      internal_static_google_protobuf_MessageOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(11);
      internal_static_google_protobuf_MessageOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MessageOptions_descriptor, new String[]{"MessageSetWireFormat", "NoStandardDescriptorAccessor", "Deprecated", "MapEntry", "UninterpretedOption"});
      internal_static_google_protobuf_FieldOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(12);
      internal_static_google_protobuf_FieldOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_FieldOptions_descriptor, new String[]{"Ctype", "Packed", "Jstype", "Lazy", "Deprecated", "Weak", "UninterpretedOption"});
      internal_static_google_protobuf_OneofOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(13);
      internal_static_google_protobuf_OneofOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_OneofOptions_descriptor, new String[]{"UninterpretedOption"});
      internal_static_google_protobuf_EnumOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(14);
      internal_static_google_protobuf_EnumOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumOptions_descriptor, new String[]{"AllowAlias", "Deprecated", "UninterpretedOption"});
      internal_static_google_protobuf_EnumValueOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(15);
      internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_EnumValueOptions_descriptor, new String[]{"Deprecated", "UninterpretedOption"});
      internal_static_google_protobuf_ServiceOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(16);
      internal_static_google_protobuf_ServiceOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_ServiceOptions_descriptor, new String[]{"Deprecated", "UninterpretedOption"});
      internal_static_google_protobuf_MethodOptions_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(17);
      internal_static_google_protobuf_MethodOptions_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_MethodOptions_descriptor, new String[]{"Deprecated", "IdempotencyLevel", "UninterpretedOption"});
      internal_static_google_protobuf_UninterpretedOption_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(18);
      internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_UninterpretedOption_descriptor, new String[]{"Name", "IdentifierValue", "PositiveIntValue", "NegativeIntValue", "DoubleValue", "StringValue", "AggregateValue"});
      internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_UninterpretedOption_descriptor.getNestedTypes().get(0);
      internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor, new String[]{"NamePart", "IsExtension"});
      internal_static_google_protobuf_SourceCodeInfo_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(19);
      internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_SourceCodeInfo_descriptor, new String[]{"Location"});
      internal_static_google_protobuf_SourceCodeInfo_Location_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_SourceCodeInfo_descriptor.getNestedTypes().get(0);
      internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_SourceCodeInfo_Location_descriptor, new String[]{"Path", "Span", "LeadingComments", "TrailingComments", "LeadingDetachedComments"});
      internal_static_google_protobuf_GeneratedCodeInfo_descriptor = (Descriptors.Descriptor)getDescriptor().getMessageTypes().get(20);
      internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_GeneratedCodeInfo_descriptor, new String[]{"Annotation"});
      internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor = (Descriptors.Descriptor)internal_static_google_protobuf_GeneratedCodeInfo_descriptor.getNestedTypes().get(0);
      internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor, new String[]{"Path", "SourceFile", "Begin", "End"});
   }

   public static final class GeneratedCodeInfo extends GeneratedMessageV3 implements DescriptorProtos.GeneratedCodeInfoOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int ANNOTATION_FIELD_NUMBER = 1;
      private List annotation_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.GeneratedCodeInfo DEFAULT_INSTANCE = new DescriptorProtos.GeneratedCodeInfo();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.GeneratedCodeInfo parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.GeneratedCodeInfo(var1, var2);
         }
      };

      private GeneratedCodeInfo(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private GeneratedCodeInfo() {
         this.memoizedIsInitialized = -1;
         this.annotation_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.GeneratedCodeInfo();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private GeneratedCodeInfo(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     if (!(var3 & true)) {
                        this.annotation_ = new ArrayList();
                        var3 |= true;
                     }

                     this.annotation_.add(var1.readMessage(DescriptorProtos.GeneratedCodeInfo.Annotation.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if (var3 & true) {
                  this.annotation_ = Collections.unmodifiableList(this.annotation_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.GeneratedCodeInfo.class, DescriptorProtos.GeneratedCodeInfo.Builder.class);
      }

      public List getAnnotationList() {
         return this.annotation_;
      }

      public List getAnnotationOrBuilderList() {
         return this.annotation_;
      }

      public int getAnnotationCount() {
         return this.annotation_.size();
      }

      public DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int var1) {
         return (DescriptorProtos.GeneratedCodeInfo.Annotation)this.annotation_.get(var1);
      }

      public DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int var1) {
         return (DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder)this.annotation_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         for(int var2 = 0; var2 < this.annotation_.size(); ++var2) {
            var1.writeMessage(1, (MessageLite)this.annotation_.get(var2));
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;

            for(int var2 = 0; var2 < this.annotation_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(1, (MessageLite)this.annotation_.get(var2));
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.GeneratedCodeInfo)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.GeneratedCodeInfo var2 = (DescriptorProtos.GeneratedCodeInfo)var1;
            if (!this.getAnnotationList().equals(var2.getAnnotationList())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.getAnnotationCount() > 0) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getAnnotationList().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.GeneratedCodeInfo)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.GeneratedCodeInfo)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.GeneratedCodeInfo)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.GeneratedCodeInfo)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.GeneratedCodeInfo)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.GeneratedCodeInfo)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.GeneratedCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.GeneratedCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.GeneratedCodeInfo)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.GeneratedCodeInfo)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.GeneratedCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.GeneratedCodeInfo parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.GeneratedCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.GeneratedCodeInfo.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.GeneratedCodeInfo.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.GeneratedCodeInfo.Builder newBuilder(DescriptorProtos.GeneratedCodeInfo var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.GeneratedCodeInfo.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.GeneratedCodeInfo.Builder() : (new DescriptorProtos.GeneratedCodeInfo.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.GeneratedCodeInfo.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.GeneratedCodeInfo.Builder var2 = new DescriptorProtos.GeneratedCodeInfo.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.GeneratedCodeInfo getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.GeneratedCodeInfo getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      GeneratedCodeInfo(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      GeneratedCodeInfo(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.GeneratedCodeInfoOrBuilder {
         private int bitField0_;
         private List annotation_;
         private RepeatedFieldBuilderV3 annotationBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.GeneratedCodeInfo.class, DescriptorProtos.GeneratedCodeInfo.Builder.class);
         }

         private Builder() {
            this.annotation_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.annotation_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getAnnotationFieldBuilder();
            }

         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clear() {
            super.clear();
            if (this.annotationBuilder_ == null) {
               this.annotation_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.annotationBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_descriptor;
         }

         public DescriptorProtos.GeneratedCodeInfo getDefaultInstanceForType() {
            return DescriptorProtos.GeneratedCodeInfo.getDefaultInstance();
         }

         public DescriptorProtos.GeneratedCodeInfo build() {
            DescriptorProtos.GeneratedCodeInfo var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.GeneratedCodeInfo buildPartial() {
            DescriptorProtos.GeneratedCodeInfo var1 = new DescriptorProtos.GeneratedCodeInfo(this);
            int var2 = this.bitField0_;
            if (this.annotationBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.annotation_ = Collections.unmodifiableList(this.annotation_);
                  this.bitField0_ &= -2;
               }

               var1.annotation_ = this.annotation_;
            } else {
               var1.annotation_ = this.annotationBuilder_.build();
            }

            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clone() {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.clone();
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.clearField(var1);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.GeneratedCodeInfo) {
               return this.mergeFrom((DescriptorProtos.GeneratedCodeInfo)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder mergeFrom(DescriptorProtos.GeneratedCodeInfo var1) {
            if (var1 == DescriptorProtos.GeneratedCodeInfo.getDefaultInstance()) {
               return this;
            } else {
               if (this.annotationBuilder_ == null) {
                  if (!var1.annotation_.isEmpty()) {
                     if (this.annotation_.isEmpty()) {
                        this.annotation_ = var1.annotation_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureAnnotationIsMutable();
                        this.annotation_.addAll(var1.annotation_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.annotation_.isEmpty()) {
                  if (this.annotationBuilder_.isEmpty()) {
                     this.annotationBuilder_.dispose();
                     this.annotationBuilder_ = null;
                     this.annotation_ = var1.annotation_;
                     this.bitField0_ &= -2;
                     this.annotationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getAnnotationFieldBuilder() : null;
                  } else {
                     this.annotationBuilder_.addAllMessages(var1.annotation_);
                  }
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.GeneratedCodeInfo var3 = null;

            try {
               var3 = (DescriptorProtos.GeneratedCodeInfo)DescriptorProtos.GeneratedCodeInfo.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.GeneratedCodeInfo)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         private void ensureAnnotationIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.annotation_ = new ArrayList(this.annotation_);
               this.bitField0_ |= 1;
            }

         }

         public List getAnnotationList() {
            return this.annotationBuilder_ == null ? Collections.unmodifiableList(this.annotation_) : this.annotationBuilder_.getMessageList();
         }

         public int getAnnotationCount() {
            return this.annotationBuilder_ == null ? this.annotation_.size() : this.annotationBuilder_.getCount();
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int var1) {
            return this.annotationBuilder_ == null ? (DescriptorProtos.GeneratedCodeInfo.Annotation)this.annotation_.get(var1) : (DescriptorProtos.GeneratedCodeInfo.Annotation)this.annotationBuilder_.getMessage(var1);
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setAnnotation(int var1, DescriptorProtos.GeneratedCodeInfo.Annotation var2) {
            if (this.annotationBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureAnnotationIsMutable();
               this.annotation_.set(var1, var2);
               this.onChanged();
            } else {
               this.annotationBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder setAnnotation(int var1, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder var2) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.annotationBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(DescriptorProtos.GeneratedCodeInfo.Annotation var1) {
            if (this.annotationBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureAnnotationIsMutable();
               this.annotation_.add(var1);
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(int var1, DescriptorProtos.GeneratedCodeInfo.Annotation var2) {
            if (this.annotationBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureAnnotationIsMutable();
               this.annotation_.add(var1, var2);
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(DescriptorProtos.GeneratedCodeInfo.Annotation.Builder var1) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.add(var1.build());
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAnnotation(int var1, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder var2) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.annotationBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder addAllAnnotation(Iterable var1) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.annotation_);
               this.onChanged();
            } else {
               this.annotationBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder clearAnnotation() {
            if (this.annotationBuilder_ == null) {
               this.annotation_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.annotationBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Builder removeAnnotation(int var1) {
            if (this.annotationBuilder_ == null) {
               this.ensureAnnotationIsMutable();
               this.annotation_.remove(var1);
               this.onChanged();
            } else {
               this.annotationBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder getAnnotationBuilder(int var1) {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)this.getAnnotationFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int var1) {
            return this.annotationBuilder_ == null ? (DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder)this.annotation_.get(var1) : (DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder)this.annotationBuilder_.getMessageOrBuilder(var1);
         }

         public List getAnnotationOrBuilderList() {
            return this.annotationBuilder_ != null ? this.annotationBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.annotation_);
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAnnotationBuilder() {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)this.getAnnotationFieldBuilder().addBuilder(DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance());
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAnnotationBuilder(int var1) {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)this.getAnnotationFieldBuilder().addBuilder(var1, DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance());
         }

         public List getAnnotationBuilderList() {
            return this.getAnnotationFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getAnnotationFieldBuilder() {
            if (this.annotationBuilder_ == null) {
               this.annotationBuilder_ = new RepeatedFieldBuilderV3(this.annotation_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.annotation_ = null;
            }

            return this.annotationBuilder_;
         }

         public final DescriptorProtos.GeneratedCodeInfo.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.GeneratedCodeInfo.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.GeneratedCodeInfo.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static final class Annotation extends GeneratedMessageV3 implements DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int PATH_FIELD_NUMBER = 1;
         private Internal.IntList path_;
         private int pathMemoizedSerializedSize;
         public static final int SOURCE_FILE_FIELD_NUMBER = 2;
         private volatile Object sourceFile_;
         public static final int BEGIN_FIELD_NUMBER = 3;
         private int begin_;
         public static final int END_FIELD_NUMBER = 4;
         private int end_;
         private byte memoizedIsInitialized;
         private static final DescriptorProtos.GeneratedCodeInfo.Annotation DEFAULT_INSTANCE = new DescriptorProtos.GeneratedCodeInfo.Annotation();
         /** @deprecated */
         @Deprecated
         public static final Parser PARSER = new AbstractParser() {
            public DescriptorProtos.GeneratedCodeInfo.Annotation parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
               return new DescriptorProtos.GeneratedCodeInfo.Annotation(var1, var2);
            }
         };

         private Annotation(GeneratedMessageV3.Builder var1) {
            super(var1);
            this.pathMemoizedSerializedSize = -1;
            this.memoizedIsInitialized = -1;
         }

         private Annotation() {
            this.pathMemoizedSerializedSize = -1;
            this.memoizedIsInitialized = -1;
            this.path_ = emptyIntList();
            this.sourceFile_ = "";
         }

         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
            return new DescriptorProtos.GeneratedCodeInfo.Annotation();
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Annotation(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            this();
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               boolean var3 = false;
               UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

               try {
                  boolean var5 = false;

                  while(true) {
                     while(!var5) {
                        int var6 = var1.readTag();
                        int var8;
                        switch(var6) {
                        case 0:
                           var5 = true;
                           continue;
                        case 8:
                           if (!(var3 & true)) {
                              this.path_ = newIntList();
                              var3 |= true;
                           }

                           this.path_.addInt(var1.readInt32());
                           continue;
                        case 10:
                           int var16 = var1.readRawVarint32();
                           var8 = var1.pushLimit(var16);
                           if (!(var3 & true) && var1.getBytesUntilLimit() > 0) {
                              this.path_ = newIntList();
                              var3 |= true;
                           }
                           break;
                        case 18:
                           ByteString var7 = var1.readBytes();
                           this.bitField0_ |= 1;
                           this.sourceFile_ = var7;
                           continue;
                        case 24:
                           this.bitField0_ |= 2;
                           this.begin_ = var1.readInt32();
                           continue;
                        case 32:
                           this.bitField0_ |= 4;
                           this.end_ = var1.readInt32();
                           continue;
                        default:
                           if (!this.parseUnknownField(var1, var4, var2, var6)) {
                              var5 = true;
                           }
                           continue;
                        }

                        while(var1.getBytesUntilLimit() > 0) {
                           this.path_.addInt(var1.readInt32());
                        }

                        var1.popLimit(var8);
                     }

                     return;
                  }
               } catch (InvalidProtocolBufferException var13) {
                  throw var13.setUnfinishedMessage(this);
               } catch (IOException var14) {
                  throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
               } finally {
                  if (var3 & true) {
                     this.path_.makeImmutable();
                  }

                  this.unknownFields = var4.build();
                  this.makeExtensionsImmutable();
               }
            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.GeneratedCodeInfo.Annotation.class, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder.class);
         }

         public List getPathList() {
            return this.path_;
         }

         public int getPathCount() {
            return this.path_.size();
         }

         public int getPath(int var1) {
            return this.path_.getInt(var1);
         }

         public boolean hasSourceFile() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getSourceFile() {
            Object var1 = this.sourceFile_;
            if (var1 instanceof String) {
               return (String)var1;
            } else {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.sourceFile_ = var3;
               }

               return var3;
            }
         }

         public ByteString getSourceFileBytes() {
            Object var1 = this.sourceFile_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.sourceFile_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public boolean hasBegin() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getBegin() {
            return this.begin_;
         }

         public boolean hasEnd() {
            return (this.bitField0_ & 4) != 0;
         }

         public int getEnd() {
            return this.end_;
         }

         public final boolean isInitialized() {
            byte var1 = this.memoizedIsInitialized;
            if (var1 == 1) {
               return true;
            } else if (var1 == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream var1) throws IOException {
            this.getSerializedSize();
            if (this.getPathList().size() > 0) {
               var1.writeUInt32NoTag(10);
               var1.writeUInt32NoTag(this.pathMemoizedSerializedSize);
            }

            for(int var2 = 0; var2 < this.path_.size(); ++var2) {
               var1.writeInt32NoTag(this.path_.getInt(var2));
            }

            if ((this.bitField0_ & 1) != 0) {
               GeneratedMessageV3.writeString(var1, 2, this.sourceFile_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1.writeInt32(3, this.begin_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1.writeInt32(4, this.end_);
            }

            this.unknownFields.writeTo(var1);
         }

         public int getSerializedSize() {
            int var1 = this.memoizedSize;
            if (var1 != -1) {
               return var1;
            } else {
               byte var4 = 0;
               int var2 = 0;

               for(int var3 = 0; var3 < this.path_.size(); ++var3) {
                  var2 += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(var3));
               }

               var1 = var4 + var2;
               if (!this.getPathList().isEmpty()) {
                  ++var1;
                  var1 += CodedOutputStream.computeInt32SizeNoTag(var2);
               }

               this.pathMemoizedSerializedSize = var2;
               if ((this.bitField0_ & 1) != 0) {
                  var1 += GeneratedMessageV3.computeStringSize(2, this.sourceFile_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(3, this.begin_);
               }

               if ((this.bitField0_ & 4) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(4, this.end_);
               }

               var1 += this.unknownFields.getSerializedSize();
               this.memoizedSize = var1;
               return var1;
            }
         }

         public boolean equals(Object var1) {
            if (var1 == this) {
               return true;
            } else if (!(var1 instanceof DescriptorProtos.GeneratedCodeInfo.Annotation)) {
               return super.equals(var1);
            } else {
               DescriptorProtos.GeneratedCodeInfo.Annotation var2 = (DescriptorProtos.GeneratedCodeInfo.Annotation)var1;
               if (!this.getPathList().equals(var2.getPathList())) {
                  return false;
               } else if (this.hasSourceFile() != var2.hasSourceFile()) {
                  return false;
               } else if (this.hasSourceFile() && !this.getSourceFile().equals(var2.getSourceFile())) {
                  return false;
               } else if (this.hasBegin() != var2.hasBegin()) {
                  return false;
               } else if (this.hasBegin() && this.getBegin() != var2.getBegin()) {
                  return false;
               } else if (this.hasEnd() != var2.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != var2.getEnd()) {
                  return false;
               } else {
                  return this.unknownFields.equals(var2.unknownFields);
               }
            }
         }

         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               byte var1 = 41;
               int var2 = 19 * var1 + getDescriptor().hashCode();
               if (this.getPathCount() > 0) {
                  var2 = 37 * var2 + 1;
                  var2 = 53 * var2 + this.getPathList().hashCode();
               }

               if (this.hasSourceFile()) {
                  var2 = 37 * var2 + 2;
                  var2 = 53 * var2 + this.getSourceFile().hashCode();
               }

               if (this.hasBegin()) {
                  var2 = 37 * var2 + 3;
                  var2 = 53 * var2 + this.getBegin();
               }

               if (this.hasEnd()) {
                  var2 = 37 * var2 + 4;
                  var2 = 53 * var2 + this.getEnd();
               }

               var2 = 29 * var2 + this.unknownFields.hashCode();
               this.memoizedHashCode = var2;
               return var2;
            }
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteString var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(byte[] var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseDelimitedFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(CodedInputStream var0) throws IOException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.GeneratedCodeInfo.Annotation)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilder(DescriptorProtos.GeneratedCodeInfo.Annotation var0) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new DescriptorProtos.GeneratedCodeInfo.Annotation.Builder() : (new DescriptorProtos.GeneratedCodeInfo.Annotation.Builder()).mergeFrom(this);
         }

         protected DescriptorProtos.GeneratedCodeInfo.Annotation.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
            DescriptorProtos.GeneratedCodeInfo.Annotation.Builder var2 = new DescriptorProtos.GeneratedCodeInfo.Annotation.Builder(var1);
            return var2;
         }

          @Override
          public byte[] toByteArray() {
              return new byte[0];
          }

          public static DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser parser() {
            return PARSER;
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         // $FF: synthetic method
         Annotation(GeneratedMessageV3.Builder var1, Object var2) {
            this(var1);
         }

         // $FF: synthetic method
         Annotation(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
            this(var1, var2);
         }

         public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder {
            private int bitField0_;
            private Internal.IntList path_;
            private Object sourceFile_;
            private int begin_;
            private int end_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.GeneratedCodeInfo.Annotation.class, DescriptorProtos.GeneratedCodeInfo.Annotation.Builder.class);
            }

            private Builder() {
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.sourceFile_ = "";
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent var1) {
               super(var1);
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.sourceFile_ = "";
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clear() {
               super.clear();
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.sourceFile_ = "";
               this.bitField0_ &= -3;
               this.begin_ = 0;
               this.bitField0_ &= -5;
               this.end_ = 0;
               this.bitField0_ &= -9;
               return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_GeneratedCodeInfo_Annotation_descriptor;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation getDefaultInstanceForType() {
               return DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance();
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation build() {
               DescriptorProtos.GeneratedCodeInfo.Annotation var1 = this.buildPartial();
               if (!var1.isInitialized()) {
                  throw newUninitializedMessageException(var1);
               } else {
                  return var1;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation buildPartial() {
               DescriptorProtos.GeneratedCodeInfo.Annotation var1 = new DescriptorProtos.GeneratedCodeInfo.Annotation(this);
               int var2 = this.bitField0_;
               int var3 = 0;
               if ((this.bitField0_ & 1) != 0) {
                  this.path_.makeImmutable();
                  this.bitField0_ &= -2;
               }

               var1.path_ = this.path_;
               if ((var2 & 2) != 0) {
                  var3 |= 1;
               }

               var1.sourceFile_ = this.sourceFile_;
               if ((var2 & 4) != 0) {
                  var1.begin_ = this.begin_;
                  var3 |= 2;
               }

               if ((var2 & 8) != 0) {
                  var1.end_ = this.end_;
                  var3 |= 4;
               }

               var1.bitField0_ = var3;
               this.onBuilt();
               return var1;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clone() {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.clone();
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.setField(var1, var2);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearField(Descriptors.FieldDescriptor var1) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.clearField(var1);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearOneof(Descriptors.OneofDescriptor var1) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.clearOneof(var1);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.setRepeatedField(var1, var2, var3);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.addRepeatedField(var1, var2);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeFrom(Message var1) {
               if (var1 instanceof DescriptorProtos.GeneratedCodeInfo.Annotation) {
                  return this.mergeFrom((DescriptorProtos.GeneratedCodeInfo.Annotation)var1);
               } else {
                  super.mergeFrom(var1);
                  return this;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeFrom(DescriptorProtos.GeneratedCodeInfo.Annotation var1) {
               if (var1 == DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance()) {
                  return this;
               } else {
                  if (!var1.path_.isEmpty()) {
                     if (this.path_.isEmpty()) {
                        this.path_ = var1.path_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensurePathIsMutable();
                        this.path_.addAll(var1.path_);
                     }

                     this.onChanged();
                  }

                  if (var1.hasSourceFile()) {
                     this.bitField0_ |= 2;
                     this.sourceFile_ = var1.sourceFile_;
                     this.onChanged();
                  }

                  if (var1.hasBegin()) {
                     this.setBegin(var1.getBegin());
                  }

                  if (var1.hasEnd()) {
                     this.setEnd(var1.getEnd());
                  }

                  this.mergeUnknownFields(var1.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
               DescriptorProtos.GeneratedCodeInfo.Annotation var3 = null;

               try {
                  var3 = (DescriptorProtos.GeneratedCodeInfo.Annotation)DescriptorProtos.GeneratedCodeInfo.Annotation.PARSER.parsePartialFrom(var1, var2);
               } catch (InvalidProtocolBufferException var8) {
                  var3 = (DescriptorProtos.GeneratedCodeInfo.Annotation)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (var3 != null) {
                     this.mergeFrom(var3);
                  }

               }

               return this;
            }

            private void ensurePathIsMutable() {
               if ((this.bitField0_ & 1) == 0) {
                  this.path_ = GeneratedMessageV3.mutableCopy(this.path_);
                  this.bitField0_ |= 1;
               }

            }

            public List getPathList() {
               return (List)((this.bitField0_ & 1) != 0 ? Collections.unmodifiableList(this.path_) : this.path_);
            }

            public int getPathCount() {
               return this.path_.size();
            }

            public int getPath(int var1) {
               return this.path_.getInt(var1);
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setPath(int var1, int var2) {
               this.ensurePathIsMutable();
               this.path_.setInt(var1, var2);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addPath(int var1) {
               this.ensurePathIsMutable();
               this.path_.addInt(var1);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder addAllPath(Iterable var1) {
               this.ensurePathIsMutable();
               AbstractMessageLite.Builder.addAll(var1, (List)this.path_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearPath() {
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.onChanged();
               return this;
            }

            public boolean hasSourceFile() {
               return (this.bitField0_ & 2) != 0;
            }

            public String getSourceFile() {
               Object var1 = this.sourceFile_;
               if (!(var1 instanceof String)) {
                  ByteString var2 = (ByteString)var1;
                  String var3 = var2.toStringUtf8();
                  if (var2.isValidUtf8()) {
                     this.sourceFile_ = var3;
                  }

                  return var3;
               } else {
                  return (String)var1;
               }
            }

            public ByteString getSourceFileBytes() {
               Object var1 = this.sourceFile_;
               if (var1 instanceof String) {
                  ByteString var2 = ByteString.copyFromUtf8((String)var1);
                  this.sourceFile_ = var2;
                  return var2;
               } else {
                  return (ByteString)var1;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setSourceFile(String var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.sourceFile_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearSourceFile() {
               this.bitField0_ &= -3;
               this.sourceFile_ = DescriptorProtos.GeneratedCodeInfo.Annotation.getDefaultInstance().getSourceFile();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setSourceFileBytes(ByteString var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 2;
                  this.sourceFile_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasBegin() {
               return (this.bitField0_ & 4) != 0;
            }

            public int getBegin() {
               return this.begin_;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setBegin(int var1) {
               this.bitField0_ |= 4;
               this.begin_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearBegin() {
               this.bitField0_ &= -5;
               this.begin_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasEnd() {
               return (this.bitField0_ & 8) != 0;
            }

            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setEnd(int var1) {
               this.bitField0_ |= 8;
               this.end_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.GeneratedCodeInfo.Annotation.Builder clearEnd() {
               this.bitField0_ &= -9;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.GeneratedCodeInfo.Annotation.Builder setUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.setUnknownFields(var1);
            }

            public final DescriptorProtos.GeneratedCodeInfo.Annotation.Builder mergeUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.GeneratedCodeInfo.Annotation.Builder)super.mergeUnknownFields(var1);
            }

            // $FF: synthetic method
            Builder(Object var1) {
               this();
            }

            // $FF: synthetic method
            Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
               this(var1);
            }
         }
      }

      public interface AnnotationOrBuilder extends MessageOrBuilder {
         List getPathList();

         int getPathCount();

         int getPath(int var1);

         boolean hasSourceFile();

         String getSourceFile();

         ByteString getSourceFileBytes();

         boolean hasBegin();

         int getBegin();

         boolean hasEnd();

         int getEnd();
      }
   }

   public interface GeneratedCodeInfoOrBuilder extends MessageOrBuilder {
      List getAnnotationList();

      DescriptorProtos.GeneratedCodeInfo.Annotation getAnnotation(int var1);

      int getAnnotationCount();

      List getAnnotationOrBuilderList();

      DescriptorProtos.GeneratedCodeInfo.AnnotationOrBuilder getAnnotationOrBuilder(int var1);
   }

   public static final class SourceCodeInfo extends GeneratedMessageV3 implements DescriptorProtos.SourceCodeInfoOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int LOCATION_FIELD_NUMBER = 1;
      private List location_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.SourceCodeInfo DEFAULT_INSTANCE = new DescriptorProtos.SourceCodeInfo();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.SourceCodeInfo parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.SourceCodeInfo(var1, var2);
         }
      };

      private SourceCodeInfo(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private SourceCodeInfo() {
         this.memoizedIsInitialized = -1;
         this.location_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.SourceCodeInfo();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private SourceCodeInfo(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     if (!(var3 & true)) {
                        this.location_ = new ArrayList();
                        var3 |= true;
                     }

                     this.location_.add(var1.readMessage(DescriptorProtos.SourceCodeInfo.Location.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if (var3 & true) {
                  this.location_ = Collections.unmodifiableList(this.location_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.class, DescriptorProtos.SourceCodeInfo.Builder.class);
      }

      public List getLocationList() {
         return this.location_;
      }

      public List getLocationOrBuilderList() {
         return this.location_;
      }

      public int getLocationCount() {
         return this.location_.size();
      }

      public DescriptorProtos.SourceCodeInfo.Location getLocation(int var1) {
         return (DescriptorProtos.SourceCodeInfo.Location)this.location_.get(var1);
      }

      public DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int var1) {
         return (DescriptorProtos.SourceCodeInfo.LocationOrBuilder)this.location_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         for(int var2 = 0; var2 < this.location_.size(); ++var2) {
            var1.writeMessage(1, (MessageLite)this.location_.get(var2));
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;

            for(int var2 = 0; var2 < this.location_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(1, (MessageLite)this.location_.get(var2));
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.SourceCodeInfo)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.SourceCodeInfo var2 = (DescriptorProtos.SourceCodeInfo)var1;
            if (!this.getLocationList().equals(var2.getLocationList())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.getLocationCount() > 0) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getLocationList().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.SourceCodeInfo)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.SourceCodeInfo)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.SourceCodeInfo)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.SourceCodeInfo)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.SourceCodeInfo)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.SourceCodeInfo)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.SourceCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.SourceCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.SourceCodeInfo parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.SourceCodeInfo)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.SourceCodeInfo parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.SourceCodeInfo)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.SourceCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.SourceCodeInfo parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.SourceCodeInfo)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.SourceCodeInfo.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.SourceCodeInfo.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.SourceCodeInfo.Builder newBuilder(DescriptorProtos.SourceCodeInfo var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.SourceCodeInfo.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.SourceCodeInfo.Builder() : (new DescriptorProtos.SourceCodeInfo.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.SourceCodeInfo.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.SourceCodeInfo.Builder var2 = new DescriptorProtos.SourceCodeInfo.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.SourceCodeInfo getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.SourceCodeInfo getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      SourceCodeInfo(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      SourceCodeInfo(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.SourceCodeInfoOrBuilder {
         private int bitField0_;
         private List location_;
         private RepeatedFieldBuilderV3 locationBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.class, DescriptorProtos.SourceCodeInfo.Builder.class);
         }

         private Builder() {
            this.location_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.location_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getLocationFieldBuilder();
            }

         }

         public DescriptorProtos.SourceCodeInfo.Builder clear() {
            super.clear();
            if (this.locationBuilder_ == null) {
               this.location_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.locationBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_descriptor;
         }

         public DescriptorProtos.SourceCodeInfo getDefaultInstanceForType() {
            return DescriptorProtos.SourceCodeInfo.getDefaultInstance();
         }

         public DescriptorProtos.SourceCodeInfo build() {
            DescriptorProtos.SourceCodeInfo var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.SourceCodeInfo buildPartial() {
            DescriptorProtos.SourceCodeInfo var1 = new DescriptorProtos.SourceCodeInfo(this);
            int var2 = this.bitField0_;
            if (this.locationBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.location_ = Collections.unmodifiableList(this.location_);
                  this.bitField0_ &= -2;
               }

               var1.location_ = this.location_;
            } else {
               var1.location_ = this.locationBuilder_.build();
            }

            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.SourceCodeInfo.Builder clone() {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.clone();
         }

         public DescriptorProtos.SourceCodeInfo.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.SourceCodeInfo.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.clearField(var1);
         }

         public DescriptorProtos.SourceCodeInfo.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.SourceCodeInfo.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.SourceCodeInfo.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.SourceCodeInfo.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.SourceCodeInfo) {
               return this.mergeFrom((DescriptorProtos.SourceCodeInfo)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.SourceCodeInfo.Builder mergeFrom(DescriptorProtos.SourceCodeInfo var1) {
            if (var1 == DescriptorProtos.SourceCodeInfo.getDefaultInstance()) {
               return this;
            } else {
               if (this.locationBuilder_ == null) {
                  if (!var1.location_.isEmpty()) {
                     if (this.location_.isEmpty()) {
                        this.location_ = var1.location_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureLocationIsMutable();
                        this.location_.addAll(var1.location_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.location_.isEmpty()) {
                  if (this.locationBuilder_.isEmpty()) {
                     this.locationBuilder_.dispose();
                     this.locationBuilder_ = null;
                     this.location_ = var1.location_;
                     this.bitField0_ &= -2;
                     this.locationBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getLocationFieldBuilder() : null;
                  } else {
                     this.locationBuilder_.addAllMessages(var1.location_);
                  }
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return true;
         }

         public DescriptorProtos.SourceCodeInfo.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.SourceCodeInfo var3 = null;

            try {
               var3 = (DescriptorProtos.SourceCodeInfo)DescriptorProtos.SourceCodeInfo.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.SourceCodeInfo)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         private void ensureLocationIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.location_ = new ArrayList(this.location_);
               this.bitField0_ |= 1;
            }

         }

         public List getLocationList() {
            return this.locationBuilder_ == null ? Collections.unmodifiableList(this.location_) : this.locationBuilder_.getMessageList();
         }

         public int getLocationCount() {
            return this.locationBuilder_ == null ? this.location_.size() : this.locationBuilder_.getCount();
         }

         public DescriptorProtos.SourceCodeInfo.Location getLocation(int var1) {
            return this.locationBuilder_ == null ? (DescriptorProtos.SourceCodeInfo.Location)this.location_.get(var1) : (DescriptorProtos.SourceCodeInfo.Location)this.locationBuilder_.getMessage(var1);
         }

         public DescriptorProtos.SourceCodeInfo.Builder setLocation(int var1, DescriptorProtos.SourceCodeInfo.Location var2) {
            if (this.locationBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureLocationIsMutable();
               this.location_.set(var1, var2);
               this.onChanged();
            } else {
               this.locationBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder setLocation(int var1, DescriptorProtos.SourceCodeInfo.Location.Builder var2) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.locationBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(DescriptorProtos.SourceCodeInfo.Location var1) {
            if (this.locationBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureLocationIsMutable();
               this.location_.add(var1);
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(int var1, DescriptorProtos.SourceCodeInfo.Location var2) {
            if (this.locationBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureLocationIsMutable();
               this.location_.add(var1, var2);
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(DescriptorProtos.SourceCodeInfo.Location.Builder var1) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.add(var1.build());
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addLocation(int var1, DescriptorProtos.SourceCodeInfo.Location.Builder var2) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.locationBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder addAllLocation(Iterable var1) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.location_);
               this.onChanged();
            } else {
               this.locationBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder clearLocation() {
            if (this.locationBuilder_ == null) {
               this.location_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.locationBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder removeLocation(int var1) {
            if (this.locationBuilder_ == null) {
               this.ensureLocationIsMutable();
               this.location_.remove(var1);
               this.onChanged();
            } else {
               this.locationBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder getLocationBuilder(int var1) {
            return (DescriptorProtos.SourceCodeInfo.Location.Builder)this.getLocationFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int var1) {
            return this.locationBuilder_ == null ? (DescriptorProtos.SourceCodeInfo.LocationOrBuilder)this.location_.get(var1) : (DescriptorProtos.SourceCodeInfo.LocationOrBuilder)this.locationBuilder_.getMessageOrBuilder(var1);
         }

         public List getLocationOrBuilderList() {
            return this.locationBuilder_ != null ? this.locationBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.location_);
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder addLocationBuilder() {
            return (DescriptorProtos.SourceCodeInfo.Location.Builder)this.getLocationFieldBuilder().addBuilder(DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance());
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder addLocationBuilder(int var1) {
            return (DescriptorProtos.SourceCodeInfo.Location.Builder)this.getLocationFieldBuilder().addBuilder(var1, DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance());
         }

         public List getLocationBuilderList() {
            return this.getLocationFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getLocationFieldBuilder() {
            if (this.locationBuilder_ == null) {
               this.locationBuilder_ = new RepeatedFieldBuilderV3(this.location_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.location_ = null;
            }

            return this.locationBuilder_;
         }

         public final DescriptorProtos.SourceCodeInfo.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.SourceCodeInfo.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.SourceCodeInfo.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static final class Location extends GeneratedMessageV3 implements DescriptorProtos.SourceCodeInfo.LocationOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int PATH_FIELD_NUMBER = 1;
         private Internal.IntList path_;
         private int pathMemoizedSerializedSize;
         public static final int SPAN_FIELD_NUMBER = 2;
         private Internal.IntList span_;
         private int spanMemoizedSerializedSize;
         public static final int LEADING_COMMENTS_FIELD_NUMBER = 3;
         private volatile Object leadingComments_;
         public static final int TRAILING_COMMENTS_FIELD_NUMBER = 4;
         private volatile Object trailingComments_;
         public static final int LEADING_DETACHED_COMMENTS_FIELD_NUMBER = 6;
         private LazyStringList leadingDetachedComments_;
         private byte memoizedIsInitialized;
         private static final DescriptorProtos.SourceCodeInfo.Location DEFAULT_INSTANCE = new DescriptorProtos.SourceCodeInfo.Location();
         /** @deprecated */
         @Deprecated
         public static final Parser PARSER = new AbstractParser() {
            public DescriptorProtos.SourceCodeInfo.Location parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
               return new DescriptorProtos.SourceCodeInfo.Location(var1, var2);
            }
         };

         private Location(GeneratedMessageV3.Builder var1) {
            super(var1);
            this.pathMemoizedSerializedSize = -1;
            this.spanMemoizedSerializedSize = -1;
            this.memoizedIsInitialized = -1;
         }

         private Location() {
            this.pathMemoizedSerializedSize = -1;
            this.spanMemoizedSerializedSize = -1;
            this.memoizedIsInitialized = -1;
            this.path_ = emptyIntList();
            this.span_ = emptyIntList();
            this.leadingComments_ = "";
            this.trailingComments_ = "";
            this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
         }

         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
            return new DescriptorProtos.SourceCodeInfo.Location();
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private Location(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            this();
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               int var3 = 0;
               UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

               try {
                  boolean var5 = false;

                  while(!var5) {
                     int var6 = var1.readTag();
                     int var16;
                     ByteString var7;
                     int var8;
                     switch(var6) {
                     case 0:
                        var5 = true;
                        continue;
                     case 8:
                        if ((var3 & 1) == 0) {
                           this.path_ = newIntList();
                           var3 |= 1;
                        }

                        this.path_.addInt(var1.readInt32());
                        continue;
                     case 10:
                        var16 = var1.readRawVarint32();
                        var8 = var1.pushLimit(var16);
                        if ((var3 & 1) == 0 && var1.getBytesUntilLimit() > 0) {
                           this.path_ = newIntList();
                           var3 |= 1;
                        }
                        break;
                     case 16:
                        if ((var3 & 2) == 0) {
                           this.span_ = newIntList();
                           var3 |= 2;
                        }

                        this.span_.addInt(var1.readInt32());
                        continue;
                     case 18:
                        var16 = var1.readRawVarint32();
                        var8 = var1.pushLimit(var16);
                        if ((var3 & 2) == 0 && var1.getBytesUntilLimit() > 0) {
                           this.span_ = newIntList();
                           var3 |= 2;
                        }

                        while(var1.getBytesUntilLimit() > 0) {
                           this.span_.addInt(var1.readInt32());
                        }

                        var1.popLimit(var8);
                        continue;
                     case 26:
                        var7 = var1.readBytes();
                        this.bitField0_ |= 1;
                        this.leadingComments_ = var7;
                        continue;
                     case 34:
                        var7 = var1.readBytes();
                        this.bitField0_ |= 2;
                        this.trailingComments_ = var7;
                        continue;
                     case 50:
                        var7 = var1.readBytes();
                        if ((var3 & 16) == 0) {
                           this.leadingDetachedComments_ = new LazyStringArrayList();
                           var3 |= 16;
                        }

                        this.leadingDetachedComments_.add(var7);
                        continue;
                     default:
                        if (!this.parseUnknownField(var1, var4, var2, var6)) {
                           var5 = true;
                        }
                        continue;
                     }

                     while(var1.getBytesUntilLimit() > 0) {
                        this.path_.addInt(var1.readInt32());
                     }

                     var1.popLimit(var8);
                  }
               } catch (InvalidProtocolBufferException var13) {
                  throw var13.setUnfinishedMessage(this);
               } catch (IOException var14) {
                  throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
               } finally {
                  if ((var3 & 1) != 0) {
                     this.path_.makeImmutable();
                  }

                  if ((var3 & 2) != 0) {
                     this.span_.makeImmutable();
                  }

                  if ((var3 & 16) != 0) {
                     this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView();
                  }

                  this.unknownFields = var4.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.Location.class, DescriptorProtos.SourceCodeInfo.Location.Builder.class);
         }

         public List getPathList() {
            return this.path_;
         }

         public int getPathCount() {
            return this.path_.size();
         }

         public int getPath(int var1) {
            return this.path_.getInt(var1);
         }

         public List getSpanList() {
            return this.span_;
         }

         public int getSpanCount() {
            return this.span_.size();
         }

         public int getSpan(int var1) {
            return this.span_.getInt(var1);
         }

         public boolean hasLeadingComments() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getLeadingComments() {
            Object var1 = this.leadingComments_;
            if (var1 instanceof String) {
               return (String)var1;
            } else {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.leadingComments_ = var3;
               }

               return var3;
            }
         }

         public ByteString getLeadingCommentsBytes() {
            Object var1 = this.leadingComments_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.leadingComments_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public boolean hasTrailingComments() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getTrailingComments() {
            Object var1 = this.trailingComments_;
            if (var1 instanceof String) {
               return (String)var1;
            } else {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.trailingComments_ = var3;
               }

               return var3;
            }
         }

         public ByteString getTrailingCommentsBytes() {
            Object var1 = this.trailingComments_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.trailingComments_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public ProtocolStringList getLeadingDetachedCommentsList() {
            return this.leadingDetachedComments_;
         }

         public int getLeadingDetachedCommentsCount() {
            return this.leadingDetachedComments_.size();
         }

         public String getLeadingDetachedComments(int var1) {
            return (String)this.leadingDetachedComments_.get(var1);
         }

         public ByteString getLeadingDetachedCommentsBytes(int var1) {
            return this.leadingDetachedComments_.getByteString(var1);
         }

         public final boolean isInitialized() {
            byte var1 = this.memoizedIsInitialized;
            if (var1 == 1) {
               return true;
            } else if (var1 == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream var1) throws IOException {
            this.getSerializedSize();
            if (this.getPathList().size() > 0) {
               var1.writeUInt32NoTag(10);
               var1.writeUInt32NoTag(this.pathMemoizedSerializedSize);
            }

            int var2;
            for(var2 = 0; var2 < this.path_.size(); ++var2) {
               var1.writeInt32NoTag(this.path_.getInt(var2));
            }

            if (this.getSpanList().size() > 0) {
               var1.writeUInt32NoTag(18);
               var1.writeUInt32NoTag(this.spanMemoizedSerializedSize);
            }

            for(var2 = 0; var2 < this.span_.size(); ++var2) {
               var1.writeInt32NoTag(this.span_.getInt(var2));
            }

            if ((this.bitField0_ & 1) != 0) {
               GeneratedMessageV3.writeString(var1, 3, this.leadingComments_);
            }

            if ((this.bitField0_ & 2) != 0) {
               GeneratedMessageV3.writeString(var1, 4, this.trailingComments_);
            }

            for(var2 = 0; var2 < this.leadingDetachedComments_.size(); ++var2) {
               GeneratedMessageV3.writeString(var1, 6, this.leadingDetachedComments_.getRaw(var2));
            }

            this.unknownFields.writeTo(var1);
         }

         public int getSerializedSize() {
            int var1 = this.memoizedSize;
            if (var1 != -1) {
               return var1;
            } else {
               byte var4 = 0;
               int var2 = 0;

               int var3;
               for(var3 = 0; var3 < this.path_.size(); ++var3) {
                  var2 += CodedOutputStream.computeInt32SizeNoTag(this.path_.getInt(var3));
               }

               var1 = var4 + var2;
               if (!this.getPathList().isEmpty()) {
                  ++var1;
                  var1 += CodedOutputStream.computeInt32SizeNoTag(var2);
               }

               this.pathMemoizedSerializedSize = var2;
               var2 = 0;

               for(var3 = 0; var3 < this.span_.size(); ++var3) {
                  var2 += CodedOutputStream.computeInt32SizeNoTag(this.span_.getInt(var3));
               }

               var1 += var2;
               if (!this.getSpanList().isEmpty()) {
                  ++var1;
                  var1 += CodedOutputStream.computeInt32SizeNoTag(var2);
               }

               this.spanMemoizedSerializedSize = var2;
               if ((this.bitField0_ & 1) != 0) {
                  var1 += GeneratedMessageV3.computeStringSize(3, this.leadingComments_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  var1 += GeneratedMessageV3.computeStringSize(4, this.trailingComments_);
               }

               var2 = 0;

               for(var3 = 0; var3 < this.leadingDetachedComments_.size(); ++var3) {
                  var2 += computeStringSizeNoTag(this.leadingDetachedComments_.getRaw(var3));
               }

               var1 += var2;
               var1 += 1 * this.getLeadingDetachedCommentsList().size();
               var1 += this.unknownFields.getSerializedSize();
               this.memoizedSize = var1;
               return var1;
            }
         }

         public boolean equals(Object var1) {
            if (var1 == this) {
               return true;
            } else if (!(var1 instanceof DescriptorProtos.SourceCodeInfo.Location)) {
               return super.equals(var1);
            } else {
               DescriptorProtos.SourceCodeInfo.Location var2 = (DescriptorProtos.SourceCodeInfo.Location)var1;
               if (!this.getPathList().equals(var2.getPathList())) {
                  return false;
               } else if (!this.getSpanList().equals(var2.getSpanList())) {
                  return false;
               } else if (this.hasLeadingComments() != var2.hasLeadingComments()) {
                  return false;
               } else if (this.hasLeadingComments() && !this.getLeadingComments().equals(var2.getLeadingComments())) {
                  return false;
               } else if (this.hasTrailingComments() != var2.hasTrailingComments()) {
                  return false;
               } else if (this.hasTrailingComments() && !this.getTrailingComments().equals(var2.getTrailingComments())) {
                  return false;
               } else if (!this.getLeadingDetachedCommentsList().equals(var2.getLeadingDetachedCommentsList())) {
                  return false;
               } else {
                  return this.unknownFields.equals(var2.unknownFields);
               }
            }
         }

         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               byte var1 = 41;
               int var2 = 19 * var1 + getDescriptor().hashCode();
               if (this.getPathCount() > 0) {
                  var2 = 37 * var2 + 1;
                  var2 = 53 * var2 + this.getPathList().hashCode();
               }

               if (this.getSpanCount() > 0) {
                  var2 = 37 * var2 + 2;
                  var2 = 53 * var2 + this.getSpanList().hashCode();
               }

               if (this.hasLeadingComments()) {
                  var2 = 37 * var2 + 3;
                  var2 = 53 * var2 + this.getLeadingComments().hashCode();
               }

               if (this.hasTrailingComments()) {
                  var2 = 37 * var2 + 4;
                  var2 = 53 * var2 + this.getTrailingComments().hashCode();
               }

               if (this.getLeadingDetachedCommentsCount() > 0) {
                  var2 = 37 * var2 + 6;
                  var2 = 53 * var2 + this.getLeadingDetachedCommentsList().hashCode();
               }

               var2 = 29 * var2 + this.unknownFields.hashCode();
               this.memoizedHashCode = var2;
               return var2;
            }
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.SourceCodeInfo.Location)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.SourceCodeInfo.Location)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteString var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.SourceCodeInfo.Location)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.SourceCodeInfo.Location)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(byte[] var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.SourceCodeInfo.Location)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.SourceCodeInfo.Location)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.SourceCodeInfo.Location)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.SourceCodeInfo.Location)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseDelimitedFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.SourceCodeInfo.Location)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.SourceCodeInfo.Location)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(CodedInputStream var0) throws IOException {
            return (DescriptorProtos.SourceCodeInfo.Location)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.SourceCodeInfo.Location parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.SourceCodeInfo.Location)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.SourceCodeInfo.Location.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.SourceCodeInfo.Location.Builder newBuilder(DescriptorProtos.SourceCodeInfo.Location var0) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
         }

         public DescriptorProtos.SourceCodeInfo.Location.Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new DescriptorProtos.SourceCodeInfo.Location.Builder() : (new DescriptorProtos.SourceCodeInfo.Location.Builder()).mergeFrom(this);
         }

         protected DescriptorProtos.SourceCodeInfo.Location.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
            DescriptorProtos.SourceCodeInfo.Location.Builder var2 = new DescriptorProtos.SourceCodeInfo.Location.Builder(var1);
            return var2;
         }

          @Override
          public byte[] toByteArray() {
              return new byte[0];
          }

          public static DescriptorProtos.SourceCodeInfo.Location getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser parser() {
            return PARSER;
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.SourceCodeInfo.Location getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         // $FF: synthetic method
         Location(GeneratedMessageV3.Builder var1, Object var2) {
            this(var1);
         }

         // $FF: synthetic method
         Location(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
            this(var1, var2);
         }

         public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.SourceCodeInfo.LocationOrBuilder {
            private int bitField0_;
            private Internal.IntList path_;
            private Internal.IntList span_;
            private Object leadingComments_;
            private Object trailingComments_;
            private LazyStringList leadingDetachedComments_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.SourceCodeInfo.Location.class, DescriptorProtos.SourceCodeInfo.Location.Builder.class);
            }

            private Builder() {
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.span_ = GeneratedMessageV3.emptyIntList();
               this.leadingComments_ = "";
               this.trailingComments_ = "";
               this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent var1) {
               super(var1);
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.span_ = GeneratedMessageV3.emptyIntList();
               this.leadingComments_ = "";
               this.trailingComments_ = "";
               this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clear() {
               super.clear();
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.span_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -3;
               this.leadingComments_ = "";
               this.bitField0_ &= -5;
               this.trailingComments_ = "";
               this.bitField0_ &= -9;
               this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
               this.bitField0_ &= -17;
               return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_SourceCodeInfo_Location_descriptor;
            }

            public DescriptorProtos.SourceCodeInfo.Location getDefaultInstanceForType() {
               return DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance();
            }

            public DescriptorProtos.SourceCodeInfo.Location build() {
               DescriptorProtos.SourceCodeInfo.Location var1 = this.buildPartial();
               if (!var1.isInitialized()) {
                  throw newUninitializedMessageException(var1);
               } else {
                  return var1;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location buildPartial() {
               DescriptorProtos.SourceCodeInfo.Location var1 = new DescriptorProtos.SourceCodeInfo.Location(this);
               int var2 = this.bitField0_;
               int var3 = 0;
               if ((this.bitField0_ & 1) != 0) {
                  this.path_.makeImmutable();
                  this.bitField0_ &= -2;
               }

               var1.path_ = this.path_;
               if ((this.bitField0_ & 2) != 0) {
                  this.span_.makeImmutable();
                  this.bitField0_ &= -3;
               }

               var1.span_ = this.span_;
               if ((var2 & 4) != 0) {
                  var3 |= 1;
               }

               var1.leadingComments_ = this.leadingComments_;
               if ((var2 & 8) != 0) {
                  var3 |= 2;
               }

               var1.trailingComments_ = this.trailingComments_;
               if ((this.bitField0_ & 16) != 0) {
                  this.leadingDetachedComments_ = this.leadingDetachedComments_.getUnmodifiableView();
                  this.bitField0_ &= -17;
               }

               var1.leadingDetachedComments_ = this.leadingDetachedComments_;
               var1.bitField0_ = var3;
               this.onBuilt();
               return var1;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clone() {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.clone();
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.setField(var1, var2);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearField(Descriptors.FieldDescriptor var1) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.clearField(var1);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearOneof(Descriptors.OneofDescriptor var1) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.clearOneof(var1);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.setRepeatedField(var1, var2, var3);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.addRepeatedField(var1, var2);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder mergeFrom(Message var1) {
               if (var1 instanceof DescriptorProtos.SourceCodeInfo.Location) {
                  return this.mergeFrom((DescriptorProtos.SourceCodeInfo.Location)var1);
               } else {
                  super.mergeFrom(var1);
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder mergeFrom(DescriptorProtos.SourceCodeInfo.Location var1) {
               if (var1 == DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance()) {
                  return this;
               } else {
                  if (!var1.path_.isEmpty()) {
                     if (this.path_.isEmpty()) {
                        this.path_ = var1.path_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensurePathIsMutable();
                        this.path_.addAll(var1.path_);
                     }

                     this.onChanged();
                  }

                  if (!var1.span_.isEmpty()) {
                     if (this.span_.isEmpty()) {
                        this.span_ = var1.span_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureSpanIsMutable();
                        this.span_.addAll(var1.span_);
                     }

                     this.onChanged();
                  }

                  if (var1.hasLeadingComments()) {
                     this.bitField0_ |= 4;
                     this.leadingComments_ = var1.leadingComments_;
                     this.onChanged();
                  }

                  if (var1.hasTrailingComments()) {
                     this.bitField0_ |= 8;
                     this.trailingComments_ = var1.trailingComments_;
                     this.onChanged();
                  }

                  if (!var1.leadingDetachedComments_.isEmpty()) {
                     if (this.leadingDetachedComments_.isEmpty()) {
                        this.leadingDetachedComments_ = var1.leadingDetachedComments_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureLeadingDetachedCommentsIsMutable();
                        this.leadingDetachedComments_.addAll(var1.leadingDetachedComments_);
                     }

                     this.onChanged();
                  }

                  this.mergeUnknownFields(var1.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
               DescriptorProtos.SourceCodeInfo.Location var3 = null;

               try {
                  var3 = (DescriptorProtos.SourceCodeInfo.Location)DescriptorProtos.SourceCodeInfo.Location.PARSER.parsePartialFrom(var1, var2);
               } catch (InvalidProtocolBufferException var8) {
                  var3 = (DescriptorProtos.SourceCodeInfo.Location)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (var3 != null) {
                     this.mergeFrom(var3);
                  }

               }

               return this;
            }

            private void ensurePathIsMutable() {
               if ((this.bitField0_ & 1) == 0) {
                  this.path_ = GeneratedMessageV3.mutableCopy(this.path_);
                  this.bitField0_ |= 1;
               }

            }

            public List getPathList() {
               return (List)((this.bitField0_ & 1) != 0 ? Collections.unmodifiableList(this.path_) : this.path_);
            }

            public int getPathCount() {
               return this.path_.size();
            }

            public int getPath(int var1) {
               return this.path_.getInt(var1);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setPath(int var1, int var2) {
               this.ensurePathIsMutable();
               this.path_.setInt(var1, var2);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addPath(int var1) {
               this.ensurePathIsMutable();
               this.path_.addInt(var1);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addAllPath(Iterable var1) {
               this.ensurePathIsMutable();
               AbstractMessageLite.Builder.addAll(var1, (List)this.path_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearPath() {
               this.path_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -2;
               this.onChanged();
               return this;
            }

            private void ensureSpanIsMutable() {
               if ((this.bitField0_ & 2) == 0) {
                  this.span_ = GeneratedMessageV3.mutableCopy(this.span_);
                  this.bitField0_ |= 2;
               }

            }

            public List getSpanList() {
               return (List)((this.bitField0_ & 2) != 0 ? Collections.unmodifiableList(this.span_) : this.span_);
            }

            public int getSpanCount() {
               return this.span_.size();
            }

            public int getSpan(int var1) {
               return this.span_.getInt(var1);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setSpan(int var1, int var2) {
               this.ensureSpanIsMutable();
               this.span_.setInt(var1, var2);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addSpan(int var1) {
               this.ensureSpanIsMutable();
               this.span_.addInt(var1);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addAllSpan(Iterable var1) {
               this.ensureSpanIsMutable();
               AbstractMessageLite.Builder.addAll(var1, (List)this.span_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearSpan() {
               this.span_ = GeneratedMessageV3.emptyIntList();
               this.bitField0_ &= -3;
               this.onChanged();
               return this;
            }

            public boolean hasLeadingComments() {
               return (this.bitField0_ & 4) != 0;
            }

            public String getLeadingComments() {
               Object var1 = this.leadingComments_;
               if (!(var1 instanceof String)) {
                  ByteString var2 = (ByteString)var1;
                  String var3 = var2.toStringUtf8();
                  if (var2.isValidUtf8()) {
                     this.leadingComments_ = var3;
                  }

                  return var3;
               } else {
                  return (String)var1;
               }
            }

            public ByteString getLeadingCommentsBytes() {
               Object var1 = this.leadingComments_;
               if (var1 instanceof String) {
                  ByteString var2 = ByteString.copyFromUtf8((String)var1);
                  this.leadingComments_ = var2;
                  return var2;
               } else {
                  return (ByteString)var1;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setLeadingComments(String var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.leadingComments_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearLeadingComments() {
               this.bitField0_ &= -5;
               this.leadingComments_ = DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance().getLeadingComments();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setLeadingCommentsBytes(ByteString var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 4;
                  this.leadingComments_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasTrailingComments() {
               return (this.bitField0_ & 8) != 0;
            }

            public String getTrailingComments() {
               Object var1 = this.trailingComments_;
               if (!(var1 instanceof String)) {
                  ByteString var2 = (ByteString)var1;
                  String var3 = var2.toStringUtf8();
                  if (var2.isValidUtf8()) {
                     this.trailingComments_ = var3;
                  }

                  return var3;
               } else {
                  return (String)var1;
               }
            }

            public ByteString getTrailingCommentsBytes() {
               Object var1 = this.trailingComments_;
               if (var1 instanceof String) {
                  ByteString var2 = ByteString.copyFromUtf8((String)var1);
                  this.trailingComments_ = var2;
                  return var2;
               } else {
                  return (ByteString)var1;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setTrailingComments(String var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 8;
                  this.trailingComments_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearTrailingComments() {
               this.bitField0_ &= -9;
               this.trailingComments_ = DescriptorProtos.SourceCodeInfo.Location.getDefaultInstance().getTrailingComments();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setTrailingCommentsBytes(ByteString var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 8;
                  this.trailingComments_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            private void ensureLeadingDetachedCommentsIsMutable() {
               if ((this.bitField0_ & 16) == 0) {
                  this.leadingDetachedComments_ = new LazyStringArrayList(this.leadingDetachedComments_);
                  this.bitField0_ |= 16;
               }

            }

            public ProtocolStringList getLeadingDetachedCommentsList() {
               return this.leadingDetachedComments_.getUnmodifiableView();
            }

            public int getLeadingDetachedCommentsCount() {
               return this.leadingDetachedComments_.size();
            }

            public String getLeadingDetachedComments(int var1) {
               return (String)this.leadingDetachedComments_.get(var1);
            }

            public ByteString getLeadingDetachedCommentsBytes(int var1) {
               return this.leadingDetachedComments_.getByteString(var1);
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder setLeadingDetachedComments(int var1, String var2) {
               if (var2 == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureLeadingDetachedCommentsIsMutable();
                  this.leadingDetachedComments_.set(var1, (Object)var2);
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addLeadingDetachedComments(String var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureLeadingDetachedCommentsIsMutable();
                  this.leadingDetachedComments_.add((Object)var1);
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addAllLeadingDetachedComments(Iterable var1) {
               this.ensureLeadingDetachedCommentsIsMutable();
               AbstractMessageLite.Builder.addAll(var1, (List)this.leadingDetachedComments_);
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder clearLeadingDetachedComments() {
               this.leadingDetachedComments_ = LazyStringArrayList.EMPTY;
               this.bitField0_ &= -17;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.SourceCodeInfo.Location.Builder addLeadingDetachedCommentsBytes(ByteString var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.ensureLeadingDetachedCommentsIsMutable();
                  this.leadingDetachedComments_.add(var1);
                  this.onChanged();
                  return this;
               }
            }

            public final DescriptorProtos.SourceCodeInfo.Location.Builder setUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.setUnknownFields(var1);
            }

            public final DescriptorProtos.SourceCodeInfo.Location.Builder mergeUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.SourceCodeInfo.Location.Builder)super.mergeUnknownFields(var1);
            }

            // $FF: synthetic method
            Builder(Object var1) {
               this();
            }

            // $FF: synthetic method
            Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
               this(var1);
            }
         }
      }

      public interface LocationOrBuilder extends MessageOrBuilder {
         List getPathList();

         int getPathCount();

         int getPath(int var1);

         List getSpanList();

         int getSpanCount();

         int getSpan(int var1);

         boolean hasLeadingComments();

         String getLeadingComments();

         ByteString getLeadingCommentsBytes();

         boolean hasTrailingComments();

         String getTrailingComments();

         ByteString getTrailingCommentsBytes();

         List getLeadingDetachedCommentsList();

         int getLeadingDetachedCommentsCount();

         String getLeadingDetachedComments(int var1);

         ByteString getLeadingDetachedCommentsBytes(int var1);
      }
   }

   public interface SourceCodeInfoOrBuilder extends MessageOrBuilder {
      List getLocationList();

      DescriptorProtos.SourceCodeInfo.Location getLocation(int var1);

      int getLocationCount();

      List getLocationOrBuilderList();

      DescriptorProtos.SourceCodeInfo.LocationOrBuilder getLocationOrBuilder(int var1);
   }

   public static final class UninterpretedOption extends GeneratedMessageV3 implements DescriptorProtos.UninterpretedOptionOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 2;
      private List name_;
      public static final int IDENTIFIER_VALUE_FIELD_NUMBER = 3;
      private volatile Object identifierValue_;
      public static final int POSITIVE_INT_VALUE_FIELD_NUMBER = 4;
      private long positiveIntValue_;
      public static final int NEGATIVE_INT_VALUE_FIELD_NUMBER = 5;
      private long negativeIntValue_;
      public static final int DOUBLE_VALUE_FIELD_NUMBER = 6;
      private double doubleValue_;
      public static final int STRING_VALUE_FIELD_NUMBER = 7;
      private ByteString stringValue_;
      public static final int AGGREGATE_VALUE_FIELD_NUMBER = 8;
      private volatile Object aggregateValue_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.UninterpretedOption DEFAULT_INSTANCE = new DescriptorProtos.UninterpretedOption();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.UninterpretedOption parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.UninterpretedOption(var1, var2);
         }
      };

      private UninterpretedOption(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private UninterpretedOption() {
         this.memoizedIsInitialized = -1;
         this.name_ = Collections.emptyList();
         this.identifierValue_ = "";
         this.stringValue_ = ByteString.EMPTY;
         this.aggregateValue_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.UninterpretedOption();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private UninterpretedOption(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  ByteString var7;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 18:
                     if (!(var3 & true)) {
                        this.name_ = new ArrayList();
                        var3 |= true;
                     }

                     this.name_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.NamePart.PARSER, var2));
                     break;
                  case 26:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.identifierValue_ = var7;
                     break;
                  case 32:
                     this.bitField0_ |= 2;
                     this.positiveIntValue_ = var1.readUInt64();
                     break;
                  case 40:
                     this.bitField0_ |= 4;
                     this.negativeIntValue_ = var1.readInt64();
                     break;
                  case 49:
                     this.bitField0_ |= 8;
                     this.doubleValue_ = var1.readDouble();
                     break;
                  case 58:
                     this.bitField0_ |= 16;
                     this.stringValue_ = var1.readBytes();
                     break;
                  case 66:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 32;
                     this.aggregateValue_ = var7;
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               if (var3 & true) {
                  this.name_ = Collections.unmodifiableList(this.name_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.UninterpretedOption.class, DescriptorProtos.UninterpretedOption.Builder.class);
      }

      public List getNameList() {
         return this.name_;
      }

      public List getNameOrBuilderList() {
         return this.name_;
      }

      public int getNameCount() {
         return this.name_.size();
      }

      public DescriptorProtos.UninterpretedOption.NamePart getName(int var1) {
         return (DescriptorProtos.UninterpretedOption.NamePart)this.name_.get(var1);
      }

      public DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOption.NamePartOrBuilder)this.name_.get(var1);
      }

      public boolean hasIdentifierValue() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getIdentifierValue() {
         Object var1 = this.identifierValue_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.identifierValue_ = var3;
            }

            return var3;
         }
      }

      public ByteString getIdentifierValueBytes() {
         Object var1 = this.identifierValue_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.identifierValue_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasPositiveIntValue() {
         return (this.bitField0_ & 2) != 0;
      }

      public long getPositiveIntValue() {
         return this.positiveIntValue_;
      }

      public boolean hasNegativeIntValue() {
         return (this.bitField0_ & 4) != 0;
      }

      public long getNegativeIntValue() {
         return this.negativeIntValue_;
      }

      public boolean hasDoubleValue() {
         return (this.bitField0_ & 8) != 0;
      }

      public double getDoubleValue() {
         return this.doubleValue_;
      }

      public boolean hasStringValue() {
         return (this.bitField0_ & 16) != 0;
      }

      public ByteString getStringValue() {
         return this.stringValue_;
      }

      public boolean hasAggregateValue() {
         return (this.bitField0_ & 32) != 0;
      }

      public String getAggregateValue() {
         Object var1 = this.aggregateValue_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.aggregateValue_ = var3;
            }

            return var3;
         }
      }

      public ByteString getAggregateValueBytes() {
         Object var1 = this.aggregateValue_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.aggregateValue_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getNameCount(); ++var2) {
               if (!this.getName(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         for(int var2 = 0; var2 < this.name_.size(); ++var2) {
            var1.writeMessage(2, (MessageLite)this.name_.get(var2));
         }

         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 3, this.identifierValue_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeUInt64(4, this.positiveIntValue_);
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeInt64(5, this.negativeIntValue_);
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeDouble(6, this.doubleValue_);
         }

         if ((this.bitField0_ & 16) != 0) {
            var1.writeBytes(7, this.stringValue_);
         }

         if ((this.bitField0_ & 32) != 0) {
            GeneratedMessageV3.writeString(var1, 8, this.aggregateValue_);
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;

            for(int var2 = 0; var2 < this.name_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(2, (MessageLite)this.name_.get(var2));
            }

            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(3, this.identifierValue_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeUInt64Size(4, this.positiveIntValue_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeInt64Size(5, this.negativeIntValue_);
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeDoubleSize(6, this.doubleValue_);
            }

            if ((this.bitField0_ & 16) != 0) {
               var1 += CodedOutputStream.computeBytesSize(7, this.stringValue_);
            }

            if ((this.bitField0_ & 32) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(8, this.aggregateValue_);
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.UninterpretedOption)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.UninterpretedOption var2 = (DescriptorProtos.UninterpretedOption)var1;
            if (!this.getNameList().equals(var2.getNameList())) {
               return false;
            } else if (this.hasIdentifierValue() != var2.hasIdentifierValue()) {
               return false;
            } else if (this.hasIdentifierValue() && !this.getIdentifierValue().equals(var2.getIdentifierValue())) {
               return false;
            } else if (this.hasPositiveIntValue() != var2.hasPositiveIntValue()) {
               return false;
            } else if (this.hasPositiveIntValue() && this.getPositiveIntValue() != var2.getPositiveIntValue()) {
               return false;
            } else if (this.hasNegativeIntValue() != var2.hasNegativeIntValue()) {
               return false;
            } else if (this.hasNegativeIntValue() && this.getNegativeIntValue() != var2.getNegativeIntValue()) {
               return false;
            } else if (this.hasDoubleValue() != var2.hasDoubleValue()) {
               return false;
            } else if (this.hasDoubleValue() && Double.doubleToLongBits(this.getDoubleValue()) != Double.doubleToLongBits(var2.getDoubleValue())) {
               return false;
            } else if (this.hasStringValue() != var2.hasStringValue()) {
               return false;
            } else if (this.hasStringValue() && !this.getStringValue().equals(var2.getStringValue())) {
               return false;
            } else if (this.hasAggregateValue() != var2.hasAggregateValue()) {
               return false;
            } else if (this.hasAggregateValue() && !this.getAggregateValue().equals(var2.getAggregateValue())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.getNameCount() > 0) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getNameList().hashCode();
            }

            if (this.hasIdentifierValue()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getIdentifierValue().hashCode();
            }

            if (this.hasPositiveIntValue()) {
               var2 = 37 * var2 + 4;
               var2 = 53 * var2 + Internal.hashLong(this.getPositiveIntValue());
            }

            if (this.hasNegativeIntValue()) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + Internal.hashLong(this.getNegativeIntValue());
            }

            if (this.hasDoubleValue()) {
               var2 = 37 * var2 + 6;
               var2 = 53 * var2 + Internal.hashLong(Double.doubleToLongBits(this.getDoubleValue()));
            }

            if (this.hasStringValue()) {
               var2 = 37 * var2 + 7;
               var2 = 53 * var2 + this.getStringValue().hashCode();
            }

            if (this.hasAggregateValue()) {
               var2 = 37 * var2 + 8;
               var2 = 53 * var2 + this.getAggregateValue().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.UninterpretedOption)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.UninterpretedOption)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.UninterpretedOption)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.UninterpretedOption)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.UninterpretedOption)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.UninterpretedOption)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.UninterpretedOption)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.UninterpretedOption)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.UninterpretedOption parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.UninterpretedOption)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.UninterpretedOption parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.UninterpretedOption)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.UninterpretedOption)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.UninterpretedOption parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.UninterpretedOption)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.UninterpretedOption.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.UninterpretedOption.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.UninterpretedOption.Builder newBuilder(DescriptorProtos.UninterpretedOption var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.UninterpretedOption.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.UninterpretedOption.Builder() : (new DescriptorProtos.UninterpretedOption.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.UninterpretedOption.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.UninterpretedOption.Builder var2 = new DescriptorProtos.UninterpretedOption.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.UninterpretedOption getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.UninterpretedOption getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      UninterpretedOption(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      UninterpretedOption(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.UninterpretedOptionOrBuilder {
         private int bitField0_;
         private List name_;
         private RepeatedFieldBuilderV3 nameBuilder_;
         private Object identifierValue_;
         private long positiveIntValue_;
         private long negativeIntValue_;
         private double doubleValue_;
         private ByteString stringValue_;
         private Object aggregateValue_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.UninterpretedOption.class, DescriptorProtos.UninterpretedOption.Builder.class);
         }

         private Builder() {
            this.name_ = Collections.emptyList();
            this.identifierValue_ = "";
            this.stringValue_ = ByteString.EMPTY;
            this.aggregateValue_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = Collections.emptyList();
            this.identifierValue_ = "";
            this.stringValue_ = ByteString.EMPTY;
            this.aggregateValue_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getNameFieldBuilder();
            }

         }

         public DescriptorProtos.UninterpretedOption.Builder clear() {
            super.clear();
            if (this.nameBuilder_ == null) {
               this.name_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.nameBuilder_.clear();
            }

            this.identifierValue_ = "";
            this.bitField0_ &= -3;
            this.positiveIntValue_ = 0L;
            this.bitField0_ &= -5;
            this.negativeIntValue_ = 0L;
            this.bitField0_ &= -9;
            this.doubleValue_ = 0.0D;
            this.bitField0_ &= -17;
            this.stringValue_ = ByteString.EMPTY;
            this.bitField0_ &= -33;
            this.aggregateValue_ = "";
            this.bitField0_ &= -65;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_descriptor;
         }

         public DescriptorProtos.UninterpretedOption getDefaultInstanceForType() {
            return DescriptorProtos.UninterpretedOption.getDefaultInstance();
         }

         public DescriptorProtos.UninterpretedOption build() {
            DescriptorProtos.UninterpretedOption var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.UninterpretedOption buildPartial() {
            DescriptorProtos.UninterpretedOption var1 = new DescriptorProtos.UninterpretedOption(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if (this.nameBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.name_ = Collections.unmodifiableList(this.name_);
                  this.bitField0_ &= -2;
               }

               var1.name_ = this.name_;
            } else {
               var1.name_ = this.nameBuilder_.build();
            }

            if ((var2 & 2) != 0) {
               var3 |= 1;
            }

            var1.identifierValue_ = this.identifierValue_;
            if ((var2 & 4) != 0) {
               var1.positiveIntValue_ = this.positiveIntValue_;
               var3 |= 2;
            }

            if ((var2 & 8) != 0) {
               var1.negativeIntValue_ = this.negativeIntValue_;
               var3 |= 4;
            }

            if ((var2 & 16) != 0) {
               var1.doubleValue_ = this.doubleValue_;
               var3 |= 8;
            }

            if ((var2 & 32) != 0) {
               var3 |= 16;
            }

            var1.stringValue_ = this.stringValue_;
            if ((var2 & 64) != 0) {
               var3 |= 32;
            }

            var1.aggregateValue_ = this.aggregateValue_;
            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.UninterpretedOption.Builder clone() {
            return (DescriptorProtos.UninterpretedOption.Builder)super.clone();
         }

         public DescriptorProtos.UninterpretedOption.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.UninterpretedOption.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.clearField(var1);
         }

         public DescriptorProtos.UninterpretedOption.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.UninterpretedOption.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.UninterpretedOption.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.UninterpretedOption.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.UninterpretedOption) {
               return this.mergeFrom((DescriptorProtos.UninterpretedOption)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder mergeFrom(DescriptorProtos.UninterpretedOption var1) {
            if (var1 == DescriptorProtos.UninterpretedOption.getDefaultInstance()) {
               return this;
            } else {
               if (this.nameBuilder_ == null) {
                  if (!var1.name_.isEmpty()) {
                     if (this.name_.isEmpty()) {
                        this.name_ = var1.name_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureNameIsMutable();
                        this.name_.addAll(var1.name_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.name_.isEmpty()) {
                  if (this.nameBuilder_.isEmpty()) {
                     this.nameBuilder_.dispose();
                     this.nameBuilder_ = null;
                     this.name_ = var1.name_;
                     this.bitField0_ &= -2;
                     this.nameBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getNameFieldBuilder() : null;
                  } else {
                     this.nameBuilder_.addAllMessages(var1.name_);
                  }
               }

               if (var1.hasIdentifierValue()) {
                  this.bitField0_ |= 2;
                  this.identifierValue_ = var1.identifierValue_;
                  this.onChanged();
               }

               if (var1.hasPositiveIntValue()) {
                  this.setPositiveIntValue(var1.getPositiveIntValue());
               }

               if (var1.hasNegativeIntValue()) {
                  this.setNegativeIntValue(var1.getNegativeIntValue());
               }

               if (var1.hasDoubleValue()) {
                  this.setDoubleValue(var1.getDoubleValue());
               }

               if (var1.hasStringValue()) {
                  this.setStringValue(var1.getStringValue());
               }

               if (var1.hasAggregateValue()) {
                  this.bitField0_ |= 64;
                  this.aggregateValue_ = var1.aggregateValue_;
                  this.onChanged();
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getNameCount(); ++var1) {
               if (!this.getName(var1).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public DescriptorProtos.UninterpretedOption.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.UninterpretedOption var3 = null;

            try {
               var3 = (DescriptorProtos.UninterpretedOption)DescriptorProtos.UninterpretedOption.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.UninterpretedOption)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         private void ensureNameIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.name_ = new ArrayList(this.name_);
               this.bitField0_ |= 1;
            }

         }

         public List getNameList() {
            return this.nameBuilder_ == null ? Collections.unmodifiableList(this.name_) : this.nameBuilder_.getMessageList();
         }

         public int getNameCount() {
            return this.nameBuilder_ == null ? this.name_.size() : this.nameBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption.NamePart getName(int var1) {
            return this.nameBuilder_ == null ? (DescriptorProtos.UninterpretedOption.NamePart)this.name_.get(var1) : (DescriptorProtos.UninterpretedOption.NamePart)this.nameBuilder_.getMessage(var1);
         }

         public DescriptorProtos.UninterpretedOption.Builder setName(int var1, DescriptorProtos.UninterpretedOption.NamePart var2) {
            if (this.nameBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureNameIsMutable();
               this.name_.set(var1, var2);
               this.onChanged();
            } else {
               this.nameBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder setName(int var1, DescriptorProtos.UninterpretedOption.NamePart.Builder var2) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.nameBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(DescriptorProtos.UninterpretedOption.NamePart var1) {
            if (this.nameBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureNameIsMutable();
               this.name_.add(var1);
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(int var1, DescriptorProtos.UninterpretedOption.NamePart var2) {
            if (this.nameBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureNameIsMutable();
               this.name_.add(var1, var2);
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(DescriptorProtos.UninterpretedOption.NamePart.Builder var1) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.add(var1.build());
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addName(int var1, DescriptorProtos.UninterpretedOption.NamePart.Builder var2) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.nameBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder addAllName(Iterable var1) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.name_);
               this.onChanged();
            } else {
               this.nameBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearName() {
            if (this.nameBuilder_ == null) {
               this.name_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.nameBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder removeName(int var1) {
            if (this.nameBuilder_ == null) {
               this.ensureNameIsMutable();
               this.name_.remove(var1);
               this.onChanged();
            } else {
               this.nameBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder getNameBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.NamePart.Builder)this.getNameFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int var1) {
            return this.nameBuilder_ == null ? (DescriptorProtos.UninterpretedOption.NamePartOrBuilder)this.name_.get(var1) : (DescriptorProtos.UninterpretedOption.NamePartOrBuilder)this.nameBuilder_.getMessageOrBuilder(var1);
         }

         public List getNameOrBuilderList() {
            return this.nameBuilder_ != null ? this.nameBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.name_);
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder addNameBuilder() {
            return (DescriptorProtos.UninterpretedOption.NamePart.Builder)this.getNameFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder addNameBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.NamePart.Builder)this.getNameFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance());
         }

         public List getNameBuilderList() {
            return this.getNameFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getNameFieldBuilder() {
            if (this.nameBuilder_ == null) {
               this.nameBuilder_ = new RepeatedFieldBuilderV3(this.name_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.name_ = null;
            }

            return this.nameBuilder_;
         }

         public boolean hasIdentifierValue() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getIdentifierValue() {
            Object var1 = this.identifierValue_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.identifierValue_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getIdentifierValueBytes() {
            Object var1 = this.identifierValue_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.identifierValue_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder setIdentifierValue(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.identifierValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder clearIdentifierValue() {
            this.bitField0_ &= -3;
            this.identifierValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getIdentifierValue();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder setIdentifierValueBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.identifierValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPositiveIntValue() {
            return (this.bitField0_ & 4) != 0;
         }

         public long getPositiveIntValue() {
            return this.positiveIntValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setPositiveIntValue(long var1) {
            this.bitField0_ |= 4;
            this.positiveIntValue_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearPositiveIntValue() {
            this.bitField0_ &= -5;
            this.positiveIntValue_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasNegativeIntValue() {
            return (this.bitField0_ & 8) != 0;
         }

         public long getNegativeIntValue() {
            return this.negativeIntValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setNegativeIntValue(long var1) {
            this.bitField0_ |= 8;
            this.negativeIntValue_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearNegativeIntValue() {
            this.bitField0_ &= -9;
            this.negativeIntValue_ = 0L;
            this.onChanged();
            return this;
         }

         public boolean hasDoubleValue() {
            return (this.bitField0_ & 16) != 0;
         }

         public double getDoubleValue() {
            return this.doubleValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setDoubleValue(double var1) {
            this.bitField0_ |= 16;
            this.doubleValue_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder clearDoubleValue() {
            this.bitField0_ &= -17;
            this.doubleValue_ = 0.0D;
            this.onChanged();
            return this;
         }

         public boolean hasStringValue() {
            return (this.bitField0_ & 32) != 0;
         }

         public ByteString getStringValue() {
            return this.stringValue_;
         }

         public DescriptorProtos.UninterpretedOption.Builder setStringValue(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.stringValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder clearStringValue() {
            this.bitField0_ &= -33;
            this.stringValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getStringValue();
            this.onChanged();
            return this;
         }

         public boolean hasAggregateValue() {
            return (this.bitField0_ & 64) != 0;
         }

         public String getAggregateValue() {
            Object var1 = this.aggregateValue_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.aggregateValue_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getAggregateValueBytes() {
            Object var1 = this.aggregateValue_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.aggregateValue_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder setAggregateValue(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.aggregateValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.UninterpretedOption.Builder clearAggregateValue() {
            this.bitField0_ &= -65;
            this.aggregateValue_ = DescriptorProtos.UninterpretedOption.getDefaultInstance().getAggregateValue();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder setAggregateValueBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.aggregateValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.UninterpretedOption.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.UninterpretedOption.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static final class NamePart extends GeneratedMessageV3 implements DescriptorProtos.UninterpretedOption.NamePartOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int NAME_PART_FIELD_NUMBER = 1;
         private volatile Object namePart_;
         public static final int IS_EXTENSION_FIELD_NUMBER = 2;
         private boolean isExtension_;
         private byte memoizedIsInitialized;
         private static final DescriptorProtos.UninterpretedOption.NamePart DEFAULT_INSTANCE = new DescriptorProtos.UninterpretedOption.NamePart();
         /** @deprecated */
         @Deprecated
         public static final Parser PARSER = new AbstractParser() {
            public DescriptorProtos.UninterpretedOption.NamePart parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
               return new DescriptorProtos.UninterpretedOption.NamePart(var1, var2);
            }
         };

         private NamePart(GeneratedMessageV3.Builder var1) {
            super(var1);
            this.memoizedIsInitialized = -1;
         }

         private NamePart() {
            this.memoizedIsInitialized = -1;
            this.namePart_ = "";
         }

         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
            return new DescriptorProtos.UninterpretedOption.NamePart();
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private NamePart(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            this();
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               boolean var3 = false;
               UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

               try {
                  boolean var5 = false;

                  while(!var5) {
                     int var6 = var1.readTag();
                     switch(var6) {
                     case 0:
                        var5 = true;
                        break;
                     case 10:
                        ByteString var7 = var1.readBytes();
                        this.bitField0_ |= 1;
                        this.namePart_ = var7;
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.isExtension_ = var1.readBool();
                        break;
                     default:
                        if (!this.parseUnknownField(var1, var4, var2, var6)) {
                           var5 = true;
                        }
                     }
                  }
               } catch (InvalidProtocolBufferException var12) {
                  throw var12.setUnfinishedMessage(this);
               } catch (IOException var13) {
                  throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = var4.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.UninterpretedOption.NamePart.class, DescriptorProtos.UninterpretedOption.NamePart.Builder.class);
         }

         public boolean hasNamePart() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getNamePart() {
            Object var1 = this.namePart_;
            if (var1 instanceof String) {
               return (String)var1;
            } else {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.namePart_ = var3;
               }

               return var3;
            }
         }

         public ByteString getNamePartBytes() {
            Object var1 = this.namePart_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.namePart_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public boolean hasIsExtension() {
            return (this.bitField0_ & 2) != 0;
         }

         public boolean getIsExtension() {
            return this.isExtension_;
         }

         public final boolean isInitialized() {
            byte var1 = this.memoizedIsInitialized;
            if (var1 == 1) {
               return true;
            } else if (var1 == 0) {
               return false;
            } else if (!this.hasNamePart()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else if (!this.hasIsExtension()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream var1) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               GeneratedMessageV3.writeString(var1, 1, this.namePart_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1.writeBool(2, this.isExtension_);
            }

            this.unknownFields.writeTo(var1);
         }

         public int getSerializedSize() {
            int var1 = this.memoizedSize;
            if (var1 != -1) {
               return var1;
            } else {
               var1 = 0;
               if ((this.bitField0_ & 1) != 0) {
                  var1 += GeneratedMessageV3.computeStringSize(1, this.namePart_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  var1 += CodedOutputStream.computeBoolSize(2, this.isExtension_);
               }

               var1 += this.unknownFields.getSerializedSize();
               this.memoizedSize = var1;
               return var1;
            }
         }

         public boolean equals(Object var1) {
            if (var1 == this) {
               return true;
            } else if (!(var1 instanceof DescriptorProtos.UninterpretedOption.NamePart)) {
               return super.equals(var1);
            } else {
               DescriptorProtos.UninterpretedOption.NamePart var2 = (DescriptorProtos.UninterpretedOption.NamePart)var1;
               if (this.hasNamePart() != var2.hasNamePart()) {
                  return false;
               } else if (this.hasNamePart() && !this.getNamePart().equals(var2.getNamePart())) {
                  return false;
               } else if (this.hasIsExtension() != var2.hasIsExtension()) {
                  return false;
               } else if (this.hasIsExtension() && this.getIsExtension() != var2.getIsExtension()) {
                  return false;
               } else {
                  return this.unknownFields.equals(var2.unknownFields);
               }
            }
         }

         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               byte var1 = 41;
               int var2 = 19 * var1 + getDescriptor().hashCode();
               if (this.hasNamePart()) {
                  var2 = 37 * var2 + 1;
                  var2 = 53 * var2 + this.getNamePart().hashCode();
               }

               if (this.hasIsExtension()) {
                  var2 = 37 * var2 + 2;
                  var2 = 53 * var2 + Internal.hashBoolean(this.getIsExtension());
               }

               var2 = 29 * var2 + this.unknownFields.hashCode();
               this.memoizedHashCode = var2;
               return var2;
            }
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.UninterpretedOption.NamePart)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.UninterpretedOption.NamePart)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteString var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.UninterpretedOption.NamePart)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.UninterpretedOption.NamePart)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(byte[] var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.UninterpretedOption.NamePart)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.UninterpretedOption.NamePart)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.UninterpretedOption.NamePart)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.UninterpretedOption.NamePart)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseDelimitedFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.UninterpretedOption.NamePart)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.UninterpretedOption.NamePart)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(CodedInputStream var0) throws IOException {
            return (DescriptorProtos.UninterpretedOption.NamePart)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.UninterpretedOption.NamePart parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.UninterpretedOption.NamePart)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilder(DescriptorProtos.UninterpretedOption.NamePart var0) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
         }

         public DescriptorProtos.UninterpretedOption.NamePart.Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new DescriptorProtos.UninterpretedOption.NamePart.Builder() : (new DescriptorProtos.UninterpretedOption.NamePart.Builder()).mergeFrom(this);
         }

         protected DescriptorProtos.UninterpretedOption.NamePart.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
            DescriptorProtos.UninterpretedOption.NamePart.Builder var2 = new DescriptorProtos.UninterpretedOption.NamePart.Builder(var1);
            return var2;
         }

          @Override
          public byte[] toByteArray() {
              return new byte[0];
          }

          public static DescriptorProtos.UninterpretedOption.NamePart getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser parser() {
            return PARSER;
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.UninterpretedOption.NamePart getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         // $FF: synthetic method
         NamePart(GeneratedMessageV3.Builder var1, Object var2) {
            this(var1);
         }

         // $FF: synthetic method
         NamePart(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
            this(var1, var2);
         }

         public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.UninterpretedOption.NamePartOrBuilder {
            private int bitField0_;
            private Object namePart_;
            private boolean isExtension_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.UninterpretedOption.NamePart.class, DescriptorProtos.UninterpretedOption.NamePart.Builder.class);
            }

            private Builder() {
               this.namePart_ = "";
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent var1) {
               super(var1);
               this.namePart_ = "";
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clear() {
               super.clear();
               this.namePart_ = "";
               this.bitField0_ &= -2;
               this.isExtension_ = false;
               this.bitField0_ &= -3;
               return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_UninterpretedOption_NamePart_descriptor;
            }

            public DescriptorProtos.UninterpretedOption.NamePart getDefaultInstanceForType() {
               return DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance();
            }

            public DescriptorProtos.UninterpretedOption.NamePart build() {
               DescriptorProtos.UninterpretedOption.NamePart var1 = this.buildPartial();
               if (!var1.isInitialized()) {
                  throw newUninitializedMessageException(var1);
               } else {
                  return var1;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart buildPartial() {
               DescriptorProtos.UninterpretedOption.NamePart var1 = new DescriptorProtos.UninterpretedOption.NamePart(this);
               int var2 = this.bitField0_;
               int var3 = 0;
               if ((var2 & 1) != 0) {
                  var3 |= 1;
               }

               var1.namePart_ = this.namePart_;
               if ((var2 & 2) != 0) {
                  var1.isExtension_ = this.isExtension_;
                  var3 |= 2;
               }

               var1.bitField0_ = var3;
               this.onBuilt();
               return var1;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clone() {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.clone();
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.setField(var1, var2);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearField(Descriptors.FieldDescriptor var1) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.clearField(var1);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearOneof(Descriptors.OneofDescriptor var1) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.clearOneof(var1);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.setRepeatedField(var1, var2, var3);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.addRepeatedField(var1, var2);
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder mergeFrom(Message var1) {
               if (var1 instanceof DescriptorProtos.UninterpretedOption.NamePart) {
                  return this.mergeFrom((DescriptorProtos.UninterpretedOption.NamePart)var1);
               } else {
                  super.mergeFrom(var1);
                  return this;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder mergeFrom(DescriptorProtos.UninterpretedOption.NamePart var1) {
               if (var1 == DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance()) {
                  return this;
               } else {
                  if (var1.hasNamePart()) {
                     this.bitField0_ |= 1;
                     this.namePart_ = var1.namePart_;
                     this.onChanged();
                  }

                  if (var1.hasIsExtension()) {
                     this.setIsExtension(var1.getIsExtension());
                  }

                  this.mergeUnknownFields(var1.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            public final boolean isInitialized() {
               if (!this.hasNamePart()) {
                  return false;
               } else {
                  return this.hasIsExtension();
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
               DescriptorProtos.UninterpretedOption.NamePart var3 = null;

               try {
                  var3 = (DescriptorProtos.UninterpretedOption.NamePart)DescriptorProtos.UninterpretedOption.NamePart.PARSER.parsePartialFrom(var1, var2);
               } catch (InvalidProtocolBufferException var8) {
                  var3 = (DescriptorProtos.UninterpretedOption.NamePart)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (var3 != null) {
                     this.mergeFrom(var3);
                  }

               }

               return this;
            }

            public boolean hasNamePart() {
               return (this.bitField0_ & 1) != 0;
            }

            public String getNamePart() {
               Object var1 = this.namePart_;
               if (!(var1 instanceof String)) {
                  ByteString var2 = (ByteString)var1;
                  String var3 = var2.toStringUtf8();
                  if (var2.isValidUtf8()) {
                     this.namePart_ = var3;
                  }

                  return var3;
               } else {
                  return (String)var1;
               }
            }

            public ByteString getNamePartBytes() {
               Object var1 = this.namePart_;
               if (var1 instanceof String) {
                  ByteString var2 = ByteString.copyFromUtf8((String)var1);
                  this.namePart_ = var2;
                  return var2;
               } else {
                  return (ByteString)var1;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setNamePart(String var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.namePart_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearNamePart() {
               this.bitField0_ &= -2;
               this.namePart_ = DescriptorProtos.UninterpretedOption.NamePart.getDefaultInstance().getNamePart();
               this.onChanged();
               return this;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setNamePartBytes(ByteString var1) {
               if (var1 == null) {
                  throw new NullPointerException();
               } else {
                  this.bitField0_ |= 1;
                  this.namePart_ = var1;
                  this.onChanged();
                  return this;
               }
            }

            public boolean hasIsExtension() {
               return (this.bitField0_ & 2) != 0;
            }

            public boolean getIsExtension() {
               return this.isExtension_;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder setIsExtension(boolean var1) {
               this.bitField0_ |= 2;
               this.isExtension_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.UninterpretedOption.NamePart.Builder clearIsExtension() {
               this.bitField0_ &= -3;
               this.isExtension_ = false;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.UninterpretedOption.NamePart.Builder setUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.setUnknownFields(var1);
            }

            public final DescriptorProtos.UninterpretedOption.NamePart.Builder mergeUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.UninterpretedOption.NamePart.Builder)super.mergeUnknownFields(var1);
            }

            // $FF: synthetic method
            Builder(Object var1) {
               this();
            }

            // $FF: synthetic method
            Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
               this(var1);
            }
         }
      }

      public interface NamePartOrBuilder extends MessageOrBuilder {
         boolean hasNamePart();

         String getNamePart();

         ByteString getNamePartBytes();

         boolean hasIsExtension();

         boolean getIsExtension();
      }
   }

   public interface UninterpretedOptionOrBuilder extends MessageOrBuilder {
      List getNameList();

      DescriptorProtos.UninterpretedOption.NamePart getName(int var1);

      int getNameCount();

      List getNameOrBuilderList();

      DescriptorProtos.UninterpretedOption.NamePartOrBuilder getNameOrBuilder(int var1);

      boolean hasIdentifierValue();

      String getIdentifierValue();

      ByteString getIdentifierValueBytes();

      boolean hasPositiveIntValue();

      long getPositiveIntValue();

      boolean hasNegativeIntValue();

      long getNegativeIntValue();

      boolean hasDoubleValue();

      double getDoubleValue();

      boolean hasStringValue();

      ByteString getStringValue();

      boolean hasAggregateValue();

      String getAggregateValue();

      ByteString getAggregateValueBytes();
   }

   public static final class MethodOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.MethodOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int DEPRECATED_FIELD_NUMBER = 33;
      private boolean deprecated_;
      public static final int IDEMPOTENCY_LEVEL_FIELD_NUMBER = 34;
      private int idempotencyLevel_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.MethodOptions DEFAULT_INSTANCE = new DescriptorProtos.MethodOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.MethodOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.MethodOptions(var1, var2);
         }
      };

      private MethodOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private MethodOptions() {
         this.memoizedIsInitialized = -1;
         this.idempotencyLevel_ = 0;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.MethodOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MethodOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 264:
                     this.bitField0_ |= 1;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 272:
                     int var7 = var1.readEnum();
                     DescriptorProtos.MethodOptions.IdempotencyLevel var8 = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(var7);
                     if (var8 == null) {
                        var4.mergeVarintField(34, var7);
                     } else {
                        this.bitField0_ |= 2;
                        this.idempotencyLevel_ = var7;
                     }
                     break;
                  case 7994:
                     if ((var3 & 4) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 4;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.MethodOptions.class, DescriptorProtos.MethodOptions.Builder.class);
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 1) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public boolean hasIdempotencyLevel() {
         return (this.bitField0_ & 2) != 0;
      }

      public DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() {
         DescriptorProtos.MethodOptions.IdempotencyLevel var1 = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(this.idempotencyLevel_);
         return var1 == null ? DescriptorProtos.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN : var1;
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            var1.writeBool(33, this.deprecated_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeEnum(34, this.idempotencyLevel_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += CodedOutputStream.computeBoolSize(33, this.deprecated_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeEnumSize(34, this.idempotencyLevel_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.MethodOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.MethodOptions var2 = (DescriptorProtos.MethodOptions)var1;
            if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (this.hasIdempotencyLevel() != var2.hasIdempotencyLevel()) {
               return false;
            } else if (this.hasIdempotencyLevel() && this.idempotencyLevel_ != var2.idempotencyLevel_) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 33;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasIdempotencyLevel()) {
               var2 = 37 * var2 + 34;
               var2 = 53 * var2 + this.idempotencyLevel_;
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MethodOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MethodOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MethodOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MethodOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.MethodOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MethodOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MethodOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.MethodOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.MethodOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MethodOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MethodOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.MethodOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.MethodOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MethodOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MethodOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.MethodOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.MethodOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.MethodOptions.Builder newBuilder(DescriptorProtos.MethodOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.MethodOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.MethodOptions.Builder() : (new DescriptorProtos.MethodOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.MethodOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.MethodOptions.Builder var2 = new DescriptorProtos.MethodOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.MethodOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.MethodOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      MethodOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      MethodOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.MethodOptionsOrBuilder {
         private int bitField0_;
         private boolean deprecated_;
         private int idempotencyLevel_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_MethodOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.MethodOptions.class, DescriptorProtos.MethodOptions.Builder.class);
         }

         private Builder() {
            this.idempotencyLevel_ = 0;
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.idempotencyLevel_ = 0;
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.MethodOptions.Builder clear() {
            super.clear();
            this.deprecated_ = false;
            this.bitField0_ &= -2;
            this.idempotencyLevel_ = 0;
            this.bitField0_ &= -3;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_MethodOptions_descriptor;
         }

         public DescriptorProtos.MethodOptions getDefaultInstanceForType() {
            return DescriptorProtos.MethodOptions.getDefaultInstance();
         }

         public DescriptorProtos.MethodOptions build() {
            DescriptorProtos.MethodOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.MethodOptions buildPartial() {
            DescriptorProtos.MethodOptions var1 = new DescriptorProtos.MethodOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 1;
            }

            if ((var2 & 2) != 0) {
               var3 |= 2;
            }

            var1.idempotencyLevel_ = this.idempotencyLevel_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -5;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.MethodOptions.Builder clone() {
            return (DescriptorProtos.MethodOptions.Builder)super.clone();
         }

         public DescriptorProtos.MethodOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.MethodOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.MethodOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.MethodOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.MethodOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.MethodOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.MethodOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.MethodOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.MethodOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.MethodOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.MethodOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.MethodOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.MethodOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.MethodOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.MethodOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.MethodOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.MethodOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.MethodOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.MethodOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.MethodOptions) {
               return this.mergeFrom((DescriptorProtos.MethodOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.MethodOptions.Builder mergeFrom(DescriptorProtos.MethodOptions var1) {
            if (var1 == DescriptorProtos.MethodOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (var1.hasIdempotencyLevel()) {
                  this.setIdempotencyLevel(var1.getIdempotencyLevel());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -5;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.MethodOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.MethodOptions var3 = null;

            try {
               var3 = (DescriptorProtos.MethodOptions)DescriptorProtos.MethodOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.MethodOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 1) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.MethodOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 1;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasIdempotencyLevel() {
            return (this.bitField0_ & 2) != 0;
         }

         public DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel() {
            DescriptorProtos.MethodOptions.IdempotencyLevel var1 = DescriptorProtos.MethodOptions.IdempotencyLevel.valueOf(this.idempotencyLevel_);
            return var1 == null ? DescriptorProtos.MethodOptions.IdempotencyLevel.IDEMPOTENCY_UNKNOWN : var1;
         }

         public DescriptorProtos.MethodOptions.Builder setIdempotencyLevel(DescriptorProtos.MethodOptions.IdempotencyLevel var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.idempotencyLevel_ = var1.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodOptions.Builder clearIdempotencyLevel() {
            this.bitField0_ &= -3;
            this.idempotencyLevel_ = 0;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 4;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.MethodOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.MethodOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.MethodOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.MethodOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.MethodOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.MethodOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static enum IdempotencyLevel implements ProtocolMessageEnum {
         IDEMPOTENCY_UNKNOWN(0),
         NO_SIDE_EFFECTS(1),
         IDEMPOTENT(2);

         public static final int IDEMPOTENCY_UNKNOWN_VALUE = 0;
         public static final int NO_SIDE_EFFECTS_VALUE = 1;
         public static final int IDEMPOTENT_VALUE = 2;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public DescriptorProtos.MethodOptions.IdempotencyLevel findValueByNumber(int var1) {
               return DescriptorProtos.MethodOptions.IdempotencyLevel.forNumber(var1);
            }
         };
         private static final DescriptorProtos.MethodOptions.IdempotencyLevel[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static DescriptorProtos.MethodOptions.IdempotencyLevel valueOf(int var0) {
            return forNumber(var0);
         }

         public static DescriptorProtos.MethodOptions.IdempotencyLevel forNumber(int var0) {
            switch(var0) {
            case 0:
               return IDEMPOTENCY_UNKNOWN;
            case 1:
               return NO_SIDE_EFFECTS;
            case 2:
               return IDEMPOTENT;
            default:
               return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.MethodOptions.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.MethodOptions.IdempotencyLevel valueOf(Descriptors.EnumValueDescriptor var0) {
            if (var0.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[var0.getIndex()];
            }
         }

         private IdempotencyLevel(int var3) {
            this.value = var3;
         }
      }
   }

   public interface MethodOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasIdempotencyLevel();

      DescriptorProtos.MethodOptions.IdempotencyLevel getIdempotencyLevel();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class ServiceOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.ServiceOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int DEPRECATED_FIELD_NUMBER = 33;
      private boolean deprecated_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.ServiceOptions DEFAULT_INSTANCE = new DescriptorProtos.ServiceOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.ServiceOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.ServiceOptions(var1, var2);
         }
      };

      private ServiceOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private ServiceOptions() {
         this.memoizedIsInitialized = -1;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.ServiceOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ServiceOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 264:
                     this.bitField0_ |= 1;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 7994:
                     if ((var3 & 2) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 2;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.ServiceOptions.class, DescriptorProtos.ServiceOptions.Builder.class);
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 1) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            var1.writeBool(33, this.deprecated_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += CodedOutputStream.computeBoolSize(33, this.deprecated_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.ServiceOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.ServiceOptions var2 = (DescriptorProtos.ServiceOptions)var1;
            if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 33;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.ServiceOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ServiceOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.ServiceOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.ServiceOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ServiceOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ServiceOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.ServiceOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ServiceOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ServiceOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.ServiceOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.ServiceOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.ServiceOptions.Builder newBuilder(DescriptorProtos.ServiceOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.ServiceOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.ServiceOptions.Builder() : (new DescriptorProtos.ServiceOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.ServiceOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.ServiceOptions.Builder var2 = new DescriptorProtos.ServiceOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.ServiceOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.ServiceOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      ServiceOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      ServiceOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.ServiceOptionsOrBuilder {
         private int bitField0_;
         private boolean deprecated_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.ServiceOptions.class, DescriptorProtos.ServiceOptions.Builder.class);
         }

         private Builder() {
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.ServiceOptions.Builder clear() {
            super.clear();
            this.deprecated_ = false;
            this.bitField0_ &= -2;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceOptions_descriptor;
         }

         public DescriptorProtos.ServiceOptions getDefaultInstanceForType() {
            return DescriptorProtos.ServiceOptions.getDefaultInstance();
         }

         public DescriptorProtos.ServiceOptions build() {
            DescriptorProtos.ServiceOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.ServiceOptions buildPartial() {
            DescriptorProtos.ServiceOptions var1 = new DescriptorProtos.ServiceOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 1;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -3;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.ServiceOptions.Builder clone() {
            return (DescriptorProtos.ServiceOptions.Builder)super.clone();
         }

         public DescriptorProtos.ServiceOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.ServiceOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.ServiceOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.ServiceOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.ServiceOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.ServiceOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.ServiceOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.ServiceOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.ServiceOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.ServiceOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.ServiceOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.ServiceOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.ServiceOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.ServiceOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.ServiceOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.ServiceOptions) {
               return this.mergeFrom((DescriptorProtos.ServiceOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.ServiceOptions.Builder mergeFrom(DescriptorProtos.ServiceOptions var1) {
            if (var1 == DescriptorProtos.ServiceOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -3;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.ServiceOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.ServiceOptions var3 = null;

            try {
               var3 = (DescriptorProtos.ServiceOptions)DescriptorProtos.ServiceOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.ServiceOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 1) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.ServiceOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 1;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 2;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.ServiceOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.ServiceOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.ServiceOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.ServiceOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.ServiceOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface ServiceOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasDeprecated();

      boolean getDeprecated();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class EnumValueOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.EnumValueOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int DEPRECATED_FIELD_NUMBER = 1;
      private boolean deprecated_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.EnumValueOptions DEFAULT_INSTANCE = new DescriptorProtos.EnumValueOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.EnumValueOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumValueOptions(var1, var2);
         }
      };

      private EnumValueOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private EnumValueOptions() {
         this.memoizedIsInitialized = -1;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.EnumValueOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumValueOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 8:
                     this.bitField0_ |= 1;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 7994:
                     if ((var3 & 2) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 2;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueOptions.class, DescriptorProtos.EnumValueOptions.Builder.class);
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 1) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            var1.writeBool(1, this.deprecated_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += CodedOutputStream.computeBoolSize(1, this.deprecated_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.EnumValueOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.EnumValueOptions var2 = (DescriptorProtos.EnumValueOptions)var1;
            if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumValueOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumValueOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumValueOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumValueOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumValueOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumValueOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.EnumValueOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumValueOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumValueOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.EnumValueOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumValueOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumValueOptions.Builder newBuilder(DescriptorProtos.EnumValueOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.EnumValueOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumValueOptions.Builder() : (new DescriptorProtos.EnumValueOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.EnumValueOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.EnumValueOptions.Builder var2 = new DescriptorProtos.EnumValueOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.EnumValueOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumValueOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      EnumValueOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      EnumValueOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.EnumValueOptionsOrBuilder {
         private int bitField0_;
         private boolean deprecated_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueOptions.class, DescriptorProtos.EnumValueOptions.Builder.class);
         }

         private Builder() {
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.EnumValueOptions.Builder clear() {
            super.clear();
            this.deprecated_ = false;
            this.bitField0_ &= -2;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueOptions_descriptor;
         }

         public DescriptorProtos.EnumValueOptions getDefaultInstanceForType() {
            return DescriptorProtos.EnumValueOptions.getDefaultInstance();
         }

         public DescriptorProtos.EnumValueOptions build() {
            DescriptorProtos.EnumValueOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.EnumValueOptions buildPartial() {
            DescriptorProtos.EnumValueOptions var1 = new DescriptorProtos.EnumValueOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 1;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -3;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.EnumValueOptions.Builder clone() {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clone();
         }

         public DescriptorProtos.EnumValueOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.EnumValueOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.EnumValueOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.EnumValueOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.EnumValueOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.EnumValueOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.EnumValueOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.EnumValueOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.EnumValueOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.EnumValueOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.EnumValueOptions) {
               return this.mergeFrom((DescriptorProtos.EnumValueOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.EnumValueOptions.Builder mergeFrom(DescriptorProtos.EnumValueOptions var1) {
            if (var1 == DescriptorProtos.EnumValueOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -3;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.EnumValueOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.EnumValueOptions var3 = null;

            try {
               var3 = (DescriptorProtos.EnumValueOptions)DescriptorProtos.EnumValueOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.EnumValueOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 1) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.EnumValueOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 1;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 2;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.EnumValueOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.EnumValueOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.EnumValueOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumValueOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface EnumValueOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasDeprecated();

      boolean getDeprecated();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class EnumOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.EnumOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int ALLOW_ALIAS_FIELD_NUMBER = 2;
      private boolean allowAlias_;
      public static final int DEPRECATED_FIELD_NUMBER = 3;
      private boolean deprecated_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.EnumOptions DEFAULT_INSTANCE = new DescriptorProtos.EnumOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.EnumOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumOptions(var1, var2);
         }
      };

      private EnumOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private EnumOptions() {
         this.memoizedIsInitialized = -1;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.EnumOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 16:
                     this.bitField0_ |= 1;
                     this.allowAlias_ = var1.readBool();
                     break;
                  case 24:
                     this.bitField0_ |= 2;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 7994:
                     if ((var3 & 4) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 4;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumOptions.class, DescriptorProtos.EnumOptions.Builder.class);
      }

      public boolean hasAllowAlias() {
         return (this.bitField0_ & 1) != 0;
      }

      public boolean getAllowAlias() {
         return this.allowAlias_;
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 2) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            var1.writeBool(2, this.allowAlias_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeBool(3, this.deprecated_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += CodedOutputStream.computeBoolSize(2, this.allowAlias_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeBoolSize(3, this.deprecated_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.EnumOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.EnumOptions var2 = (DescriptorProtos.EnumOptions)var1;
            if (this.hasAllowAlias() != var2.hasAllowAlias()) {
               return false;
            } else if (this.hasAllowAlias() && this.getAllowAlias() != var2.getAllowAlias()) {
               return false;
            } else if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasAllowAlias()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + Internal.hashBoolean(this.getAllowAlias());
            }

            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.EnumOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.EnumOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumOptions.Builder newBuilder(DescriptorProtos.EnumOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.EnumOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumOptions.Builder() : (new DescriptorProtos.EnumOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.EnumOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.EnumOptions.Builder var2 = new DescriptorProtos.EnumOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.EnumOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      EnumOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      EnumOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.EnumOptionsOrBuilder {
         private int bitField0_;
         private boolean allowAlias_;
         private boolean deprecated_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumOptions.class, DescriptorProtos.EnumOptions.Builder.class);
         }

         private Builder() {
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.EnumOptions.Builder clear() {
            super.clear();
            this.allowAlias_ = false;
            this.bitField0_ &= -2;
            this.deprecated_ = false;
            this.bitField0_ &= -3;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumOptions_descriptor;
         }

         public DescriptorProtos.EnumOptions getDefaultInstanceForType() {
            return DescriptorProtos.EnumOptions.getDefaultInstance();
         }

         public DescriptorProtos.EnumOptions build() {
            DescriptorProtos.EnumOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.EnumOptions buildPartial() {
            DescriptorProtos.EnumOptions var1 = new DescriptorProtos.EnumOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var1.allowAlias_ = this.allowAlias_;
               var3 |= 1;
            }

            if ((var2 & 2) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 2;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -5;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.EnumOptions.Builder clone() {
            return (DescriptorProtos.EnumOptions.Builder)super.clone();
         }

         public DescriptorProtos.EnumOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.EnumOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.EnumOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.EnumOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.EnumOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.EnumOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.EnumOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.EnumOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.EnumOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.EnumOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.EnumOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.EnumOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.EnumOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.EnumOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.EnumOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.EnumOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.EnumOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.EnumOptions) {
               return this.mergeFrom((DescriptorProtos.EnumOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.EnumOptions.Builder mergeFrom(DescriptorProtos.EnumOptions var1) {
            if (var1 == DescriptorProtos.EnumOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasAllowAlias()) {
                  this.setAllowAlias(var1.getAllowAlias());
               }

               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -5;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.EnumOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.EnumOptions var3 = null;

            try {
               var3 = (DescriptorProtos.EnumOptions)DescriptorProtos.EnumOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.EnumOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasAllowAlias() {
            return (this.bitField0_ & 1) != 0;
         }

         public boolean getAllowAlias() {
            return this.allowAlias_;
         }

         public DescriptorProtos.EnumOptions.Builder setAllowAlias(boolean var1) {
            this.bitField0_ |= 1;
            this.allowAlias_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumOptions.Builder clearAllowAlias() {
            this.bitField0_ &= -2;
            this.allowAlias_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 2) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.EnumOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 2;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumOptions.Builder clearDeprecated() {
            this.bitField0_ &= -3;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 4;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.EnumOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.EnumOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.EnumOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface EnumOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasAllowAlias();

      boolean getAllowAlias();

      boolean hasDeprecated();

      boolean getDeprecated();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class OneofOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.OneofOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.OneofOptions DEFAULT_INSTANCE = new DescriptorProtos.OneofOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.OneofOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.OneofOptions(var1, var2);
         }
      };

      private OneofOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private OneofOptions() {
         this.memoizedIsInitialized = -1;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.OneofOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private OneofOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 7994:
                     if (!(var3 & true)) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= true;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if (var3 & true) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.OneofOptions.class, DescriptorProtos.OneofOptions.Builder.class);
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.OneofOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.OneofOptions var2 = (DescriptorProtos.OneofOptions)var1;
            if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.OneofOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.OneofOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.OneofOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.OneofOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.OneofOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.OneofOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.OneofOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.OneofOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.OneofOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.OneofOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.OneofOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.OneofOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.OneofOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.OneofOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.OneofOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.OneofOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.OneofOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.OneofOptions.Builder newBuilder(DescriptorProtos.OneofOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.OneofOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.OneofOptions.Builder() : (new DescriptorProtos.OneofOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.OneofOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.OneofOptions.Builder var2 = new DescriptorProtos.OneofOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.OneofOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.OneofOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      OneofOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      OneofOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.OneofOptionsOrBuilder {
         private int bitField0_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_OneofOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.OneofOptions.class, DescriptorProtos.OneofOptions.Builder.class);
         }

         private Builder() {
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.OneofOptions.Builder clear() {
            super.clear();
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_OneofOptions_descriptor;
         }

         public DescriptorProtos.OneofOptions getDefaultInstanceForType() {
            return DescriptorProtos.OneofOptions.getDefaultInstance();
         }

         public DescriptorProtos.OneofOptions build() {
            DescriptorProtos.OneofOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.OneofOptions buildPartial() {
            DescriptorProtos.OneofOptions var1 = new DescriptorProtos.OneofOptions(this);
            int var2 = this.bitField0_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -2;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.OneofOptions.Builder clone() {
            return (DescriptorProtos.OneofOptions.Builder)super.clone();
         }

         public DescriptorProtos.OneofOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.OneofOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.OneofOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.OneofOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.OneofOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.OneofOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.OneofOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.OneofOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.OneofOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.OneofOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.OneofOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.OneofOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.OneofOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.OneofOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.OneofOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.OneofOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.OneofOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.OneofOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.OneofOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.OneofOptions) {
               return this.mergeFrom((DescriptorProtos.OneofOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.OneofOptions.Builder mergeFrom(DescriptorProtos.OneofOptions var1) {
            if (var1 == DescriptorProtos.OneofOptions.getDefaultInstance()) {
               return this;
            } else {
               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -2;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.OneofOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.OneofOptions var3 = null;

            try {
               var3 = (DescriptorProtos.OneofOptions)DescriptorProtos.OneofOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.OneofOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 1;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.OneofOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.OneofOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.OneofOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.OneofOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.OneofOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.OneofOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface OneofOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class FieldOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.FieldOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int CTYPE_FIELD_NUMBER = 1;
      private int ctype_;
      public static final int PACKED_FIELD_NUMBER = 2;
      private boolean packed_;
      public static final int JSTYPE_FIELD_NUMBER = 6;
      private int jstype_;
      public static final int LAZY_FIELD_NUMBER = 5;
      private boolean lazy_;
      public static final int DEPRECATED_FIELD_NUMBER = 3;
      private boolean deprecated_;
      public static final int WEAK_FIELD_NUMBER = 10;
      private boolean weak_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.FieldOptions DEFAULT_INSTANCE = new DescriptorProtos.FieldOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.FieldOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FieldOptions(var1, var2);
         }
      };

      private FieldOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private FieldOptions() {
         this.memoizedIsInitialized = -1;
         this.ctype_ = 0;
         this.jstype_ = 0;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.FieldOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FieldOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  int var7;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 8:
                     var7 = var1.readEnum();
                     DescriptorProtos.FieldOptions.CType var16 = DescriptorProtos.FieldOptions.CType.valueOf(var7);
                     if (var16 == null) {
                        var4.mergeVarintField(1, var7);
                     } else {
                        this.bitField0_ |= 1;
                        this.ctype_ = var7;
                     }
                     break;
                  case 16:
                     this.bitField0_ |= 2;
                     this.packed_ = var1.readBool();
                     break;
                  case 24:
                     this.bitField0_ |= 16;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 40:
                     this.bitField0_ |= 8;
                     this.lazy_ = var1.readBool();
                     break;
                  case 48:
                     var7 = var1.readEnum();
                     DescriptorProtos.FieldOptions.JSType var8 = DescriptorProtos.FieldOptions.JSType.valueOf(var7);
                     if (var8 == null) {
                        var4.mergeVarintField(6, var7);
                     } else {
                        this.bitField0_ |= 4;
                        this.jstype_ = var7;
                     }
                     break;
                  case 80:
                     this.bitField0_ |= 32;
                     this.weak_ = var1.readBool();
                     break;
                  case 7994:
                     if ((var3 & 64) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 64;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 64) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FieldOptions.class, DescriptorProtos.FieldOptions.Builder.class);
      }

      public boolean hasCtype() {
         return (this.bitField0_ & 1) != 0;
      }

      public DescriptorProtos.FieldOptions.CType getCtype() {
         DescriptorProtos.FieldOptions.CType var1 = DescriptorProtos.FieldOptions.CType.valueOf(this.ctype_);
         return var1 == null ? DescriptorProtos.FieldOptions.CType.STRING : var1;
      }

      public boolean hasPacked() {
         return (this.bitField0_ & 2) != 0;
      }

      public boolean getPacked() {
         return this.packed_;
      }

      public boolean hasJstype() {
         return (this.bitField0_ & 4) != 0;
      }

      public DescriptorProtos.FieldOptions.JSType getJstype() {
         DescriptorProtos.FieldOptions.JSType var1 = DescriptorProtos.FieldOptions.JSType.valueOf(this.jstype_);
         return var1 == null ? DescriptorProtos.FieldOptions.JSType.JS_NORMAL : var1;
      }

      public boolean hasLazy() {
         return (this.bitField0_ & 8) != 0;
      }

      public boolean getLazy() {
         return this.lazy_;
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 16) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public boolean hasWeak() {
         return (this.bitField0_ & 32) != 0;
      }

      public boolean getWeak() {
         return this.weak_;
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            var1.writeEnum(1, this.ctype_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeBool(2, this.packed_);
         }

         if ((this.bitField0_ & 16) != 0) {
            var1.writeBool(3, this.deprecated_);
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeBool(5, this.lazy_);
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeEnum(6, this.jstype_);
         }

         if ((this.bitField0_ & 32) != 0) {
            var1.writeBool(10, this.weak_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += CodedOutputStream.computeEnumSize(1, this.ctype_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeBoolSize(2, this.packed_);
            }

            if ((this.bitField0_ & 16) != 0) {
               var1 += CodedOutputStream.computeBoolSize(3, this.deprecated_);
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeBoolSize(5, this.lazy_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeEnumSize(6, this.jstype_);
            }

            if ((this.bitField0_ & 32) != 0) {
               var1 += CodedOutputStream.computeBoolSize(10, this.weak_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.FieldOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.FieldOptions var2 = (DescriptorProtos.FieldOptions)var1;
            if (this.hasCtype() != var2.hasCtype()) {
               return false;
            } else if (this.hasCtype() && this.ctype_ != var2.ctype_) {
               return false;
            } else if (this.hasPacked() != var2.hasPacked()) {
               return false;
            } else if (this.hasPacked() && this.getPacked() != var2.getPacked()) {
               return false;
            } else if (this.hasJstype() != var2.hasJstype()) {
               return false;
            } else if (this.hasJstype() && this.jstype_ != var2.jstype_) {
               return false;
            } else if (this.hasLazy() != var2.hasLazy()) {
               return false;
            } else if (this.hasLazy() && this.getLazy() != var2.getLazy()) {
               return false;
            } else if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (this.hasWeak() != var2.hasWeak()) {
               return false;
            } else if (this.hasWeak() && this.getWeak() != var2.getWeak()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasCtype()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.ctype_;
            }

            if (this.hasPacked()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + Internal.hashBoolean(this.getPacked());
            }

            if (this.hasJstype()) {
               var2 = 37 * var2 + 6;
               var2 = 53 * var2 + this.jstype_;
            }

            if (this.hasLazy()) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + Internal.hashBoolean(this.getLazy());
            }

            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasWeak()) {
               var2 = 37 * var2 + 10;
               var2 = 53 * var2 + Internal.hashBoolean(this.getWeak());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FieldOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FieldOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FieldOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FieldOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FieldOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FieldOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FieldOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FieldOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FieldOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FieldOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FieldOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FieldOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.FieldOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FieldOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FieldOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.FieldOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FieldOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FieldOptions.Builder newBuilder(DescriptorProtos.FieldOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.FieldOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FieldOptions.Builder() : (new DescriptorProtos.FieldOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.FieldOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.FieldOptions.Builder var2 = new DescriptorProtos.FieldOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.FieldOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FieldOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      FieldOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      FieldOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.FieldOptionsOrBuilder {
         private int bitField0_;
         private int ctype_;
         private boolean packed_;
         private int jstype_;
         private boolean lazy_;
         private boolean deprecated_;
         private boolean weak_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FieldOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FieldOptions.class, DescriptorProtos.FieldOptions.Builder.class);
         }

         private Builder() {
            this.ctype_ = 0;
            this.jstype_ = 0;
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.ctype_ = 0;
            this.jstype_ = 0;
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.FieldOptions.Builder clear() {
            super.clear();
            this.ctype_ = 0;
            this.bitField0_ &= -2;
            this.packed_ = false;
            this.bitField0_ &= -3;
            this.jstype_ = 0;
            this.bitField0_ &= -5;
            this.lazy_ = false;
            this.bitField0_ &= -9;
            this.deprecated_ = false;
            this.bitField0_ &= -17;
            this.weak_ = false;
            this.bitField0_ &= -33;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FieldOptions_descriptor;
         }

         public DescriptorProtos.FieldOptions getDefaultInstanceForType() {
            return DescriptorProtos.FieldOptions.getDefaultInstance();
         }

         public DescriptorProtos.FieldOptions build() {
            DescriptorProtos.FieldOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.FieldOptions buildPartial() {
            DescriptorProtos.FieldOptions var1 = new DescriptorProtos.FieldOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.ctype_ = this.ctype_;
            if ((var2 & 2) != 0) {
               var1.packed_ = this.packed_;
               var3 |= 2;
            }

            if ((var2 & 4) != 0) {
               var3 |= 4;
            }

            var1.jstype_ = this.jstype_;
            if ((var2 & 8) != 0) {
               var1.lazy_ = this.lazy_;
               var3 |= 8;
            }

            if ((var2 & 16) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 16;
            }

            if ((var2 & 32) != 0) {
               var1.weak_ = this.weak_;
               var3 |= 32;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -65;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.FieldOptions.Builder clone() {
            return (DescriptorProtos.FieldOptions.Builder)super.clone();
         }

         public DescriptorProtos.FieldOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FieldOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.FieldOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.FieldOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.FieldOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.FieldOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.FieldOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.FieldOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.FieldOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FieldOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.FieldOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.FieldOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.FieldOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.FieldOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.FieldOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.FieldOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.FieldOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.FieldOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.FieldOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.FieldOptions) {
               return this.mergeFrom((DescriptorProtos.FieldOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.FieldOptions.Builder mergeFrom(DescriptorProtos.FieldOptions var1) {
            if (var1 == DescriptorProtos.FieldOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasCtype()) {
                  this.setCtype(var1.getCtype());
               }

               if (var1.hasPacked()) {
                  this.setPacked(var1.getPacked());
               }

               if (var1.hasJstype()) {
                  this.setJstype(var1.getJstype());
               }

               if (var1.hasLazy()) {
                  this.setLazy(var1.getLazy());
               }

               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (var1.hasWeak()) {
                  this.setWeak(var1.getWeak());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -65;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.FieldOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.FieldOptions var3 = null;

            try {
               var3 = (DescriptorProtos.FieldOptions)DescriptorProtos.FieldOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.FieldOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasCtype() {
            return (this.bitField0_ & 1) != 0;
         }

         public DescriptorProtos.FieldOptions.CType getCtype() {
            DescriptorProtos.FieldOptions.CType var1 = DescriptorProtos.FieldOptions.CType.valueOf(this.ctype_);
            return var1 == null ? DescriptorProtos.FieldOptions.CType.STRING : var1;
         }

         public DescriptorProtos.FieldOptions.Builder setCtype(DescriptorProtos.FieldOptions.CType var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.ctype_ = var1.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldOptions.Builder clearCtype() {
            this.bitField0_ &= -2;
            this.ctype_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasPacked() {
            return (this.bitField0_ & 2) != 0;
         }

         public boolean getPacked() {
            return this.packed_;
         }

         public DescriptorProtos.FieldOptions.Builder setPacked(boolean var1) {
            this.bitField0_ |= 2;
            this.packed_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearPacked() {
            this.bitField0_ &= -3;
            this.packed_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasJstype() {
            return (this.bitField0_ & 4) != 0;
         }

         public DescriptorProtos.FieldOptions.JSType getJstype() {
            DescriptorProtos.FieldOptions.JSType var1 = DescriptorProtos.FieldOptions.JSType.valueOf(this.jstype_);
            return var1 == null ? DescriptorProtos.FieldOptions.JSType.JS_NORMAL : var1;
         }

         public DescriptorProtos.FieldOptions.Builder setJstype(DescriptorProtos.FieldOptions.JSType var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.jstype_ = var1.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldOptions.Builder clearJstype() {
            this.bitField0_ &= -5;
            this.jstype_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasLazy() {
            return (this.bitField0_ & 8) != 0;
         }

         public boolean getLazy() {
            return this.lazy_;
         }

         public DescriptorProtos.FieldOptions.Builder setLazy(boolean var1) {
            this.bitField0_ |= 8;
            this.lazy_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearLazy() {
            this.bitField0_ &= -9;
            this.lazy_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 16) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.FieldOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 16;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearDeprecated() {
            this.bitField0_ &= -17;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasWeak() {
            return (this.bitField0_ & 32) != 0;
         }

         public boolean getWeak() {
            return this.weak_;
         }

         public DescriptorProtos.FieldOptions.Builder setWeak(boolean var1) {
            this.bitField0_ |= 32;
            this.weak_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearWeak() {
            this.bitField0_ &= -33;
            this.weak_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 64;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FieldOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FieldOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.FieldOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FieldOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.FieldOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FieldOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static enum JSType implements ProtocolMessageEnum {
         JS_NORMAL(0),
         JS_STRING(1),
         JS_NUMBER(2);

         public static final int JS_NORMAL_VALUE = 0;
         public static final int JS_STRING_VALUE = 1;
         public static final int JS_NUMBER_VALUE = 2;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public DescriptorProtos.FieldOptions.JSType findValueByNumber(int var1) {
               return DescriptorProtos.FieldOptions.JSType.forNumber(var1);
            }
         };
         private static final DescriptorProtos.FieldOptions.JSType[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static DescriptorProtos.FieldOptions.JSType valueOf(int var0) {
            return forNumber(var0);
         }

         public static DescriptorProtos.FieldOptions.JSType forNumber(int var0) {
            switch(var0) {
            case 0:
               return JS_NORMAL;
            case 1:
               return JS_STRING;
            case 2:
               return JS_NUMBER;
            default:
               return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldOptions.getDescriptor().getEnumTypes().get(1);
         }

         public static DescriptorProtos.FieldOptions.JSType valueOf(Descriptors.EnumValueDescriptor var0) {
            if (var0.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[var0.getIndex()];
            }
         }

         private JSType(int var3) {
            this.value = var3;
         }
      }

      public static enum CType implements ProtocolMessageEnum {
         STRING(0),
         CORD(1),
         STRING_PIECE(2);

         public static final int STRING_VALUE = 0;
         public static final int CORD_VALUE = 1;
         public static final int STRING_PIECE_VALUE = 2;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public DescriptorProtos.FieldOptions.CType findValueByNumber(int var1) {
               return DescriptorProtos.FieldOptions.CType.forNumber(var1);
            }
         };
         private static final DescriptorProtos.FieldOptions.CType[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static DescriptorProtos.FieldOptions.CType valueOf(int var0) {
            return forNumber(var0);
         }

         public static DescriptorProtos.FieldOptions.CType forNumber(int var0) {
            switch(var0) {
            case 0:
               return STRING;
            case 1:
               return CORD;
            case 2:
               return STRING_PIECE;
            default:
               return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldOptions.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.FieldOptions.CType valueOf(Descriptors.EnumValueDescriptor var0) {
            if (var0.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[var0.getIndex()];
            }
         }

         private CType(int var3) {
            this.value = var3;
         }
      }
   }

   public interface FieldOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasCtype();

      DescriptorProtos.FieldOptions.CType getCtype();

      boolean hasPacked();

      boolean getPacked();

      boolean hasJstype();

      DescriptorProtos.FieldOptions.JSType getJstype();

      boolean hasLazy();

      boolean getLazy();

      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasWeak();

      boolean getWeak();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class MessageOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.MessageOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int MESSAGE_SET_WIRE_FORMAT_FIELD_NUMBER = 1;
      private boolean messageSetWireFormat_;
      public static final int NO_STANDARD_DESCRIPTOR_ACCESSOR_FIELD_NUMBER = 2;
      private boolean noStandardDescriptorAccessor_;
      public static final int DEPRECATED_FIELD_NUMBER = 3;
      private boolean deprecated_;
      public static final int MAP_ENTRY_FIELD_NUMBER = 7;
      private boolean mapEntry_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.MessageOptions DEFAULT_INSTANCE = new DescriptorProtos.MessageOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.MessageOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.MessageOptions(var1, var2);
         }
      };

      private MessageOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private MessageOptions() {
         this.memoizedIsInitialized = -1;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.MessageOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MessageOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 8:
                     this.bitField0_ |= 1;
                     this.messageSetWireFormat_ = var1.readBool();
                     break;
                  case 16:
                     this.bitField0_ |= 2;
                     this.noStandardDescriptorAccessor_ = var1.readBool();
                     break;
                  case 24:
                     this.bitField0_ |= 4;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 56:
                     this.bitField0_ |= 8;
                     this.mapEntry_ = var1.readBool();
                     break;
                  case 7994:
                     if ((var3 & 16) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 16;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 16) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.MessageOptions.class, DescriptorProtos.MessageOptions.Builder.class);
      }

      public boolean hasMessageSetWireFormat() {
         return (this.bitField0_ & 1) != 0;
      }

      public boolean getMessageSetWireFormat() {
         return this.messageSetWireFormat_;
      }

      public boolean hasNoStandardDescriptorAccessor() {
         return (this.bitField0_ & 2) != 0;
      }

      public boolean getNoStandardDescriptorAccessor() {
         return this.noStandardDescriptorAccessor_;
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 4) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public boolean hasMapEntry() {
         return (this.bitField0_ & 8) != 0;
      }

      public boolean getMapEntry() {
         return this.mapEntry_;
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            var1.writeBool(1, this.messageSetWireFormat_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeBool(2, this.noStandardDescriptorAccessor_);
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeBool(3, this.deprecated_);
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeBool(7, this.mapEntry_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += CodedOutputStream.computeBoolSize(1, this.messageSetWireFormat_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeBoolSize(2, this.noStandardDescriptorAccessor_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeBoolSize(3, this.deprecated_);
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeBoolSize(7, this.mapEntry_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.MessageOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.MessageOptions var2 = (DescriptorProtos.MessageOptions)var1;
            if (this.hasMessageSetWireFormat() != var2.hasMessageSetWireFormat()) {
               return false;
            } else if (this.hasMessageSetWireFormat() && this.getMessageSetWireFormat() != var2.getMessageSetWireFormat()) {
               return false;
            } else if (this.hasNoStandardDescriptorAccessor() != var2.hasNoStandardDescriptorAccessor()) {
               return false;
            } else if (this.hasNoStandardDescriptorAccessor() && this.getNoStandardDescriptorAccessor() != var2.getNoStandardDescriptorAccessor()) {
               return false;
            } else if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (this.hasMapEntry() != var2.hasMapEntry()) {
               return false;
            } else if (this.hasMapEntry() && this.getMapEntry() != var2.getMapEntry()) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasMessageSetWireFormat()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + Internal.hashBoolean(this.getMessageSetWireFormat());
            }

            if (this.hasNoStandardDescriptorAccessor()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + Internal.hashBoolean(this.getNoStandardDescriptorAccessor());
            }

            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasMapEntry()) {
               var2 = 37 * var2 + 7;
               var2 = 53 * var2 + Internal.hashBoolean(this.getMapEntry());
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MessageOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MessageOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MessageOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MessageOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MessageOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MessageOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MessageOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MessageOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MessageOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MessageOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.MessageOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MessageOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MessageOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.MessageOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.MessageOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MessageOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MessageOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.MessageOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.MessageOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MessageOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MessageOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.MessageOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.MessageOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.MessageOptions.Builder newBuilder(DescriptorProtos.MessageOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.MessageOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.MessageOptions.Builder() : (new DescriptorProtos.MessageOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.MessageOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.MessageOptions.Builder var2 = new DescriptorProtos.MessageOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.MessageOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.MessageOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      MessageOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      MessageOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.MessageOptionsOrBuilder {
         private int bitField0_;
         private boolean messageSetWireFormat_;
         private boolean noStandardDescriptorAccessor_;
         private boolean deprecated_;
         private boolean mapEntry_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_MessageOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.MessageOptions.class, DescriptorProtos.MessageOptions.Builder.class);
         }

         private Builder() {
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.MessageOptions.Builder clear() {
            super.clear();
            this.messageSetWireFormat_ = false;
            this.bitField0_ &= -2;
            this.noStandardDescriptorAccessor_ = false;
            this.bitField0_ &= -3;
            this.deprecated_ = false;
            this.bitField0_ &= -5;
            this.mapEntry_ = false;
            this.bitField0_ &= -9;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -17;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_MessageOptions_descriptor;
         }

         public DescriptorProtos.MessageOptions getDefaultInstanceForType() {
            return DescriptorProtos.MessageOptions.getDefaultInstance();
         }

         public DescriptorProtos.MessageOptions build() {
            DescriptorProtos.MessageOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.MessageOptions buildPartial() {
            DescriptorProtos.MessageOptions var1 = new DescriptorProtos.MessageOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var1.messageSetWireFormat_ = this.messageSetWireFormat_;
               var3 |= 1;
            }

            if ((var2 & 2) != 0) {
               var1.noStandardDescriptorAccessor_ = this.noStandardDescriptorAccessor_;
               var3 |= 2;
            }

            if ((var2 & 4) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 4;
            }

            if ((var2 & 8) != 0) {
               var1.mapEntry_ = this.mapEntry_;
               var3 |= 8;
            }

            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 16) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -17;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.MessageOptions.Builder clone() {
            return (DescriptorProtos.MessageOptions.Builder)super.clone();
         }

         public DescriptorProtos.MessageOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.MessageOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.MessageOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.MessageOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.MessageOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.MessageOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.MessageOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.MessageOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.MessageOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.MessageOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.MessageOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.MessageOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.MessageOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.MessageOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.MessageOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.MessageOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.MessageOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.MessageOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.MessageOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.MessageOptions) {
               return this.mergeFrom((DescriptorProtos.MessageOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.MessageOptions.Builder mergeFrom(DescriptorProtos.MessageOptions var1) {
            if (var1 == DescriptorProtos.MessageOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasMessageSetWireFormat()) {
                  this.setMessageSetWireFormat(var1.getMessageSetWireFormat());
               }

               if (var1.hasNoStandardDescriptorAccessor()) {
                  this.setNoStandardDescriptorAccessor(var1.getNoStandardDescriptorAccessor());
               }

               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (var1.hasMapEntry()) {
                  this.setMapEntry(var1.getMapEntry());
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -17;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.MessageOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.MessageOptions var3 = null;

            try {
               var3 = (DescriptorProtos.MessageOptions)DescriptorProtos.MessageOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.MessageOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasMessageSetWireFormat() {
            return (this.bitField0_ & 1) != 0;
         }

         public boolean getMessageSetWireFormat() {
            return this.messageSetWireFormat_;
         }

         public DescriptorProtos.MessageOptions.Builder setMessageSetWireFormat(boolean var1) {
            this.bitField0_ |= 1;
            this.messageSetWireFormat_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearMessageSetWireFormat() {
            this.bitField0_ &= -2;
            this.messageSetWireFormat_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasNoStandardDescriptorAccessor() {
            return (this.bitField0_ & 2) != 0;
         }

         public boolean getNoStandardDescriptorAccessor() {
            return this.noStandardDescriptorAccessor_;
         }

         public DescriptorProtos.MessageOptions.Builder setNoStandardDescriptorAccessor(boolean var1) {
            this.bitField0_ |= 2;
            this.noStandardDescriptorAccessor_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearNoStandardDescriptorAccessor() {
            this.bitField0_ &= -3;
            this.noStandardDescriptorAccessor_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 4) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.MessageOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 4;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearDeprecated() {
            this.bitField0_ &= -5;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasMapEntry() {
            return (this.bitField0_ & 8) != 0;
         }

         public boolean getMapEntry() {
            return this.mapEntry_;
         }

         public DescriptorProtos.MessageOptions.Builder setMapEntry(boolean var1) {
            this.bitField0_ |= 8;
            this.mapEntry_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearMapEntry() {
            this.bitField0_ &= -9;
            this.mapEntry_ = false;
            this.onChanged();
            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 16;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.MessageOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -17;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.MessageOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 16) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.MessageOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.MessageOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.MessageOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.MessageOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface MessageOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasMessageSetWireFormat();

      boolean getMessageSetWireFormat();

      boolean hasNoStandardDescriptorAccessor();

      boolean getNoStandardDescriptorAccessor();

      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasMapEntry();

      boolean getMapEntry();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class FileOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.FileOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int JAVA_PACKAGE_FIELD_NUMBER = 1;
      private volatile Object javaPackage_;
      public static final int JAVA_OUTER_CLASSNAME_FIELD_NUMBER = 8;
      private volatile Object javaOuterClassname_;
      public static final int JAVA_MULTIPLE_FILES_FIELD_NUMBER = 10;
      private boolean javaMultipleFiles_;
      public static final int JAVA_GENERATE_EQUALS_AND_HASH_FIELD_NUMBER = 20;
      private boolean javaGenerateEqualsAndHash_;
      public static final int JAVA_STRING_CHECK_UTF8_FIELD_NUMBER = 27;
      private boolean javaStringCheckUtf8_;
      public static final int OPTIMIZE_FOR_FIELD_NUMBER = 9;
      private int optimizeFor_;
      public static final int GO_PACKAGE_FIELD_NUMBER = 11;
      private volatile Object goPackage_;
      public static final int CC_GENERIC_SERVICES_FIELD_NUMBER = 16;
      private boolean ccGenericServices_;
      public static final int JAVA_GENERIC_SERVICES_FIELD_NUMBER = 17;
      private boolean javaGenericServices_;
      public static final int PY_GENERIC_SERVICES_FIELD_NUMBER = 18;
      private boolean pyGenericServices_;
      public static final int PHP_GENERIC_SERVICES_FIELD_NUMBER = 42;
      private boolean phpGenericServices_;
      public static final int DEPRECATED_FIELD_NUMBER = 23;
      private boolean deprecated_;
      public static final int CC_ENABLE_ARENAS_FIELD_NUMBER = 31;
      private boolean ccEnableArenas_;
      public static final int OBJC_CLASS_PREFIX_FIELD_NUMBER = 36;
      private volatile Object objcClassPrefix_;
      public static final int CSHARP_NAMESPACE_FIELD_NUMBER = 37;
      private volatile Object csharpNamespace_;
      public static final int SWIFT_PREFIX_FIELD_NUMBER = 39;
      private volatile Object swiftPrefix_;
      public static final int PHP_CLASS_PREFIX_FIELD_NUMBER = 40;
      private volatile Object phpClassPrefix_;
      public static final int PHP_NAMESPACE_FIELD_NUMBER = 41;
      private volatile Object phpNamespace_;
      public static final int PHP_METADATA_NAMESPACE_FIELD_NUMBER = 44;
      private volatile Object phpMetadataNamespace_;
      public static final int RUBY_PACKAGE_FIELD_NUMBER = 45;
      private volatile Object rubyPackage_;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.FileOptions DEFAULT_INSTANCE = new DescriptorProtos.FileOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.FileOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FileOptions(var1, var2);
         }
      };

      private FileOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private FileOptions() {
         this.memoizedIsInitialized = -1;
         this.javaPackage_ = "";
         this.javaOuterClassname_ = "";
         this.optimizeFor_ = 1;
         this.goPackage_ = "";
         this.objcClassPrefix_ = "";
         this.csharpNamespace_ = "";
         this.swiftPrefix_ = "";
         this.phpClassPrefix_ = "";
         this.phpNamespace_ = "";
         this.phpMetadataNamespace_ = "";
         this.rubyPackage_ = "";
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.FileOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  ByteString var7;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.javaPackage_ = var7;
                     break;
                  case 66:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 2;
                     this.javaOuterClassname_ = var7;
                     break;
                  case 72:
                     int var16 = var1.readEnum();
                     DescriptorProtos.FileOptions.OptimizeMode var8 = DescriptorProtos.FileOptions.OptimizeMode.valueOf(var16);
                     if (var8 == null) {
                        var4.mergeVarintField(9, var16);
                     } else {
                        this.bitField0_ |= 32;
                        this.optimizeFor_ = var16;
                     }
                     break;
                  case 80:
                     this.bitField0_ |= 4;
                     this.javaMultipleFiles_ = var1.readBool();
                     break;
                  case 90:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 64;
                     this.goPackage_ = var7;
                     break;
                  case 128:
                     this.bitField0_ |= 128;
                     this.ccGenericServices_ = var1.readBool();
                     break;
                  case 136:
                     this.bitField0_ |= 256;
                     this.javaGenericServices_ = var1.readBool();
                     break;
                  case 144:
                     this.bitField0_ |= 512;
                     this.pyGenericServices_ = var1.readBool();
                     break;
                  case 160:
                     this.bitField0_ |= 8;
                     this.javaGenerateEqualsAndHash_ = var1.readBool();
                     break;
                  case 184:
                     this.bitField0_ |= 2048;
                     this.deprecated_ = var1.readBool();
                     break;
                  case 216:
                     this.bitField0_ |= 16;
                     this.javaStringCheckUtf8_ = var1.readBool();
                     break;
                  case 248:
                     this.bitField0_ |= 4096;
                     this.ccEnableArenas_ = var1.readBool();
                     break;
                  case 290:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 8192;
                     this.objcClassPrefix_ = var7;
                     break;
                  case 298:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 16384;
                     this.csharpNamespace_ = var7;
                     break;
                  case 314:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 32768;
                     this.swiftPrefix_ = var7;
                     break;
                  case 322:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 65536;
                     this.phpClassPrefix_ = var7;
                     break;
                  case 330:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 131072;
                     this.phpNamespace_ = var7;
                     break;
                  case 336:
                     this.bitField0_ |= 1024;
                     this.phpGenericServices_ = var1.readBool();
                     break;
                  case 354:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 262144;
                     this.phpMetadataNamespace_ = var7;
                     break;
                  case 362:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 524288;
                     this.rubyPackage_ = var7;
                     break;
                  case 7994:
                     if ((var3 & 1048576) == 0) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= 1048576;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 1048576) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FileOptions.class, DescriptorProtos.FileOptions.Builder.class);
      }

      public boolean hasJavaPackage() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getJavaPackage() {
         Object var1 = this.javaPackage_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.javaPackage_ = var3;
            }

            return var3;
         }
      }

      public ByteString getJavaPackageBytes() {
         Object var1 = this.javaPackage_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.javaPackage_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasJavaOuterClassname() {
         return (this.bitField0_ & 2) != 0;
      }

      public String getJavaOuterClassname() {
         Object var1 = this.javaOuterClassname_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.javaOuterClassname_ = var3;
            }

            return var3;
         }
      }

      public ByteString getJavaOuterClassnameBytes() {
         Object var1 = this.javaOuterClassname_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.javaOuterClassname_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasJavaMultipleFiles() {
         return (this.bitField0_ & 4) != 0;
      }

      public boolean getJavaMultipleFiles() {
         return this.javaMultipleFiles_;
      }

      /** @deprecated */
      @Deprecated
      public boolean hasJavaGenerateEqualsAndHash() {
         return (this.bitField0_ & 8) != 0;
      }

      /** @deprecated */
      @Deprecated
      public boolean getJavaGenerateEqualsAndHash() {
         return this.javaGenerateEqualsAndHash_;
      }

      public boolean hasJavaStringCheckUtf8() {
         return (this.bitField0_ & 16) != 0;
      }

      public boolean getJavaStringCheckUtf8() {
         return this.javaStringCheckUtf8_;
      }

      public boolean hasOptimizeFor() {
         return (this.bitField0_ & 32) != 0;
      }

      public DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() {
         DescriptorProtos.FileOptions.OptimizeMode var1 = DescriptorProtos.FileOptions.OptimizeMode.valueOf(this.optimizeFor_);
         return var1 == null ? DescriptorProtos.FileOptions.OptimizeMode.SPEED : var1;
      }

      public boolean hasGoPackage() {
         return (this.bitField0_ & 64) != 0;
      }

      public String getGoPackage() {
         Object var1 = this.goPackage_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.goPackage_ = var3;
            }

            return var3;
         }
      }

      public ByteString getGoPackageBytes() {
         Object var1 = this.goPackage_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.goPackage_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasCcGenericServices() {
         return (this.bitField0_ & 128) != 0;
      }

      public boolean getCcGenericServices() {
         return this.ccGenericServices_;
      }

      public boolean hasJavaGenericServices() {
         return (this.bitField0_ & 256) != 0;
      }

      public boolean getJavaGenericServices() {
         return this.javaGenericServices_;
      }

      public boolean hasPyGenericServices() {
         return (this.bitField0_ & 512) != 0;
      }

      public boolean getPyGenericServices() {
         return this.pyGenericServices_;
      }

      public boolean hasPhpGenericServices() {
         return (this.bitField0_ & 1024) != 0;
      }

      public boolean getPhpGenericServices() {
         return this.phpGenericServices_;
      }

      public boolean hasDeprecated() {
         return (this.bitField0_ & 2048) != 0;
      }

      public boolean getDeprecated() {
         return this.deprecated_;
      }

      public boolean hasCcEnableArenas() {
         return (this.bitField0_ & 4096) != 0;
      }

      public boolean getCcEnableArenas() {
         return this.ccEnableArenas_;
      }

      public boolean hasObjcClassPrefix() {
         return (this.bitField0_ & 8192) != 0;
      }

      public String getObjcClassPrefix() {
         Object var1 = this.objcClassPrefix_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.objcClassPrefix_ = var3;
            }

            return var3;
         }
      }

      public ByteString getObjcClassPrefixBytes() {
         Object var1 = this.objcClassPrefix_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.objcClassPrefix_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasCsharpNamespace() {
         return (this.bitField0_ & 16384) != 0;
      }

      public String getCsharpNamespace() {
         Object var1 = this.csharpNamespace_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.csharpNamespace_ = var3;
            }

            return var3;
         }
      }

      public ByteString getCsharpNamespaceBytes() {
         Object var1 = this.csharpNamespace_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.csharpNamespace_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasSwiftPrefix() {
         return (this.bitField0_ & '耀') != 0;
      }

      public String getSwiftPrefix() {
         Object var1 = this.swiftPrefix_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.swiftPrefix_ = var3;
            }

            return var3;
         }
      }

      public ByteString getSwiftPrefixBytes() {
         Object var1 = this.swiftPrefix_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.swiftPrefix_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasPhpClassPrefix() {
         return (this.bitField0_ & 65536) != 0;
      }

      public String getPhpClassPrefix() {
         Object var1 = this.phpClassPrefix_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.phpClassPrefix_ = var3;
            }

            return var3;
         }
      }

      public ByteString getPhpClassPrefixBytes() {
         Object var1 = this.phpClassPrefix_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.phpClassPrefix_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasPhpNamespace() {
         return (this.bitField0_ & 131072) != 0;
      }

      public String getPhpNamespace() {
         Object var1 = this.phpNamespace_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.phpNamespace_ = var3;
            }

            return var3;
         }
      }

      public ByteString getPhpNamespaceBytes() {
         Object var1 = this.phpNamespace_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.phpNamespace_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasPhpMetadataNamespace() {
         return (this.bitField0_ & 262144) != 0;
      }

      public String getPhpMetadataNamespace() {
         Object var1 = this.phpMetadataNamespace_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.phpMetadataNamespace_ = var3;
            }

            return var3;
         }
      }

      public ByteString getPhpMetadataNamespaceBytes() {
         Object var1 = this.phpMetadataNamespace_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.phpMetadataNamespace_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasRubyPackage() {
         return (this.bitField0_ & 524288) != 0;
      }

      public String getRubyPackage() {
         Object var1 = this.rubyPackage_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.rubyPackage_ = var3;
            }

            return var3;
         }
      }

      public ByteString getRubyPackageBytes() {
         Object var1 = this.rubyPackage_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.rubyPackage_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.javaPackage_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(var1, 8, this.javaOuterClassname_);
         }

         if ((this.bitField0_ & 32) != 0) {
            var1.writeEnum(9, this.optimizeFor_);
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeBool(10, this.javaMultipleFiles_);
         }

         if ((this.bitField0_ & 64) != 0) {
            GeneratedMessageV3.writeString(var1, 11, this.goPackage_);
         }

         if ((this.bitField0_ & 128) != 0) {
            var1.writeBool(16, this.ccGenericServices_);
         }

         if ((this.bitField0_ & 256) != 0) {
            var1.writeBool(17, this.javaGenericServices_);
         }

         if ((this.bitField0_ & 512) != 0) {
            var1.writeBool(18, this.pyGenericServices_);
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeBool(20, this.javaGenerateEqualsAndHash_);
         }

         if ((this.bitField0_ & 2048) != 0) {
            var1.writeBool(23, this.deprecated_);
         }

         if ((this.bitField0_ & 16) != 0) {
            var1.writeBool(27, this.javaStringCheckUtf8_);
         }

         if ((this.bitField0_ & 4096) != 0) {
            var1.writeBool(31, this.ccEnableArenas_);
         }

         if ((this.bitField0_ & 8192) != 0) {
            GeneratedMessageV3.writeString(var1, 36, this.objcClassPrefix_);
         }

         if ((this.bitField0_ & 16384) != 0) {
            GeneratedMessageV3.writeString(var1, 37, this.csharpNamespace_);
         }

         if ((this.bitField0_ & '耀') != 0) {
            GeneratedMessageV3.writeString(var1, 39, this.swiftPrefix_);
         }

         if ((this.bitField0_ & 65536) != 0) {
            GeneratedMessageV3.writeString(var1, 40, this.phpClassPrefix_);
         }

         if ((this.bitField0_ & 131072) != 0) {
            GeneratedMessageV3.writeString(var1, 41, this.phpNamespace_);
         }

         if ((this.bitField0_ & 1024) != 0) {
            var1.writeBool(42, this.phpGenericServices_);
         }

         if ((this.bitField0_ & 262144) != 0) {
            GeneratedMessageV3.writeString(var1, 44, this.phpMetadataNamespace_);
         }

         if ((this.bitField0_ & 524288) != 0) {
            GeneratedMessageV3.writeString(var1, 45, this.rubyPackage_);
         }

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.javaPackage_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(8, this.javaOuterClassname_);
            }

            if ((this.bitField0_ & 32) != 0) {
               var1 += CodedOutputStream.computeEnumSize(9, this.optimizeFor_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeBoolSize(10, this.javaMultipleFiles_);
            }

            if ((this.bitField0_ & 64) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(11, this.goPackage_);
            }

            if ((this.bitField0_ & 128) != 0) {
               var1 += CodedOutputStream.computeBoolSize(16, this.ccGenericServices_);
            }

            if ((this.bitField0_ & 256) != 0) {
               var1 += CodedOutputStream.computeBoolSize(17, this.javaGenericServices_);
            }

            if ((this.bitField0_ & 512) != 0) {
               var1 += CodedOutputStream.computeBoolSize(18, this.pyGenericServices_);
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeBoolSize(20, this.javaGenerateEqualsAndHash_);
            }

            if ((this.bitField0_ & 2048) != 0) {
               var1 += CodedOutputStream.computeBoolSize(23, this.deprecated_);
            }

            if ((this.bitField0_ & 16) != 0) {
               var1 += CodedOutputStream.computeBoolSize(27, this.javaStringCheckUtf8_);
            }

            if ((this.bitField0_ & 4096) != 0) {
               var1 += CodedOutputStream.computeBoolSize(31, this.ccEnableArenas_);
            }

            if ((this.bitField0_ & 8192) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(36, this.objcClassPrefix_);
            }

            if ((this.bitField0_ & 16384) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(37, this.csharpNamespace_);
            }

            if ((this.bitField0_ & '耀') != 0) {
               var1 += GeneratedMessageV3.computeStringSize(39, this.swiftPrefix_);
            }

            if ((this.bitField0_ & 65536) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(40, this.phpClassPrefix_);
            }

            if ((this.bitField0_ & 131072) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(41, this.phpNamespace_);
            }

            if ((this.bitField0_ & 1024) != 0) {
               var1 += CodedOutputStream.computeBoolSize(42, this.phpGenericServices_);
            }

            if ((this.bitField0_ & 262144) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(44, this.phpMetadataNamespace_);
            }

            if ((this.bitField0_ & 524288) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(45, this.rubyPackage_);
            }

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.FileOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.FileOptions var2 = (DescriptorProtos.FileOptions)var1;
            if (this.hasJavaPackage() != var2.hasJavaPackage()) {
               return false;
            } else if (this.hasJavaPackage() && !this.getJavaPackage().equals(var2.getJavaPackage())) {
               return false;
            } else if (this.hasJavaOuterClassname() != var2.hasJavaOuterClassname()) {
               return false;
            } else if (this.hasJavaOuterClassname() && !this.getJavaOuterClassname().equals(var2.getJavaOuterClassname())) {
               return false;
            } else if (this.hasJavaMultipleFiles() != var2.hasJavaMultipleFiles()) {
               return false;
            } else if (this.hasJavaMultipleFiles() && this.getJavaMultipleFiles() != var2.getJavaMultipleFiles()) {
               return false;
            } else if (this.hasJavaGenerateEqualsAndHash() != var2.hasJavaGenerateEqualsAndHash()) {
               return false;
            } else if (this.hasJavaGenerateEqualsAndHash() && this.getJavaGenerateEqualsAndHash() != var2.getJavaGenerateEqualsAndHash()) {
               return false;
            } else if (this.hasJavaStringCheckUtf8() != var2.hasJavaStringCheckUtf8()) {
               return false;
            } else if (this.hasJavaStringCheckUtf8() && this.getJavaStringCheckUtf8() != var2.getJavaStringCheckUtf8()) {
               return false;
            } else if (this.hasOptimizeFor() != var2.hasOptimizeFor()) {
               return false;
            } else if (this.hasOptimizeFor() && this.optimizeFor_ != var2.optimizeFor_) {
               return false;
            } else if (this.hasGoPackage() != var2.hasGoPackage()) {
               return false;
            } else if (this.hasGoPackage() && !this.getGoPackage().equals(var2.getGoPackage())) {
               return false;
            } else if (this.hasCcGenericServices() != var2.hasCcGenericServices()) {
               return false;
            } else if (this.hasCcGenericServices() && this.getCcGenericServices() != var2.getCcGenericServices()) {
               return false;
            } else if (this.hasJavaGenericServices() != var2.hasJavaGenericServices()) {
               return false;
            } else if (this.hasJavaGenericServices() && this.getJavaGenericServices() != var2.getJavaGenericServices()) {
               return false;
            } else if (this.hasPyGenericServices() != var2.hasPyGenericServices()) {
               return false;
            } else if (this.hasPyGenericServices() && this.getPyGenericServices() != var2.getPyGenericServices()) {
               return false;
            } else if (this.hasPhpGenericServices() != var2.hasPhpGenericServices()) {
               return false;
            } else if (this.hasPhpGenericServices() && this.getPhpGenericServices() != var2.getPhpGenericServices()) {
               return false;
            } else if (this.hasDeprecated() != var2.hasDeprecated()) {
               return false;
            } else if (this.hasDeprecated() && this.getDeprecated() != var2.getDeprecated()) {
               return false;
            } else if (this.hasCcEnableArenas() != var2.hasCcEnableArenas()) {
               return false;
            } else if (this.hasCcEnableArenas() && this.getCcEnableArenas() != var2.getCcEnableArenas()) {
               return false;
            } else if (this.hasObjcClassPrefix() != var2.hasObjcClassPrefix()) {
               return false;
            } else if (this.hasObjcClassPrefix() && !this.getObjcClassPrefix().equals(var2.getObjcClassPrefix())) {
               return false;
            } else if (this.hasCsharpNamespace() != var2.hasCsharpNamespace()) {
               return false;
            } else if (this.hasCsharpNamespace() && !this.getCsharpNamespace().equals(var2.getCsharpNamespace())) {
               return false;
            } else if (this.hasSwiftPrefix() != var2.hasSwiftPrefix()) {
               return false;
            } else if (this.hasSwiftPrefix() && !this.getSwiftPrefix().equals(var2.getSwiftPrefix())) {
               return false;
            } else if (this.hasPhpClassPrefix() != var2.hasPhpClassPrefix()) {
               return false;
            } else if (this.hasPhpClassPrefix() && !this.getPhpClassPrefix().equals(var2.getPhpClassPrefix())) {
               return false;
            } else if (this.hasPhpNamespace() != var2.hasPhpNamespace()) {
               return false;
            } else if (this.hasPhpNamespace() && !this.getPhpNamespace().equals(var2.getPhpNamespace())) {
               return false;
            } else if (this.hasPhpMetadataNamespace() != var2.hasPhpMetadataNamespace()) {
               return false;
            } else if (this.hasPhpMetadataNamespace() && !this.getPhpMetadataNamespace().equals(var2.getPhpMetadataNamespace())) {
               return false;
            } else if (this.hasRubyPackage() != var2.hasRubyPackage()) {
               return false;
            } else if (this.hasRubyPackage() && !this.getRubyPackage().equals(var2.getRubyPackage())) {
               return false;
            } else if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasJavaPackage()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getJavaPackage().hashCode();
            }

            if (this.hasJavaOuterClassname()) {
               var2 = 37 * var2 + 8;
               var2 = 53 * var2 + this.getJavaOuterClassname().hashCode();
            }

            if (this.hasJavaMultipleFiles()) {
               var2 = 37 * var2 + 10;
               var2 = 53 * var2 + Internal.hashBoolean(this.getJavaMultipleFiles());
            }

            if (this.hasJavaGenerateEqualsAndHash()) {
               var2 = 37 * var2 + 20;
               var2 = 53 * var2 + Internal.hashBoolean(this.getJavaGenerateEqualsAndHash());
            }

            if (this.hasJavaStringCheckUtf8()) {
               var2 = 37 * var2 + 27;
               var2 = 53 * var2 + Internal.hashBoolean(this.getJavaStringCheckUtf8());
            }

            if (this.hasOptimizeFor()) {
               var2 = 37 * var2 + 9;
               var2 = 53 * var2 + this.optimizeFor_;
            }

            if (this.hasGoPackage()) {
               var2 = 37 * var2 + 11;
               var2 = 53 * var2 + this.getGoPackage().hashCode();
            }

            if (this.hasCcGenericServices()) {
               var2 = 37 * var2 + 16;
               var2 = 53 * var2 + Internal.hashBoolean(this.getCcGenericServices());
            }

            if (this.hasJavaGenericServices()) {
               var2 = 37 * var2 + 17;
               var2 = 53 * var2 + Internal.hashBoolean(this.getJavaGenericServices());
            }

            if (this.hasPyGenericServices()) {
               var2 = 37 * var2 + 18;
               var2 = 53 * var2 + Internal.hashBoolean(this.getPyGenericServices());
            }

            if (this.hasPhpGenericServices()) {
               var2 = 37 * var2 + 42;
               var2 = 53 * var2 + Internal.hashBoolean(this.getPhpGenericServices());
            }

            if (this.hasDeprecated()) {
               var2 = 37 * var2 + 23;
               var2 = 53 * var2 + Internal.hashBoolean(this.getDeprecated());
            }

            if (this.hasCcEnableArenas()) {
               var2 = 37 * var2 + 31;
               var2 = 53 * var2 + Internal.hashBoolean(this.getCcEnableArenas());
            }

            if (this.hasObjcClassPrefix()) {
               var2 = 37 * var2 + 36;
               var2 = 53 * var2 + this.getObjcClassPrefix().hashCode();
            }

            if (this.hasCsharpNamespace()) {
               var2 = 37 * var2 + 37;
               var2 = 53 * var2 + this.getCsharpNamespace().hashCode();
            }

            if (this.hasSwiftPrefix()) {
               var2 = 37 * var2 + 39;
               var2 = 53 * var2 + this.getSwiftPrefix().hashCode();
            }

            if (this.hasPhpClassPrefix()) {
               var2 = 37 * var2 + 40;
               var2 = 53 * var2 + this.getPhpClassPrefix().hashCode();
            }

            if (this.hasPhpNamespace()) {
               var2 = 37 * var2 + 41;
               var2 = 53 * var2 + this.getPhpNamespace().hashCode();
            }

            if (this.hasPhpMetadataNamespace()) {
               var2 = 37 * var2 + 44;
               var2 = 53 * var2 + this.getPhpMetadataNamespace().hashCode();
            }

            if (this.hasRubyPackage()) {
               var2 = 37 * var2 + 45;
               var2 = 53 * var2 + this.getRubyPackage().hashCode();
            }

            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FileOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FileOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FileOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FileOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.FileOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.FileOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FileOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FileOptions.Builder newBuilder(DescriptorProtos.FileOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.FileOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FileOptions.Builder() : (new DescriptorProtos.FileOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.FileOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.FileOptions.Builder var2 = new DescriptorProtos.FileOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.FileOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FileOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      FileOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      FileOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.FileOptionsOrBuilder {
         private int bitField0_;
         private Object javaPackage_;
         private Object javaOuterClassname_;
         private boolean javaMultipleFiles_;
         private boolean javaGenerateEqualsAndHash_;
         private boolean javaStringCheckUtf8_;
         private int optimizeFor_;
         private Object goPackage_;
         private boolean ccGenericServices_;
         private boolean javaGenericServices_;
         private boolean pyGenericServices_;
         private boolean phpGenericServices_;
         private boolean deprecated_;
         private boolean ccEnableArenas_;
         private Object objcClassPrefix_;
         private Object csharpNamespace_;
         private Object swiftPrefix_;
         private Object phpClassPrefix_;
         private Object phpNamespace_;
         private Object phpMetadataNamespace_;
         private Object rubyPackage_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FileOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FileOptions.class, DescriptorProtos.FileOptions.Builder.class);
         }

         private Builder() {
            this.javaPackage_ = "";
            this.javaOuterClassname_ = "";
            this.optimizeFor_ = 1;
            this.goPackage_ = "";
            this.objcClassPrefix_ = "";
            this.csharpNamespace_ = "";
            this.swiftPrefix_ = "";
            this.phpClassPrefix_ = "";
            this.phpNamespace_ = "";
            this.phpMetadataNamespace_ = "";
            this.rubyPackage_ = "";
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.javaPackage_ = "";
            this.javaOuterClassname_ = "";
            this.optimizeFor_ = 1;
            this.goPackage_ = "";
            this.objcClassPrefix_ = "";
            this.csharpNamespace_ = "";
            this.swiftPrefix_ = "";
            this.phpClassPrefix_ = "";
            this.phpNamespace_ = "";
            this.phpMetadataNamespace_ = "";
            this.rubyPackage_ = "";
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.FileOptions.Builder clear() {
            super.clear();
            this.javaPackage_ = "";
            this.bitField0_ &= -2;
            this.javaOuterClassname_ = "";
            this.bitField0_ &= -3;
            this.javaMultipleFiles_ = false;
            this.bitField0_ &= -5;
            this.javaGenerateEqualsAndHash_ = false;
            this.bitField0_ &= -9;
            this.javaStringCheckUtf8_ = false;
            this.bitField0_ &= -17;
            this.optimizeFor_ = 1;
            this.bitField0_ &= -33;
            this.goPackage_ = "";
            this.bitField0_ &= -65;
            this.ccGenericServices_ = false;
            this.bitField0_ &= -129;
            this.javaGenericServices_ = false;
            this.bitField0_ &= -257;
            this.pyGenericServices_ = false;
            this.bitField0_ &= -513;
            this.phpGenericServices_ = false;
            this.bitField0_ &= -1025;
            this.deprecated_ = false;
            this.bitField0_ &= -2049;
            this.ccEnableArenas_ = false;
            this.bitField0_ &= -4097;
            this.objcClassPrefix_ = "";
            this.bitField0_ &= -8193;
            this.csharpNamespace_ = "";
            this.bitField0_ &= -16385;
            this.swiftPrefix_ = "";
            this.bitField0_ &= -32769;
            this.phpClassPrefix_ = "";
            this.bitField0_ &= -65537;
            this.phpNamespace_ = "";
            this.bitField0_ &= -131073;
            this.phpMetadataNamespace_ = "";
            this.bitField0_ &= -262145;
            this.rubyPackage_ = "";
            this.bitField0_ &= -524289;
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -1048577;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FileOptions_descriptor;
         }

         public DescriptorProtos.FileOptions getDefaultInstanceForType() {
            return DescriptorProtos.FileOptions.getDefaultInstance();
         }

         public DescriptorProtos.FileOptions build() {
            DescriptorProtos.FileOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.FileOptions buildPartial() {
            DescriptorProtos.FileOptions var1 = new DescriptorProtos.FileOptions(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.javaPackage_ = this.javaPackage_;
            if ((var2 & 2) != 0) {
               var3 |= 2;
            }

            var1.javaOuterClassname_ = this.javaOuterClassname_;
            if ((var2 & 4) != 0) {
               var1.javaMultipleFiles_ = this.javaMultipleFiles_;
               var3 |= 4;
            }

            if ((var2 & 8) != 0) {
               var1.javaGenerateEqualsAndHash_ = this.javaGenerateEqualsAndHash_;
               var3 |= 8;
            }

            if ((var2 & 16) != 0) {
               var1.javaStringCheckUtf8_ = this.javaStringCheckUtf8_;
               var3 |= 16;
            }

            if ((var2 & 32) != 0) {
               var3 |= 32;
            }

            var1.optimizeFor_ = this.optimizeFor_;
            if ((var2 & 64) != 0) {
               var3 |= 64;
            }

            var1.goPackage_ = this.goPackage_;
            if ((var2 & 128) != 0) {
               var1.ccGenericServices_ = this.ccGenericServices_;
               var3 |= 128;
            }

            if ((var2 & 256) != 0) {
               var1.javaGenericServices_ = this.javaGenericServices_;
               var3 |= 256;
            }

            if ((var2 & 512) != 0) {
               var1.pyGenericServices_ = this.pyGenericServices_;
               var3 |= 512;
            }

            if ((var2 & 1024) != 0) {
               var1.phpGenericServices_ = this.phpGenericServices_;
               var3 |= 1024;
            }

            if ((var2 & 2048) != 0) {
               var1.deprecated_ = this.deprecated_;
               var3 |= 2048;
            }

            if ((var2 & 4096) != 0) {
               var1.ccEnableArenas_ = this.ccEnableArenas_;
               var3 |= 4096;
            }

            if ((var2 & 8192) != 0) {
               var3 |= 8192;
            }

            var1.objcClassPrefix_ = this.objcClassPrefix_;
            if ((var2 & 16384) != 0) {
               var3 |= 16384;
            }

            var1.csharpNamespace_ = this.csharpNamespace_;
            if ((var2 & '耀') != 0) {
               var3 |= 32768;
            }

            var1.swiftPrefix_ = this.swiftPrefix_;
            if ((var2 & 65536) != 0) {
               var3 |= 65536;
            }

            var1.phpClassPrefix_ = this.phpClassPrefix_;
            if ((var2 & 131072) != 0) {
               var3 |= 131072;
            }

            var1.phpNamespace_ = this.phpNamespace_;
            if ((var2 & 262144) != 0) {
               var3 |= 262144;
            }

            var1.phpMetadataNamespace_ = this.phpMetadataNamespace_;
            if ((var2 & 524288) != 0) {
               var3 |= 524288;
            }

            var1.rubyPackage_ = this.rubyPackage_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 1048576) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -1048577;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.FileOptions.Builder clone() {
            return (DescriptorProtos.FileOptions.Builder)super.clone();
         }

         public DescriptorProtos.FileOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FileOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.FileOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.FileOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.FileOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.FileOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.FileOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.FileOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.FileOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FileOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.FileOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.FileOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.FileOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.FileOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.FileOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.FileOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.FileOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.FileOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.FileOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.FileOptions) {
               return this.mergeFrom((DescriptorProtos.FileOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder mergeFrom(DescriptorProtos.FileOptions var1) {
            if (var1 == DescriptorProtos.FileOptions.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasJavaPackage()) {
                  this.bitField0_ |= 1;
                  this.javaPackage_ = var1.javaPackage_;
                  this.onChanged();
               }

               if (var1.hasJavaOuterClassname()) {
                  this.bitField0_ |= 2;
                  this.javaOuterClassname_ = var1.javaOuterClassname_;
                  this.onChanged();
               }

               if (var1.hasJavaMultipleFiles()) {
                  this.setJavaMultipleFiles(var1.getJavaMultipleFiles());
               }

               if (var1.hasJavaGenerateEqualsAndHash()) {
                  this.setJavaGenerateEqualsAndHash(var1.getJavaGenerateEqualsAndHash());
               }

               if (var1.hasJavaStringCheckUtf8()) {
                  this.setJavaStringCheckUtf8(var1.getJavaStringCheckUtf8());
               }

               if (var1.hasOptimizeFor()) {
                  this.setOptimizeFor(var1.getOptimizeFor());
               }

               if (var1.hasGoPackage()) {
                  this.bitField0_ |= 64;
                  this.goPackage_ = var1.goPackage_;
                  this.onChanged();
               }

               if (var1.hasCcGenericServices()) {
                  this.setCcGenericServices(var1.getCcGenericServices());
               }

               if (var1.hasJavaGenericServices()) {
                  this.setJavaGenericServices(var1.getJavaGenericServices());
               }

               if (var1.hasPyGenericServices()) {
                  this.setPyGenericServices(var1.getPyGenericServices());
               }

               if (var1.hasPhpGenericServices()) {
                  this.setPhpGenericServices(var1.getPhpGenericServices());
               }

               if (var1.hasDeprecated()) {
                  this.setDeprecated(var1.getDeprecated());
               }

               if (var1.hasCcEnableArenas()) {
                  this.setCcEnableArenas(var1.getCcEnableArenas());
               }

               if (var1.hasObjcClassPrefix()) {
                  this.bitField0_ |= 8192;
                  this.objcClassPrefix_ = var1.objcClassPrefix_;
                  this.onChanged();
               }

               if (var1.hasCsharpNamespace()) {
                  this.bitField0_ |= 16384;
                  this.csharpNamespace_ = var1.csharpNamespace_;
                  this.onChanged();
               }

               if (var1.hasSwiftPrefix()) {
                  this.bitField0_ |= 32768;
                  this.swiftPrefix_ = var1.swiftPrefix_;
                  this.onChanged();
               }

               if (var1.hasPhpClassPrefix()) {
                  this.bitField0_ |= 65536;
                  this.phpClassPrefix_ = var1.phpClassPrefix_;
                  this.onChanged();
               }

               if (var1.hasPhpNamespace()) {
                  this.bitField0_ |= 131072;
                  this.phpNamespace_ = var1.phpNamespace_;
                  this.onChanged();
               }

               if (var1.hasPhpMetadataNamespace()) {
                  this.bitField0_ |= 262144;
                  this.phpMetadataNamespace_ = var1.phpMetadataNamespace_;
                  this.onChanged();
               }

               if (var1.hasRubyPackage()) {
                  this.bitField0_ |= 524288;
                  this.rubyPackage_ = var1.rubyPackage_;
                  this.onChanged();
               }

               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -1048577;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -1048577;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.FileOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.FileOptions var3 = null;

            try {
               var3 = (DescriptorProtos.FileOptions)DescriptorProtos.FileOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.FileOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasJavaPackage() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getJavaPackage() {
            Object var1 = this.javaPackage_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.javaPackage_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getJavaPackageBytes() {
            Object var1 = this.javaPackage_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.javaPackage_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setJavaPackage(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.javaPackage_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearJavaPackage() {
            this.bitField0_ &= -2;
            this.javaPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getJavaPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setJavaPackageBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.javaPackage_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasJavaOuterClassname() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getJavaOuterClassname() {
            Object var1 = this.javaOuterClassname_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.javaOuterClassname_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getJavaOuterClassnameBytes() {
            Object var1 = this.javaOuterClassname_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.javaOuterClassname_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setJavaOuterClassname(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.javaOuterClassname_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearJavaOuterClassname() {
            this.bitField0_ &= -3;
            this.javaOuterClassname_ = DescriptorProtos.FileOptions.getDefaultInstance().getJavaOuterClassname();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setJavaOuterClassnameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.javaOuterClassname_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasJavaMultipleFiles() {
            return (this.bitField0_ & 4) != 0;
         }

         public boolean getJavaMultipleFiles() {
            return this.javaMultipleFiles_;
         }

         public DescriptorProtos.FileOptions.Builder setJavaMultipleFiles(boolean var1) {
            this.bitField0_ |= 4;
            this.javaMultipleFiles_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearJavaMultipleFiles() {
            this.bitField0_ &= -5;
            this.javaMultipleFiles_ = false;
            this.onChanged();
            return this;
         }

         /** @deprecated */
         @Deprecated
         public boolean hasJavaGenerateEqualsAndHash() {
            return (this.bitField0_ & 8) != 0;
         }

         /** @deprecated */
         @Deprecated
         public boolean getJavaGenerateEqualsAndHash() {
            return this.javaGenerateEqualsAndHash_;
         }

         /** @deprecated */
         @Deprecated
         public DescriptorProtos.FileOptions.Builder setJavaGenerateEqualsAndHash(boolean var1) {
            this.bitField0_ |= 8;
            this.javaGenerateEqualsAndHash_ = var1;
            this.onChanged();
            return this;
         }

         /** @deprecated */
         @Deprecated
         public DescriptorProtos.FileOptions.Builder clearJavaGenerateEqualsAndHash() {
            this.bitField0_ &= -9;
            this.javaGenerateEqualsAndHash_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasJavaStringCheckUtf8() {
            return (this.bitField0_ & 16) != 0;
         }

         public boolean getJavaStringCheckUtf8() {
            return this.javaStringCheckUtf8_;
         }

         public DescriptorProtos.FileOptions.Builder setJavaStringCheckUtf8(boolean var1) {
            this.bitField0_ |= 16;
            this.javaStringCheckUtf8_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearJavaStringCheckUtf8() {
            this.bitField0_ &= -17;
            this.javaStringCheckUtf8_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasOptimizeFor() {
            return (this.bitField0_ & 32) != 0;
         }

         public DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor() {
            DescriptorProtos.FileOptions.OptimizeMode var1 = DescriptorProtos.FileOptions.OptimizeMode.valueOf(this.optimizeFor_);
            return var1 == null ? DescriptorProtos.FileOptions.OptimizeMode.SPEED : var1;
         }

         public DescriptorProtos.FileOptions.Builder setOptimizeFor(DescriptorProtos.FileOptions.OptimizeMode var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.optimizeFor_ = var1.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearOptimizeFor() {
            this.bitField0_ &= -33;
            this.optimizeFor_ = 1;
            this.onChanged();
            return this;
         }

         public boolean hasGoPackage() {
            return (this.bitField0_ & 64) != 0;
         }

         public String getGoPackage() {
            Object var1 = this.goPackage_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.goPackage_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getGoPackageBytes() {
            Object var1 = this.goPackage_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.goPackage_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setGoPackage(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.goPackage_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearGoPackage() {
            this.bitField0_ &= -65;
            this.goPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getGoPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setGoPackageBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.goPackage_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasCcGenericServices() {
            return (this.bitField0_ & 128) != 0;
         }

         public boolean getCcGenericServices() {
            return this.ccGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setCcGenericServices(boolean var1) {
            this.bitField0_ |= 128;
            this.ccGenericServices_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearCcGenericServices() {
            this.bitField0_ &= -129;
            this.ccGenericServices_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasJavaGenericServices() {
            return (this.bitField0_ & 256) != 0;
         }

         public boolean getJavaGenericServices() {
            return this.javaGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setJavaGenericServices(boolean var1) {
            this.bitField0_ |= 256;
            this.javaGenericServices_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearJavaGenericServices() {
            this.bitField0_ &= -257;
            this.javaGenericServices_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasPyGenericServices() {
            return (this.bitField0_ & 512) != 0;
         }

         public boolean getPyGenericServices() {
            return this.pyGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setPyGenericServices(boolean var1) {
            this.bitField0_ |= 512;
            this.pyGenericServices_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearPyGenericServices() {
            this.bitField0_ &= -513;
            this.pyGenericServices_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasPhpGenericServices() {
            return (this.bitField0_ & 1024) != 0;
         }

         public boolean getPhpGenericServices() {
            return this.phpGenericServices_;
         }

         public DescriptorProtos.FileOptions.Builder setPhpGenericServices(boolean var1) {
            this.bitField0_ |= 1024;
            this.phpGenericServices_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearPhpGenericServices() {
            this.bitField0_ &= -1025;
            this.phpGenericServices_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasDeprecated() {
            return (this.bitField0_ & 2048) != 0;
         }

         public boolean getDeprecated() {
            return this.deprecated_;
         }

         public DescriptorProtos.FileOptions.Builder setDeprecated(boolean var1) {
            this.bitField0_ |= 2048;
            this.deprecated_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearDeprecated() {
            this.bitField0_ &= -2049;
            this.deprecated_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasCcEnableArenas() {
            return (this.bitField0_ & 4096) != 0;
         }

         public boolean getCcEnableArenas() {
            return this.ccEnableArenas_;
         }

         public DescriptorProtos.FileOptions.Builder setCcEnableArenas(boolean var1) {
            this.bitField0_ |= 4096;
            this.ccEnableArenas_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearCcEnableArenas() {
            this.bitField0_ &= -4097;
            this.ccEnableArenas_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasObjcClassPrefix() {
            return (this.bitField0_ & 8192) != 0;
         }

         public String getObjcClassPrefix() {
            Object var1 = this.objcClassPrefix_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.objcClassPrefix_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getObjcClassPrefixBytes() {
            Object var1 = this.objcClassPrefix_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.objcClassPrefix_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setObjcClassPrefix(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8192;
               this.objcClassPrefix_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearObjcClassPrefix() {
            this.bitField0_ &= -8193;
            this.objcClassPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getObjcClassPrefix();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setObjcClassPrefixBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8192;
               this.objcClassPrefix_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasCsharpNamespace() {
            return (this.bitField0_ & 16384) != 0;
         }

         public String getCsharpNamespace() {
            Object var1 = this.csharpNamespace_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.csharpNamespace_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getCsharpNamespaceBytes() {
            Object var1 = this.csharpNamespace_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.csharpNamespace_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setCsharpNamespace(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16384;
               this.csharpNamespace_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearCsharpNamespace() {
            this.bitField0_ &= -16385;
            this.csharpNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getCsharpNamespace();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setCsharpNamespaceBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16384;
               this.csharpNamespace_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasSwiftPrefix() {
            return (this.bitField0_ & '耀') != 0;
         }

         public String getSwiftPrefix() {
            Object var1 = this.swiftPrefix_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.swiftPrefix_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getSwiftPrefixBytes() {
            Object var1 = this.swiftPrefix_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.swiftPrefix_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setSwiftPrefix(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32768;
               this.swiftPrefix_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearSwiftPrefix() {
            this.bitField0_ &= -32769;
            this.swiftPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getSwiftPrefix();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setSwiftPrefixBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32768;
               this.swiftPrefix_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPhpClassPrefix() {
            return (this.bitField0_ & 65536) != 0;
         }

         public String getPhpClassPrefix() {
            Object var1 = this.phpClassPrefix_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.phpClassPrefix_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getPhpClassPrefixBytes() {
            Object var1 = this.phpClassPrefix_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.phpClassPrefix_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setPhpClassPrefix(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 65536;
               this.phpClassPrefix_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearPhpClassPrefix() {
            this.bitField0_ &= -65537;
            this.phpClassPrefix_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpClassPrefix();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setPhpClassPrefixBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 65536;
               this.phpClassPrefix_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPhpNamespace() {
            return (this.bitField0_ & 131072) != 0;
         }

         public String getPhpNamespace() {
            Object var1 = this.phpNamespace_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.phpNamespace_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getPhpNamespaceBytes() {
            Object var1 = this.phpNamespace_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.phpNamespace_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setPhpNamespace(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 131072;
               this.phpNamespace_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearPhpNamespace() {
            this.bitField0_ &= -131073;
            this.phpNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpNamespace();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setPhpNamespaceBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 131072;
               this.phpNamespace_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPhpMetadataNamespace() {
            return (this.bitField0_ & 262144) != 0;
         }

         public String getPhpMetadataNamespace() {
            Object var1 = this.phpMetadataNamespace_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.phpMetadataNamespace_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getPhpMetadataNamespaceBytes() {
            Object var1 = this.phpMetadataNamespace_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.phpMetadataNamespace_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setPhpMetadataNamespace(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 262144;
               this.phpMetadataNamespace_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearPhpMetadataNamespace() {
            this.bitField0_ &= -262145;
            this.phpMetadataNamespace_ = DescriptorProtos.FileOptions.getDefaultInstance().getPhpMetadataNamespace();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setPhpMetadataNamespaceBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 262144;
               this.phpMetadataNamespace_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasRubyPackage() {
            return (this.bitField0_ & 524288) != 0;
         }

         public String getRubyPackage() {
            Object var1 = this.rubyPackage_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.rubyPackage_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getRubyPackageBytes() {
            Object var1 = this.rubyPackage_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.rubyPackage_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileOptions.Builder setRubyPackage(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 524288;
               this.rubyPackage_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileOptions.Builder clearRubyPackage() {
            this.bitField0_ &= -524289;
            this.rubyPackage_ = DescriptorProtos.FileOptions.getDefaultInstance().getRubyPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileOptions.Builder setRubyPackageBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 524288;
               this.rubyPackage_ = var1;
               this.onChanged();
               return this;
            }
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 1048576) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 1048576;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FileOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -1048577;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 1048576) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.FileOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FileOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.FileOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FileOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static enum OptimizeMode implements ProtocolMessageEnum {
         SPEED(1),
         CODE_SIZE(2),
         LITE_RUNTIME(3);

         public static final int SPEED_VALUE = 1;
         public static final int CODE_SIZE_VALUE = 2;
         public static final int LITE_RUNTIME_VALUE = 3;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public DescriptorProtos.FileOptions.OptimizeMode findValueByNumber(int var1) {
               return DescriptorProtos.FileOptions.OptimizeMode.forNumber(var1);
            }
         };
         private static final DescriptorProtos.FileOptions.OptimizeMode[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static DescriptorProtos.FileOptions.OptimizeMode valueOf(int var0) {
            return forNumber(var0);
         }

         public static DescriptorProtos.FileOptions.OptimizeMode forNumber(int var0) {
            switch(var0) {
            case 1:
               return SPEED;
            case 2:
               return CODE_SIZE;
            case 3:
               return LITE_RUNTIME;
            default:
               return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FileOptions.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.FileOptions.OptimizeMode valueOf(Descriptors.EnumValueDescriptor var0) {
            if (var0.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[var0.getIndex()];
            }
         }

         private OptimizeMode(int var3) {
            this.value = var3;
         }
      }
   }

   public interface FileOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      boolean hasJavaPackage();

      String getJavaPackage();

      ByteString getJavaPackageBytes();

      boolean hasJavaOuterClassname();

      String getJavaOuterClassname();

      ByteString getJavaOuterClassnameBytes();

      boolean hasJavaMultipleFiles();

      boolean getJavaMultipleFiles();

      /** @deprecated */
      @Deprecated
      boolean hasJavaGenerateEqualsAndHash();

      /** @deprecated */
      @Deprecated
      boolean getJavaGenerateEqualsAndHash();

      boolean hasJavaStringCheckUtf8();

      boolean getJavaStringCheckUtf8();

      boolean hasOptimizeFor();

      DescriptorProtos.FileOptions.OptimizeMode getOptimizeFor();

      boolean hasGoPackage();

      String getGoPackage();

      ByteString getGoPackageBytes();

      boolean hasCcGenericServices();

      boolean getCcGenericServices();

      boolean hasJavaGenericServices();

      boolean getJavaGenericServices();

      boolean hasPyGenericServices();

      boolean getPyGenericServices();

      boolean hasPhpGenericServices();

      boolean getPhpGenericServices();

      boolean hasDeprecated();

      boolean getDeprecated();

      boolean hasCcEnableArenas();

      boolean getCcEnableArenas();

      boolean hasObjcClassPrefix();

      String getObjcClassPrefix();

      ByteString getObjcClassPrefixBytes();

      boolean hasCsharpNamespace();

      String getCsharpNamespace();

      ByteString getCsharpNamespaceBytes();

      boolean hasSwiftPrefix();

      String getSwiftPrefix();

      ByteString getSwiftPrefixBytes();

      boolean hasPhpClassPrefix();

      String getPhpClassPrefix();

      ByteString getPhpClassPrefixBytes();

      boolean hasPhpNamespace();

      String getPhpNamespace();

      ByteString getPhpNamespaceBytes();

      boolean hasPhpMetadataNamespace();

      String getPhpMetadataNamespace();

      ByteString getPhpMetadataNamespaceBytes();

      boolean hasRubyPackage();

      String getRubyPackage();

      ByteString getRubyPackageBytes();

      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class MethodDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.MethodDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int INPUT_TYPE_FIELD_NUMBER = 2;
      private volatile Object inputType_;
      public static final int OUTPUT_TYPE_FIELD_NUMBER = 3;
      private volatile Object outputType_;
      public static final int OPTIONS_FIELD_NUMBER = 4;
      private DescriptorProtos.MethodOptions options_;
      public static final int CLIENT_STREAMING_FIELD_NUMBER = 5;
      private boolean clientStreaming_;
      public static final int SERVER_STREAMING_FIELD_NUMBER = 6;
      private boolean serverStreaming_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.MethodDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.MethodDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.MethodDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.MethodDescriptorProto(var1, var2);
         }
      };

      private MethodDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private MethodDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.inputType_ = "";
         this.outputType_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.MethodDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private MethodDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  ByteString var15;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     var15 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var15;
                     break;
                  case 18:
                     var15 = var1.readBytes();
                     this.bitField0_ |= 2;
                     this.inputType_ = var15;
                     break;
                  case 26:
                     var15 = var1.readBytes();
                     this.bitField0_ |= 4;
                     this.outputType_ = var15;
                     break;
                  case 34:
                     DescriptorProtos.MethodOptions.Builder var7 = null;
                     if ((this.bitField0_ & 8) != 0) {
                        var7 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.MethodOptions)var1.readMessage(DescriptorProtos.MethodOptions.PARSER, var2);
                     if (var7 != null) {
                        var7.mergeFrom(this.options_);
                        this.options_ = var7.buildPartial();
                     }

                     this.bitField0_ |= 8;
                     break;
                  case 40:
                     this.bitField0_ |= 16;
                     this.clientStreaming_ = var1.readBool();
                     break;
                  case 48:
                     this.bitField0_ |= 32;
                     this.serverStreaming_ = var1.readBool();
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.MethodDescriptorProto.class, DescriptorProtos.MethodDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasInputType() {
         return (this.bitField0_ & 2) != 0;
      }

      public String getInputType() {
         Object var1 = this.inputType_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.inputType_ = var3;
            }

            return var3;
         }
      }

      public ByteString getInputTypeBytes() {
         Object var1 = this.inputType_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.inputType_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasOutputType() {
         return (this.bitField0_ & 4) != 0;
      }

      public String getOutputType() {
         Object var1 = this.outputType_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.outputType_ = var3;
            }

            return var3;
         }
      }

      public ByteString getOutputTypeBytes() {
         Object var1 = this.outputType_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.outputType_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 8) != 0;
      }

      public DescriptorProtos.MethodOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
      }

      public boolean hasClientStreaming() {
         return (this.bitField0_ & 16) != 0;
      }

      public boolean getClientStreaming() {
         return this.clientStreaming_;
      }

      public boolean hasServerStreaming() {
         return (this.bitField0_ & 32) != 0;
      }

      public boolean getServerStreaming() {
         return this.serverStreaming_;
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(var1, 2, this.inputType_);
         }

         if ((this.bitField0_ & 4) != 0) {
            GeneratedMessageV3.writeString(var1, 3, this.outputType_);
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeMessage(4, this.getOptions());
         }

         if ((this.bitField0_ & 16) != 0) {
            var1.writeBool(5, this.clientStreaming_);
         }

         if ((this.bitField0_ & 32) != 0) {
            var1.writeBool(6, this.serverStreaming_);
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(2, this.inputType_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(3, this.outputType_);
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeMessageSize(4, this.getOptions());
            }

            if ((this.bitField0_ & 16) != 0) {
               var1 += CodedOutputStream.computeBoolSize(5, this.clientStreaming_);
            }

            if ((this.bitField0_ & 32) != 0) {
               var1 += CodedOutputStream.computeBoolSize(6, this.serverStreaming_);
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.MethodDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.MethodDescriptorProto var2 = (DescriptorProtos.MethodDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (this.hasInputType() != var2.hasInputType()) {
               return false;
            } else if (this.hasInputType() && !this.getInputType().equals(var2.getInputType())) {
               return false;
            } else if (this.hasOutputType() != var2.hasOutputType()) {
               return false;
            } else if (this.hasOutputType() && !this.getOutputType().equals(var2.getOutputType())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else if (this.hasClientStreaming() != var2.hasClientStreaming()) {
               return false;
            } else if (this.hasClientStreaming() && this.getClientStreaming() != var2.getClientStreaming()) {
               return false;
            } else if (this.hasServerStreaming() != var2.hasServerStreaming()) {
               return false;
            } else if (this.hasServerStreaming() && this.getServerStreaming() != var2.getServerStreaming()) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.hasInputType()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getInputType().hashCode();
            }

            if (this.hasOutputType()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getOutputType().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 4;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            if (this.hasClientStreaming()) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + Internal.hashBoolean(this.getClientStreaming());
            }

            if (this.hasServerStreaming()) {
               var2 = 37 * var2 + 6;
               var2 = 53 * var2 + Internal.hashBoolean(this.getServerStreaming());
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.MethodDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.MethodDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MethodDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.MethodDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.MethodDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MethodDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MethodDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.MethodDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.MethodDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.MethodDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.MethodDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.MethodDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.MethodDescriptorProto.Builder newBuilder(DescriptorProtos.MethodDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.MethodDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.MethodDescriptorProto.Builder() : (new DescriptorProtos.MethodDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.MethodDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.MethodDescriptorProto.Builder var2 = new DescriptorProtos.MethodDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.MethodDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.MethodDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      MethodDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      MethodDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.MethodDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private Object inputType_;
         private Object outputType_;
         private DescriptorProtos.MethodOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;
         private boolean clientStreaming_;
         private boolean serverStreaming_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.MethodDescriptorProto.class, DescriptorProtos.MethodDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.inputType_ = "";
            this.outputType_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.inputType_ = "";
            this.outputType_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.MethodDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.inputType_ = "";
            this.bitField0_ &= -3;
            this.outputType_ = "";
            this.bitField0_ &= -5;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -9;
            this.clientStreaming_ = false;
            this.bitField0_ &= -17;
            this.serverStreaming_ = false;
            this.bitField0_ &= -33;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_MethodDescriptorProto_descriptor;
         }

         public DescriptorProtos.MethodDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.MethodDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.MethodDescriptorProto build() {
            DescriptorProtos.MethodDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.MethodDescriptorProto buildPartial() {
            DescriptorProtos.MethodDescriptorProto var1 = new DescriptorProtos.MethodDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if ((var2 & 2) != 0) {
               var3 |= 2;
            }

            var1.inputType_ = this.inputType_;
            if ((var2 & 4) != 0) {
               var3 |= 4;
            }

            var1.outputType_ = this.outputType_;
            if ((var2 & 8) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.MethodOptions)this.optionsBuilder_.build();
               }

               var3 |= 8;
            }

            if ((var2 & 16) != 0) {
               var1.clientStreaming_ = this.clientStreaming_;
               var3 |= 16;
            }

            if ((var2 & 32) != 0) {
               var1.serverStreaming_ = this.serverStreaming_;
               var3 |= 32;
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clone() {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.MethodDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.MethodDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeFrom(DescriptorProtos.MethodDescriptorProto var1) {
            if (var1 == DescriptorProtos.MethodDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (var1.hasInputType()) {
                  this.bitField0_ |= 2;
                  this.inputType_ = var1.inputType_;
                  this.onChanged();
               }

               if (var1.hasOutputType()) {
                  this.bitField0_ |= 4;
                  this.outputType_ = var1.outputType_;
                  this.onChanged();
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               if (var1.hasClientStreaming()) {
                  this.setClientStreaming(var1.getClientStreaming());
               }

               if (var1.hasServerStreaming()) {
                  this.setServerStreaming(var1.getServerStreaming());
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.MethodDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.MethodDescriptorProto)DescriptorProtos.MethodDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.MethodDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasInputType() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getInputType() {
            Object var1 = this.inputType_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.inputType_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getInputTypeBytes() {
            Object var1 = this.inputType_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.inputType_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setInputType(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.inputType_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearInputType() {
            this.bitField0_ &= -3;
            this.inputType_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getInputType();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setInputTypeBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.inputType_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOutputType() {
            return (this.bitField0_ & 4) != 0;
         }

         public String getOutputType() {
            Object var1 = this.outputType_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.outputType_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getOutputTypeBytes() {
            Object var1 = this.outputType_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.outputType_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOutputType(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.outputType_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearOutputType() {
            this.bitField0_ &= -5;
            this.outputType_ = DescriptorProtos.MethodDescriptorProto.getDefaultInstance().getOutputType();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOutputTypeBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.outputType_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 8) != 0;
         }

         public DescriptorProtos.MethodOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.MethodOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOptions(DescriptorProtos.MethodOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setOptions(DescriptorProtos.MethodOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 8;
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder mergeOptions(DescriptorProtos.MethodOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0 && this.options_ != null && this.options_ != DescriptorProtos.MethodOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.MethodOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 8;
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -9;
            return this;
         }

         public DescriptorProtos.MethodOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 8;
            this.onChanged();
            return (DescriptorProtos.MethodOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.MethodOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.MethodOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public boolean hasClientStreaming() {
            return (this.bitField0_ & 16) != 0;
         }

         public boolean getClientStreaming() {
            return this.clientStreaming_;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setClientStreaming(boolean var1) {
            this.bitField0_ |= 16;
            this.clientStreaming_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearClientStreaming() {
            this.bitField0_ &= -17;
            this.clientStreaming_ = false;
            this.onChanged();
            return this;
         }

         public boolean hasServerStreaming() {
            return (this.bitField0_ & 32) != 0;
         }

         public boolean getServerStreaming() {
            return this.serverStreaming_;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder setServerStreaming(boolean var1) {
            this.bitField0_ |= 32;
            this.serverStreaming_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder clearServerStreaming() {
            this.bitField0_ &= -33;
            this.serverStreaming_ = false;
            this.onChanged();
            return this;
         }

         public final DescriptorProtos.MethodDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.MethodDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface MethodDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasInputType();

      String getInputType();

      ByteString getInputTypeBytes();

      boolean hasOutputType();

      String getOutputType();

      ByteString getOutputTypeBytes();

      boolean hasOptions();

      DescriptorProtos.MethodOptions getOptions();

      DescriptorProtos.MethodOptionsOrBuilder getOptionsOrBuilder();

      boolean hasClientStreaming();

      boolean getClientStreaming();

      boolean hasServerStreaming();

      boolean getServerStreaming();
   }

   public static final class ServiceDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.ServiceDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int METHOD_FIELD_NUMBER = 2;
      private List method_;
      public static final int OPTIONS_FIELD_NUMBER = 3;
      private DescriptorProtos.ServiceOptions options_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.ServiceDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.ServiceDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.ServiceDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.ServiceDescriptorProto(var1, var2);
         }
      };

      private ServiceDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private ServiceDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.method_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.ServiceDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ServiceDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     ByteString var15 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var15;
                     break;
                  case 18:
                     if ((var3 & 2) == 0) {
                        this.method_ = new ArrayList();
                        var3 |= 2;
                     }

                     this.method_.add(var1.readMessage(DescriptorProtos.MethodDescriptorProto.PARSER, var2));
                     break;
                  case 26:
                     DescriptorProtos.ServiceOptions.Builder var7 = null;
                     if ((this.bitField0_ & 2) != 0) {
                        var7 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.ServiceOptions)var1.readMessage(DescriptorProtos.ServiceOptions.PARSER, var2);
                     if (var7 != null) {
                        var7.mergeFrom(this.options_);
                        this.options_ = var7.buildPartial();
                     }

                     this.bitField0_ |= 2;
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 2) != 0) {
                  this.method_ = Collections.unmodifiableList(this.method_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.ServiceDescriptorProto.class, DescriptorProtos.ServiceDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public List getMethodList() {
         return this.method_;
      }

      public List getMethodOrBuilderList() {
         return this.method_;
      }

      public int getMethodCount() {
         return this.method_.size();
      }

      public DescriptorProtos.MethodDescriptorProto getMethod(int var1) {
         return (DescriptorProtos.MethodDescriptorProto)this.method_.get(var1);
      }

      public DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int var1) {
         return (DescriptorProtos.MethodDescriptorProtoOrBuilder)this.method_.get(var1);
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      public DescriptorProtos.ServiceOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getMethodCount(); ++var2) {
               if (!this.getMethod(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         for(int var2 = 0; var2 < this.method_.size(); ++var2) {
            var1.writeMessage(2, (MessageLite)this.method_.get(var2));
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeMessage(3, this.getOptions());
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            for(int var2 = 0; var2 < this.method_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(2, (MessageLite)this.method_.get(var2));
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeMessageSize(3, this.getOptions());
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.ServiceDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.ServiceDescriptorProto var2 = (DescriptorProtos.ServiceDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (!this.getMethodList().equals(var2.getMethodList())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.getMethodCount() > 0) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getMethodList().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ServiceDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.ServiceDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ServiceDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.ServiceDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ServiceDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.ServiceDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ServiceDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ServiceDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.ServiceDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.ServiceDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.ServiceDescriptorProto.Builder newBuilder(DescriptorProtos.ServiceDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.ServiceDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.ServiceDescriptorProto.Builder() : (new DescriptorProtos.ServiceDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.ServiceDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.ServiceDescriptorProto.Builder var2 = new DescriptorProtos.ServiceDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.ServiceDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.ServiceDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      ServiceDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      ServiceDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.ServiceDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private List method_;
         private RepeatedFieldBuilderV3 methodBuilder_;
         private DescriptorProtos.ServiceOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.ServiceDescriptorProto.class, DescriptorProtos.ServiceDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.method_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.method_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getMethodFieldBuilder();
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.methodBuilder_ == null) {
               this.method_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.methodBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_ServiceDescriptorProto_descriptor;
         }

         public DescriptorProtos.ServiceDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.ServiceDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.ServiceDescriptorProto build() {
            DescriptorProtos.ServiceDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto buildPartial() {
            DescriptorProtos.ServiceDescriptorProto var1 = new DescriptorProtos.ServiceDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if (this.methodBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.method_ = Collections.unmodifiableList(this.method_);
                  this.bitField0_ &= -3;
               }

               var1.method_ = this.method_;
            } else {
               var1.method_ = this.methodBuilder_.build();
            }

            if ((var2 & 4) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.ServiceOptions)this.optionsBuilder_.build();
               }

               var3 |= 2;
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clone() {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.ServiceDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.ServiceDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeFrom(DescriptorProtos.ServiceDescriptorProto var1) {
            if (var1 == DescriptorProtos.ServiceDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (this.methodBuilder_ == null) {
                  if (!var1.method_.isEmpty()) {
                     if (this.method_.isEmpty()) {
                        this.method_ = var1.method_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureMethodIsMutable();
                        this.method_.addAll(var1.method_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.method_.isEmpty()) {
                  if (this.methodBuilder_.isEmpty()) {
                     this.methodBuilder_.dispose();
                     this.methodBuilder_ = null;
                     this.method_ = var1.method_;
                     this.bitField0_ &= -3;
                     this.methodBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getMethodFieldBuilder() : null;
                  } else {
                     this.methodBuilder_.addAllMessages(var1.method_);
                  }
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getMethodCount(); ++var1) {
               if (!this.getMethod(var1).isInitialized()) {
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.ServiceDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.ServiceDescriptorProto)DescriptorProtos.ServiceDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.ServiceDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.ServiceDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         private void ensureMethodIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.method_ = new ArrayList(this.method_);
               this.bitField0_ |= 2;
            }

         }

         public List getMethodList() {
            return this.methodBuilder_ == null ? Collections.unmodifiableList(this.method_) : this.methodBuilder_.getMessageList();
         }

         public int getMethodCount() {
            return this.methodBuilder_ == null ? this.method_.size() : this.methodBuilder_.getCount();
         }

         public DescriptorProtos.MethodDescriptorProto getMethod(int var1) {
            return this.methodBuilder_ == null ? (DescriptorProtos.MethodDescriptorProto)this.method_.get(var1) : (DescriptorProtos.MethodDescriptorProto)this.methodBuilder_.getMessage(var1);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setMethod(int var1, DescriptorProtos.MethodDescriptorProto var2) {
            if (this.methodBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureMethodIsMutable();
               this.method_.set(var1, var2);
               this.onChanged();
            } else {
               this.methodBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setMethod(int var1, DescriptorProtos.MethodDescriptorProto.Builder var2) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.methodBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(DescriptorProtos.MethodDescriptorProto var1) {
            if (this.methodBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureMethodIsMutable();
               this.method_.add(var1);
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(int var1, DescriptorProtos.MethodDescriptorProto var2) {
            if (this.methodBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureMethodIsMutable();
               this.method_.add(var1, var2);
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(DescriptorProtos.MethodDescriptorProto.Builder var1) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.add(var1.build());
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addMethod(int var1, DescriptorProtos.MethodDescriptorProto.Builder var2) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.methodBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addAllMethod(Iterable var1) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.method_);
               this.onChanged();
            } else {
               this.methodBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearMethod() {
            if (this.methodBuilder_ == null) {
               this.method_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.methodBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder removeMethod(int var1) {
            if (this.methodBuilder_ == null) {
               this.ensureMethodIsMutable();
               this.method_.remove(var1);
               this.onChanged();
            } else {
               this.methodBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.MethodDescriptorProto.Builder getMethodBuilder(int var1) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)this.getMethodFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int var1) {
            return this.methodBuilder_ == null ? (DescriptorProtos.MethodDescriptorProtoOrBuilder)this.method_.get(var1) : (DescriptorProtos.MethodDescriptorProtoOrBuilder)this.methodBuilder_.getMessageOrBuilder(var1);
         }

         public List getMethodOrBuilderList() {
            return this.methodBuilder_ != null ? this.methodBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.method_);
         }

         public DescriptorProtos.MethodDescriptorProto.Builder addMethodBuilder() {
            return (DescriptorProtos.MethodDescriptorProto.Builder)this.getMethodFieldBuilder().addBuilder(DescriptorProtos.MethodDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.MethodDescriptorProto.Builder addMethodBuilder(int var1) {
            return (DescriptorProtos.MethodDescriptorProto.Builder)this.getMethodFieldBuilder().addBuilder(var1, DescriptorProtos.MethodDescriptorProto.getDefaultInstance());
         }

         public List getMethodBuilderList() {
            return this.getMethodFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getMethodFieldBuilder() {
            if (this.methodBuilder_ == null) {
               this.methodBuilder_ = new RepeatedFieldBuilderV3(this.method_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.method_ = null;
            }

            return this.methodBuilder_;
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         public DescriptorProtos.ServiceOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.ServiceOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setOptions(DescriptorProtos.ServiceOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder setOptions(DescriptorProtos.ServiceOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder mergeOptions(DescriptorProtos.ServiceOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.ServiceOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.ServiceOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DescriptorProtos.ServiceOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return (DescriptorProtos.ServiceOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.ServiceOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.ServiceOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.ServiceDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.ServiceDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface ServiceDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List getMethodList();

      DescriptorProtos.MethodDescriptorProto getMethod(int var1);

      int getMethodCount();

      List getMethodOrBuilderList();

      DescriptorProtos.MethodDescriptorProtoOrBuilder getMethodOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.ServiceOptions getOptions();

      DescriptorProtos.ServiceOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class EnumValueDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.EnumValueDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int NUMBER_FIELD_NUMBER = 2;
      private int number_;
      public static final int OPTIONS_FIELD_NUMBER = 3;
      private DescriptorProtos.EnumValueOptions options_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.EnumValueDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.EnumValueDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.EnumValueDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumValueDescriptorProto(var1, var2);
         }
      };

      private EnumValueDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private EnumValueDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.EnumValueDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumValueDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     ByteString var15 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var15;
                     break;
                  case 16:
                     this.bitField0_ |= 2;
                     this.number_ = var1.readInt32();
                     break;
                  case 26:
                     DescriptorProtos.EnumValueOptions.Builder var7 = null;
                     if ((this.bitField0_ & 4) != 0) {
                        var7 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.EnumValueOptions)var1.readMessage(DescriptorProtos.EnumValueOptions.PARSER, var2);
                     if (var7 != null) {
                        var7.mergeFrom(this.options_);
                        this.options_ = var7.buildPartial();
                     }

                     this.bitField0_ |= 4;
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueDescriptorProto.class, DescriptorProtos.EnumValueDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasNumber() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getNumber() {
         return this.number_;
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 4) != 0;
      }

      public DescriptorProtos.EnumValueOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeInt32(2, this.number_);
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeMessage(3, this.getOptions());
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeInt32Size(2, this.number_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeMessageSize(3, this.getOptions());
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.EnumValueDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.EnumValueDescriptorProto var2 = (DescriptorProtos.EnumValueDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (this.hasNumber() != var2.hasNumber()) {
               return false;
            } else if (this.hasNumber() && this.getNumber() != var2.getNumber()) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.hasNumber()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getNumber();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumValueDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumValueDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumValueDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumValueDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumValueDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.EnumValueDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumValueDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumValueDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.EnumValueDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumValueDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumValueDescriptorProto.Builder newBuilder(DescriptorProtos.EnumValueDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.EnumValueDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumValueDescriptorProto.Builder() : (new DescriptorProtos.EnumValueDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.EnumValueDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.EnumValueDescriptorProto.Builder var2 = new DescriptorProtos.EnumValueDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.EnumValueDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumValueDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      EnumValueDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      EnumValueDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.EnumValueDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private int number_;
         private DescriptorProtos.EnumValueOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumValueDescriptorProto.class, DescriptorProtos.EnumValueDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.number_ = 0;
            this.bitField0_ &= -3;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumValueDescriptorProto_descriptor;
         }

         public DescriptorProtos.EnumValueDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.EnumValueDescriptorProto build() {
            DescriptorProtos.EnumValueDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto buildPartial() {
            DescriptorProtos.EnumValueDescriptorProto var1 = new DescriptorProtos.EnumValueDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if ((var2 & 2) != 0) {
               var1.number_ = this.number_;
               var3 |= 2;
            }

            if ((var2 & 4) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.EnumValueOptions)this.optionsBuilder_.build();
               }

               var3 |= 4;
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clone() {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.EnumValueDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.EnumValueDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeFrom(DescriptorProtos.EnumValueDescriptorProto var1) {
            if (var1 == DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (var1.hasNumber()) {
                  this.setNumber(var1.getNumber());
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.EnumValueDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.EnumValueDescriptorProto)DescriptorProtos.EnumValueDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.EnumValueDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasNumber() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getNumber() {
            return this.number_;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setNumber(int var1) {
            this.bitField0_ |= 2;
            this.number_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearNumber() {
            this.bitField0_ &= -3;
            this.number_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         public DescriptorProtos.EnumValueOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.EnumValueOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setOptions(DescriptorProtos.EnumValueOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder setOptions(DescriptorProtos.EnumValueOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder mergeOptions(DescriptorProtos.EnumValueOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.EnumValueOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.EnumValueOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DescriptorProtos.EnumValueOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return (DescriptorProtos.EnumValueOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.EnumValueOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.EnumValueOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.EnumValueDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.EnumValueDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface EnumValueDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasNumber();

      int getNumber();

      boolean hasOptions();

      DescriptorProtos.EnumValueOptions getOptions();

      DescriptorProtos.EnumValueOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class EnumDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.EnumDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int VALUE_FIELD_NUMBER = 2;
      private List value_;
      public static final int OPTIONS_FIELD_NUMBER = 3;
      private DescriptorProtos.EnumOptions options_;
      public static final int RESERVED_RANGE_FIELD_NUMBER = 4;
      private List reservedRange_;
      public static final int RESERVED_NAME_FIELD_NUMBER = 5;
      private LazyStringList reservedName_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.EnumDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.EnumDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.EnumDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.EnumDescriptorProto(var1, var2);
         }
      };

      private EnumDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private EnumDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.value_ = Collections.emptyList();
         this.reservedRange_ = Collections.emptyList();
         this.reservedName_ = LazyStringArrayList.EMPTY;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.EnumDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private EnumDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  ByteString var7;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var7;
                     break;
                  case 18:
                     if ((var3 & 2) == 0) {
                        this.value_ = new ArrayList();
                        var3 |= 2;
                     }

                     this.value_.add(var1.readMessage(DescriptorProtos.EnumValueDescriptorProto.PARSER, var2));
                     break;
                  case 26:
                     DescriptorProtos.EnumOptions.Builder var15 = null;
                     if ((this.bitField0_ & 2) != 0) {
                        var15 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.EnumOptions)var1.readMessage(DescriptorProtos.EnumOptions.PARSER, var2);
                     if (var15 != null) {
                        var15.mergeFrom(this.options_);
                        this.options_ = var15.buildPartial();
                     }

                     this.bitField0_ |= 2;
                     break;
                  case 34:
                     if ((var3 & 8) == 0) {
                        this.reservedRange_ = new ArrayList();
                        var3 |= 8;
                     }

                     this.reservedRange_.add(var1.readMessage(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.PARSER, var2));
                     break;
                  case 42:
                     var7 = var1.readBytes();
                     if ((var3 & 16) == 0) {
                        this.reservedName_ = new LazyStringArrayList();
                        var3 |= 16;
                     }

                     this.reservedName_.add(var7);
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 2) != 0) {
                  this.value_ = Collections.unmodifiableList(this.value_);
               }

               if ((var3 & 8) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
               }

               if ((var3 & 16) != 0) {
                  this.reservedName_ = this.reservedName_.getUnmodifiableView();
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumDescriptorProto.class, DescriptorProtos.EnumDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public List getValueList() {
         return this.value_;
      }

      public List getValueOrBuilderList() {
         return this.value_;
      }

      public int getValueCount() {
         return this.value_.size();
      }

      public DescriptorProtos.EnumValueDescriptorProto getValue(int var1) {
         return (DescriptorProtos.EnumValueDescriptorProto)this.value_.get(var1);
      }

      public DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int var1) {
         return (DescriptorProtos.EnumValueDescriptorProtoOrBuilder)this.value_.get(var1);
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      public DescriptorProtos.EnumOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
      }

      public List getReservedRangeList() {
         return this.reservedRange_;
      }

      public List getReservedRangeOrBuilderList() {
         return this.reservedRange_;
      }

      public int getReservedRangeCount() {
         return this.reservedRange_.size();
      }

      public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int var1) {
         return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)this.reservedRange_.get(var1);
      }

      public DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int var1) {
         return (DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder)this.reservedRange_.get(var1);
      }

      public ProtocolStringList getReservedNameList() {
         return this.reservedName_;
      }

      public int getReservedNameCount() {
         return this.reservedName_.size();
      }

      public String getReservedName(int var1) {
         return (String)this.reservedName_.get(var1);
      }

      public ByteString getReservedNameBytes(int var1) {
         return this.reservedName_.getByteString(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getValueCount(); ++var2) {
               if (!this.getValue(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         int var2;
         for(var2 = 0; var2 < this.value_.size(); ++var2) {
            var1.writeMessage(2, (MessageLite)this.value_.get(var2));
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeMessage(3, this.getOptions());
         }

         for(var2 = 0; var2 < this.reservedRange_.size(); ++var2) {
            var1.writeMessage(4, (MessageLite)this.reservedRange_.get(var2));
         }

         for(var2 = 0; var2 < this.reservedName_.size(); ++var2) {
            GeneratedMessageV3.writeString(var1, 5, this.reservedName_.getRaw(var2));
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            int var2;
            for(var2 = 0; var2 < this.value_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(2, (MessageLite)this.value_.get(var2));
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeMessageSize(3, this.getOptions());
            }

            for(var2 = 0; var2 < this.reservedRange_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(4, (MessageLite)this.reservedRange_.get(var2));
            }

            var2 = 0;

            for(int var3 = 0; var3 < this.reservedName_.size(); ++var3) {
               var2 += computeStringSizeNoTag(this.reservedName_.getRaw(var3));
            }

            var1 += var2;
            var1 += 1 * this.getReservedNameList().size();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.EnumDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.EnumDescriptorProto var2 = (DescriptorProtos.EnumDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (!this.getValueList().equals(var2.getValueList())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else if (!this.getReservedRangeList().equals(var2.getReservedRangeList())) {
               return false;
            } else if (!this.getReservedNameList().equals(var2.getReservedNameList())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.getValueCount() > 0) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getValueList().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            if (this.getReservedRangeCount() > 0) {
               var2 = 37 * var2 + 4;
               var2 = 53 * var2 + this.getReservedRangeList().hashCode();
            }

            if (this.getReservedNameCount() > 0) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + this.getReservedNameList().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.EnumDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.EnumDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.EnumDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.EnumDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.EnumDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.EnumDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.EnumDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.EnumDescriptorProto.Builder newBuilder(DescriptorProtos.EnumDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.EnumDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumDescriptorProto.Builder() : (new DescriptorProtos.EnumDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.EnumDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.EnumDescriptorProto.Builder var2 = new DescriptorProtos.EnumDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.EnumDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.EnumDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      EnumDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      EnumDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.EnumDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private List value_;
         private RepeatedFieldBuilderV3 valueBuilder_;
         private DescriptorProtos.EnumOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;
         private List reservedRange_;
         private RepeatedFieldBuilderV3 reservedRangeBuilder_;
         private LazyStringList reservedName_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumDescriptorProto.class, DescriptorProtos.EnumDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.value_ = Collections.emptyList();
            this.reservedRange_ = Collections.emptyList();
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.value_ = Collections.emptyList();
            this.reservedRange_ = Collections.emptyList();
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getValueFieldBuilder();
               this.getOptionsFieldBuilder();
               this.getReservedRangeFieldBuilder();
            }

         }

         public DescriptorProtos.EnumDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.valueBuilder_ == null) {
               this.value_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.valueBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.reservedRangeBuilder_.clear();
            }

            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -17;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_descriptor;
         }

         public DescriptorProtos.EnumDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.EnumDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.EnumDescriptorProto build() {
            DescriptorProtos.EnumDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.EnumDescriptorProto buildPartial() {
            DescriptorProtos.EnumDescriptorProto var1 = new DescriptorProtos.EnumDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if (this.valueBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.value_ = Collections.unmodifiableList(this.value_);
                  this.bitField0_ &= -3;
               }

               var1.value_ = this.value_;
            } else {
               var1.value_ = this.valueBuilder_.build();
            }

            if ((var2 & 4) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.EnumOptions)this.optionsBuilder_.build();
               }

               var3 |= 2;
            }

            if (this.reservedRangeBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
                  this.bitField0_ &= -9;
               }

               var1.reservedRange_ = this.reservedRange_;
            } else {
               var1.reservedRange_ = this.reservedRangeBuilder_.build();
            }

            if ((this.bitField0_ & 16) != 0) {
               this.reservedName_ = this.reservedName_.getUnmodifiableView();
               this.bitField0_ &= -17;
            }

            var1.reservedName_ = this.reservedName_;
            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clone() {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.EnumDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.EnumDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeFrom(DescriptorProtos.EnumDescriptorProto var1) {
            if (var1 == DescriptorProtos.EnumDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (this.valueBuilder_ == null) {
                  if (!var1.value_.isEmpty()) {
                     if (this.value_.isEmpty()) {
                        this.value_ = var1.value_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureValueIsMutable();
                        this.value_.addAll(var1.value_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.value_.isEmpty()) {
                  if (this.valueBuilder_.isEmpty()) {
                     this.valueBuilder_.dispose();
                     this.valueBuilder_ = null;
                     this.value_ = var1.value_;
                     this.bitField0_ &= -3;
                     this.valueBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getValueFieldBuilder() : null;
                  } else {
                     this.valueBuilder_.addAllMessages(var1.value_);
                  }
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               if (this.reservedRangeBuilder_ == null) {
                  if (!var1.reservedRange_.isEmpty()) {
                     if (this.reservedRange_.isEmpty()) {
                        this.reservedRange_ = var1.reservedRange_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureReservedRangeIsMutable();
                        this.reservedRange_.addAll(var1.reservedRange_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.reservedRange_.isEmpty()) {
                  if (this.reservedRangeBuilder_.isEmpty()) {
                     this.reservedRangeBuilder_.dispose();
                     this.reservedRangeBuilder_ = null;
                     this.reservedRange_ = var1.reservedRange_;
                     this.bitField0_ &= -9;
                     this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getReservedRangeFieldBuilder() : null;
                  } else {
                     this.reservedRangeBuilder_.addAllMessages(var1.reservedRange_);
                  }
               }

               if (!var1.reservedName_.isEmpty()) {
                  if (this.reservedName_.isEmpty()) {
                     this.reservedName_ = var1.reservedName_;
                     this.bitField0_ &= -17;
                  } else {
                     this.ensureReservedNameIsMutable();
                     this.reservedName_.addAll(var1.reservedName_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getValueCount(); ++var1) {
               if (!this.getValue(var1).isInitialized()) {
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.EnumDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.EnumDescriptorProto)DescriptorProtos.EnumDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.EnumDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.EnumDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         private void ensureValueIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.value_ = new ArrayList(this.value_);
               this.bitField0_ |= 2;
            }

         }

         public List getValueList() {
            return this.valueBuilder_ == null ? Collections.unmodifiableList(this.value_) : this.valueBuilder_.getMessageList();
         }

         public int getValueCount() {
            return this.valueBuilder_ == null ? this.value_.size() : this.valueBuilder_.getCount();
         }

         public DescriptorProtos.EnumValueDescriptorProto getValue(int var1) {
            return this.valueBuilder_ == null ? (DescriptorProtos.EnumValueDescriptorProto)this.value_.get(var1) : (DescriptorProtos.EnumValueDescriptorProto)this.valueBuilder_.getMessage(var1);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setValue(int var1, DescriptorProtos.EnumValueDescriptorProto var2) {
            if (this.valueBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureValueIsMutable();
               this.value_.set(var1, var2);
               this.onChanged();
            } else {
               this.valueBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setValue(int var1, DescriptorProtos.EnumValueDescriptorProto.Builder var2) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.valueBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(DescriptorProtos.EnumValueDescriptorProto var1) {
            if (this.valueBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureValueIsMutable();
               this.value_.add(var1);
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(int var1, DescriptorProtos.EnumValueDescriptorProto var2) {
            if (this.valueBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureValueIsMutable();
               this.value_.add(var1, var2);
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(DescriptorProtos.EnumValueDescriptorProto.Builder var1) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.add(var1.build());
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addValue(int var1, DescriptorProtos.EnumValueDescriptorProto.Builder var2) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.valueBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addAllValue(Iterable var1) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.value_);
               this.onChanged();
            } else {
               this.valueBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearValue() {
            if (this.valueBuilder_ == null) {
               this.value_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.valueBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder removeValue(int var1) {
            if (this.valueBuilder_ == null) {
               this.ensureValueIsMutable();
               this.value_.remove(var1);
               this.onChanged();
            } else {
               this.valueBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder getValueBuilder(int var1) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)this.getValueFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int var1) {
            return this.valueBuilder_ == null ? (DescriptorProtos.EnumValueDescriptorProtoOrBuilder)this.value_.get(var1) : (DescriptorProtos.EnumValueDescriptorProtoOrBuilder)this.valueBuilder_.getMessageOrBuilder(var1);
         }

         public List getValueOrBuilderList() {
            return this.valueBuilder_ != null ? this.valueBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.value_);
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder addValueBuilder() {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)this.getValueFieldBuilder().addBuilder(DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.EnumValueDescriptorProto.Builder addValueBuilder(int var1) {
            return (DescriptorProtos.EnumValueDescriptorProto.Builder)this.getValueFieldBuilder().addBuilder(var1, DescriptorProtos.EnumValueDescriptorProto.getDefaultInstance());
         }

         public List getValueBuilderList() {
            return this.getValueFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getValueFieldBuilder() {
            if (this.valueBuilder_ == null) {
               this.valueBuilder_ = new RepeatedFieldBuilderV3(this.value_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.value_ = null;
            }

            return this.valueBuilder_;
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         public DescriptorProtos.EnumOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.EnumOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setOptions(DescriptorProtos.EnumOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setOptions(DescriptorProtos.EnumOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder mergeOptions(DescriptorProtos.EnumOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.EnumOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.EnumOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 4;
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -5;
            return this;
         }

         public DescriptorProtos.EnumOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 4;
            this.onChanged();
            return (DescriptorProtos.EnumOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.EnumOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.EnumOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         private void ensureReservedRangeIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.reservedRange_ = new ArrayList(this.reservedRange_);
               this.bitField0_ |= 8;
            }

         }

         public List getReservedRangeList() {
            return this.reservedRangeBuilder_ == null ? Collections.unmodifiableList(this.reservedRange_) : this.reservedRangeBuilder_.getMessageList();
         }

         public int getReservedRangeCount() {
            return this.reservedRangeBuilder_ == null ? this.reservedRange_.size() : this.reservedRangeBuilder_.getCount();
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int var1) {
            return this.reservedRangeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)this.reservedRange_.get(var1) : (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)this.reservedRangeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setReservedRange(int var1, DescriptorProtos.EnumDescriptorProto.EnumReservedRange var2) {
            if (this.reservedRangeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(var1, var2);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setReservedRange(int var1, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder var2) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(DescriptorProtos.EnumDescriptorProto.EnumReservedRange var1) {
            if (this.reservedRangeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(int var1, DescriptorProtos.EnumDescriptorProto.EnumReservedRange var2) {
            if (this.reservedRangeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1, var2);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder var1) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedRange(int var1, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder var2) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addAllReservedRange(Iterable var1) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.reservedRange_);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearReservedRange() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder removeReservedRange(int var1) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.remove(var1);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder getReservedRangeBuilder(int var1) {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)this.getReservedRangeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int var1) {
            return this.reservedRangeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder)this.reservedRange_.get(var1) : (DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder)this.reservedRangeBuilder_.getMessageOrBuilder(var1);
         }

         public List getReservedRangeOrBuilderList() {
            return this.reservedRangeBuilder_ != null ? this.reservedRangeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.reservedRange_);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addReservedRangeBuilder() {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)this.getReservedRangeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance());
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addReservedRangeBuilder(int var1) {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)this.getReservedRangeFieldBuilder().addBuilder(var1, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance());
         }

         public List getReservedRangeBuilderList() {
            return this.getReservedRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getReservedRangeFieldBuilder() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3(this.reservedRange_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean());
               this.reservedRange_ = null;
            }

            return this.reservedRangeBuilder_;
         }

         private void ensureReservedNameIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.reservedName_ = new LazyStringArrayList(this.reservedName_);
               this.bitField0_ |= 16;
            }

         }

         public ProtocolStringList getReservedNameList() {
            return this.reservedName_.getUnmodifiableView();
         }

         public int getReservedNameCount() {
            return this.reservedName_.size();
         }

         public String getReservedName(int var1) {
            return (String)this.reservedName_.get(var1);
         }

         public ByteString getReservedNameBytes(int var1) {
            return this.reservedName_.getByteString(var1);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder setReservedName(int var1, String var2) {
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.set(var1, (Object)var2);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add((Object)var1);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addAllReservedName(Iterable var1) {
            this.ensureReservedNameIsMutable();
            AbstractMessageLite.Builder.addAll(var1, (List)this.reservedName_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder clearReservedName() {
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -17;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addReservedNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add(var1);
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.EnumDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.EnumDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static final class EnumReservedRange extends GeneratedMessageV3 implements DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int START_FIELD_NUMBER = 1;
         private int start_;
         public static final int END_FIELD_NUMBER = 2;
         private int end_;
         private byte memoizedIsInitialized;
         private static final DescriptorProtos.EnumDescriptorProto.EnumReservedRange DEFAULT_INSTANCE = new DescriptorProtos.EnumDescriptorProto.EnumReservedRange();
         /** @deprecated */
         @Deprecated
         public static final Parser PARSER = new AbstractParser() {
            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
               return new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(var1, var2);
            }
         };

         private EnumReservedRange(GeneratedMessageV3.Builder var1) {
            super(var1);
            this.memoizedIsInitialized = -1;
         }

         private EnumReservedRange() {
            this.memoizedIsInitialized = -1;
         }

         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
            return new DescriptorProtos.EnumDescriptorProto.EnumReservedRange();
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private EnumReservedRange(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            this();
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               boolean var3 = false;
               UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

               try {
                  boolean var5 = false;

                  while(!var5) {
                     int var6 = var1.readTag();
                     switch(var6) {
                     case 0:
                        var5 = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.start_ = var1.readInt32();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.end_ = var1.readInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(var1, var4, var2, var6)) {
                           var5 = true;
                        }
                     }
                  }
               } catch (InvalidProtocolBufferException var11) {
                  throw var11.setUnfinishedMessage(this);
               } catch (IOException var12) {
                  throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = var4.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.class, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder.class);
         }

         public boolean hasStart() {
            return (this.bitField0_ & 1) != 0;
         }

         public int getStart() {
            return this.start_;
         }

         public boolean hasEnd() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getEnd() {
            return this.end_;
         }

         public final boolean isInitialized() {
            byte var1 = this.memoizedIsInitialized;
            if (var1 == 1) {
               return true;
            } else if (var1 == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream var1) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               var1.writeInt32(1, this.start_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1.writeInt32(2, this.end_);
            }

            this.unknownFields.writeTo(var1);
         }

         public int getSerializedSize() {
            int var1 = this.memoizedSize;
            if (var1 != -1) {
               return var1;
            } else {
               var1 = 0;
               if ((this.bitField0_ & 1) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(1, this.start_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(2, this.end_);
               }

               var1 += this.unknownFields.getSerializedSize();
               this.memoizedSize = var1;
               return var1;
            }
         }

         public boolean equals(Object var1) {
            if (var1 == this) {
               return true;
            } else if (!(var1 instanceof DescriptorProtos.EnumDescriptorProto.EnumReservedRange)) {
               return super.equals(var1);
            } else {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange var2 = (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)var1;
               if (this.hasStart() != var2.hasStart()) {
                  return false;
               } else if (this.hasStart() && this.getStart() != var2.getStart()) {
                  return false;
               } else if (this.hasEnd() != var2.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != var2.getEnd()) {
                  return false;
               } else {
                  return this.unknownFields.equals(var2.unknownFields);
               }
            }
         }

         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               byte var1 = 41;
               int var2 = 19 * var1 + getDescriptor().hashCode();
               if (this.hasStart()) {
                  var2 = 37 * var2 + 1;
                  var2 = 53 * var2 + this.getStart();
               }

               if (this.hasEnd()) {
                  var2 = 37 * var2 + 2;
                  var2 = 53 * var2 + this.getEnd();
               }

               var2 = 29 * var2 + this.unknownFields.hashCode();
               this.memoizedHashCode = var2;
               return var2;
            }
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteString var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(byte[] var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseDelimitedFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(CodedInputStream var0) throws IOException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilder(DescriptorProtos.EnumDescriptorProto.EnumReservedRange var0) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder() : (new DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder()).mergeFrom(this);
         }

         protected DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
            DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder var2 = new DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder(var1);
            return var2;
         }

          @Override
          public byte[] toByteArray() {
              return new byte[0];
          }

          public static DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser parser() {
            return PARSER;
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         // $FF: synthetic method
         EnumReservedRange(GeneratedMessageV3.Builder var1, Object var2) {
            this(var1);
         }

         // $FF: synthetic method
         EnumReservedRange(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
            this(var1, var2);
         }

         public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder {
            private int bitField0_;
            private int start_;
            private int end_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.EnumDescriptorProto.EnumReservedRange.class, DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent var1) {
               super(var1);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clear() {
               super.clear();
               this.start_ = 0;
               this.bitField0_ &= -2;
               this.end_ = 0;
               this.bitField0_ &= -3;
               return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_EnumDescriptorProto_EnumReservedRange_descriptor;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange getDefaultInstanceForType() {
               return DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance();
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange build() {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange var1 = this.buildPartial();
               if (!var1.isInitialized()) {
                  throw newUninitializedMessageException(var1);
               } else {
                  return var1;
               }
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange buildPartial() {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange var1 = new DescriptorProtos.EnumDescriptorProto.EnumReservedRange(this);
               int var2 = this.bitField0_;
               int var3 = 0;
               if ((var2 & 1) != 0) {
                  var1.start_ = this.start_;
                  var3 |= 1;
               }

               if ((var2 & 2) != 0) {
                  var1.end_ = this.end_;
                  var3 |= 2;
               }

               var1.bitField0_ = var3;
               this.onBuilt();
               return var1;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clone() {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.clone();
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.setField(var1, var2);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearField(Descriptors.FieldDescriptor var1) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.clearField(var1);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearOneof(Descriptors.OneofDescriptor var1) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.clearOneof(var1);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.setRepeatedField(var1, var2, var3);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.addRepeatedField(var1, var2);
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeFrom(Message var1) {
               if (var1 instanceof DescriptorProtos.EnumDescriptorProto.EnumReservedRange) {
                  return this.mergeFrom((DescriptorProtos.EnumDescriptorProto.EnumReservedRange)var1);
               } else {
                  super.mergeFrom(var1);
                  return this;
               }
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeFrom(DescriptorProtos.EnumDescriptorProto.EnumReservedRange var1) {
               if (var1 == DescriptorProtos.EnumDescriptorProto.EnumReservedRange.getDefaultInstance()) {
                  return this;
               } else {
                  if (var1.hasStart()) {
                     this.setStart(var1.getStart());
                  }

                  if (var1.hasEnd()) {
                     this.setEnd(var1.getEnd());
                  }

                  this.mergeUnknownFields(var1.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
               DescriptorProtos.EnumDescriptorProto.EnumReservedRange var3 = null;

               try {
                  var3 = (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)DescriptorProtos.EnumDescriptorProto.EnumReservedRange.PARSER.parsePartialFrom(var1, var2);
               } catch (InvalidProtocolBufferException var8) {
                  var3 = (DescriptorProtos.EnumDescriptorProto.EnumReservedRange)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (var3 != null) {
                     this.mergeFrom(var3);
                  }

               }

               return this;
            }

            public boolean hasStart() {
               return (this.bitField0_ & 1) != 0;
            }

            public int getStart() {
               return this.start_;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setStart(int var1) {
               this.bitField0_ |= 1;
               this.start_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearStart() {
               this.bitField0_ &= -2;
               this.start_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasEnd() {
               return (this.bitField0_ & 2) != 0;
            }

            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setEnd(int var1) {
               this.bitField0_ |= 2;
               this.end_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder clearEnd() {
               this.bitField0_ &= -3;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder setUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.setUnknownFields(var1);
            }

            public final DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder mergeUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.EnumDescriptorProto.EnumReservedRange.Builder)super.mergeUnknownFields(var1);
            }

            // $FF: synthetic method
            Builder(Object var1) {
               this();
            }

            // $FF: synthetic method
            Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
               this(var1);
            }
         }
      }

      public interface EnumReservedRangeOrBuilder extends MessageOrBuilder {
         boolean hasStart();

         int getStart();

         boolean hasEnd();

         int getEnd();
      }
   }

   public interface EnumDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List getValueList();

      DescriptorProtos.EnumValueDescriptorProto getValue(int var1);

      int getValueCount();

      List getValueOrBuilderList();

      DescriptorProtos.EnumValueDescriptorProtoOrBuilder getValueOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.EnumOptions getOptions();

      DescriptorProtos.EnumOptionsOrBuilder getOptionsOrBuilder();

      List getReservedRangeList();

      DescriptorProtos.EnumDescriptorProto.EnumReservedRange getReservedRange(int var1);

      int getReservedRangeCount();

      List getReservedRangeOrBuilderList();

      DescriptorProtos.EnumDescriptorProto.EnumReservedRangeOrBuilder getReservedRangeOrBuilder(int var1);

      List getReservedNameList();

      int getReservedNameCount();

      String getReservedName(int var1);

      ByteString getReservedNameBytes(int var1);
   }

   public static final class OneofDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.OneofDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int OPTIONS_FIELD_NUMBER = 2;
      private DescriptorProtos.OneofOptions options_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.OneofDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.OneofDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.OneofDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.OneofDescriptorProto(var1, var2);
         }
      };

      private OneofDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private OneofDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.OneofDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private OneofDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     ByteString var15 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var15;
                     break;
                  case 18:
                     DescriptorProtos.OneofOptions.Builder var7 = null;
                     if ((this.bitField0_ & 2) != 0) {
                        var7 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.OneofOptions)var1.readMessage(DescriptorProtos.OneofOptions.PARSER, var2);
                     if (var7 != null) {
                        var7.mergeFrom(this.options_);
                        this.options_ = var7.buildPartial();
                     }

                     this.bitField0_ |= 2;
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.OneofDescriptorProto.class, DescriptorProtos.OneofDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      public DescriptorProtos.OneofOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeMessage(2, this.getOptions());
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeMessageSize(2, this.getOptions());
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.OneofDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.OneofDescriptorProto var2 = (DescriptorProtos.OneofDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.OneofDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.OneofDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.OneofDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.OneofDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.OneofDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.OneofDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.OneofDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.OneofDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.OneofDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.OneofDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.OneofDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.OneofDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.OneofDescriptorProto.Builder newBuilder(DescriptorProtos.OneofDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.OneofDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.OneofDescriptorProto.Builder() : (new DescriptorProtos.OneofDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.OneofDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.OneofDescriptorProto.Builder var2 = new DescriptorProtos.OneofDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.OneofDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.OneofDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      OneofDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      OneofDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.OneofDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private DescriptorProtos.OneofOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.OneofDescriptorProto.class, DescriptorProtos.OneofDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.OneofDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_OneofDescriptorProto_descriptor;
         }

         public DescriptorProtos.OneofDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.OneofDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.OneofDescriptorProto build() {
            DescriptorProtos.OneofDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.OneofDescriptorProto buildPartial() {
            DescriptorProtos.OneofDescriptorProto var1 = new DescriptorProtos.OneofDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if ((var2 & 2) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.OneofOptions)this.optionsBuilder_.build();
               }

               var3 |= 2;
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clone() {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.OneofDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.OneofDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeFrom(DescriptorProtos.OneofDescriptorProto var1) {
            if (var1 == DescriptorProtos.OneofDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.OneofDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.OneofDescriptorProto)DescriptorProtos.OneofDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.OneofDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.OneofDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 2) != 0;
         }

         public DescriptorProtos.OneofOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.OneofOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setOptions(DescriptorProtos.OneofOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder setOptions(DescriptorProtos.OneofOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 2;
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder mergeOptions(DescriptorProtos.OneofOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0 && this.options_ != null && this.options_ != DescriptorProtos.OneofOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.OneofOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 2;
            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -3;
            return this;
         }

         public DescriptorProtos.OneofOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 2;
            this.onChanged();
            return (DescriptorProtos.OneofOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.OneofOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.OneofOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.OneofDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.OneofDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface OneofDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasOptions();

      DescriptorProtos.OneofOptions getOptions();

      DescriptorProtos.OneofOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class FieldDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.FieldDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int NUMBER_FIELD_NUMBER = 3;
      private int number_;
      public static final int LABEL_FIELD_NUMBER = 4;
      private int label_;
      public static final int TYPE_FIELD_NUMBER = 5;
      private int type_;
      public static final int TYPE_NAME_FIELD_NUMBER = 6;
      private volatile Object typeName_;
      public static final int EXTENDEE_FIELD_NUMBER = 2;
      private volatile Object extendee_;
      public static final int DEFAULT_VALUE_FIELD_NUMBER = 7;
      private volatile Object defaultValue_;
      public static final int ONEOF_INDEX_FIELD_NUMBER = 9;
      private int oneofIndex_;
      public static final int JSON_NAME_FIELD_NUMBER = 10;
      private volatile Object jsonName_;
      public static final int OPTIONS_FIELD_NUMBER = 8;
      private DescriptorProtos.FieldOptions options_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.FieldDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.FieldDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.FieldDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FieldDescriptorProto(var1, var2);
         }
      };

      private FieldDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private FieldDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.label_ = 1;
         this.type_ = 1;
         this.typeName_ = "";
         this.extendee_ = "";
         this.defaultValue_ = "";
         this.jsonName_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.FieldDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FieldDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  ByteString var7;
                  int var18;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var7;
                     break;
                  case 18:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 32;
                     this.extendee_ = var7;
                     break;
                  case 24:
                     this.bitField0_ |= 2;
                     this.number_ = var1.readInt32();
                     break;
                  case 32:
                     var18 = var1.readEnum();
                     DescriptorProtos.FieldDescriptorProto.Label var17 = DescriptorProtos.FieldDescriptorProto.Label.valueOf(var18);
                     if (var17 == null) {
                        var4.mergeVarintField(4, var18);
                     } else {
                        this.bitField0_ |= 4;
                        this.label_ = var18;
                     }
                     break;
                  case 40:
                     var18 = var1.readEnum();
                     DescriptorProtos.FieldDescriptorProto.Type var8 = DescriptorProtos.FieldDescriptorProto.Type.valueOf(var18);
                     if (var8 == null) {
                        var4.mergeVarintField(5, var18);
                     } else {
                        this.bitField0_ |= 8;
                        this.type_ = var18;
                     }
                     break;
                  case 50:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 16;
                     this.typeName_ = var7;
                     break;
                  case 58:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 64;
                     this.defaultValue_ = var7;
                     break;
                  case 66:
                     DescriptorProtos.FieldOptions.Builder var16 = null;
                     if ((this.bitField0_ & 512) != 0) {
                        var16 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.FieldOptions)var1.readMessage(DescriptorProtos.FieldOptions.PARSER, var2);
                     if (var16 != null) {
                        var16.mergeFrom(this.options_);
                        this.options_ = var16.buildPartial();
                     }

                     this.bitField0_ |= 512;
                     break;
                  case 72:
                     this.bitField0_ |= 128;
                     this.oneofIndex_ = var1.readInt32();
                     break;
                  case 82:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 256;
                     this.jsonName_ = var7;
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
            } finally {
               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FieldDescriptorProto.class, DescriptorProtos.FieldDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasNumber() {
         return (this.bitField0_ & 2) != 0;
      }

      public int getNumber() {
         return this.number_;
      }

      public boolean hasLabel() {
         return (this.bitField0_ & 4) != 0;
      }

      public DescriptorProtos.FieldDescriptorProto.Label getLabel() {
         DescriptorProtos.FieldDescriptorProto.Label var1 = DescriptorProtos.FieldDescriptorProto.Label.valueOf(this.label_);
         return var1 == null ? DescriptorProtos.FieldDescriptorProto.Label.LABEL_OPTIONAL : var1;
      }

      public boolean hasType() {
         return (this.bitField0_ & 8) != 0;
      }

      public DescriptorProtos.FieldDescriptorProto.Type getType() {
         DescriptorProtos.FieldDescriptorProto.Type var1 = DescriptorProtos.FieldDescriptorProto.Type.valueOf(this.type_);
         return var1 == null ? DescriptorProtos.FieldDescriptorProto.Type.TYPE_DOUBLE : var1;
      }

      public boolean hasTypeName() {
         return (this.bitField0_ & 16) != 0;
      }

      public String getTypeName() {
         Object var1 = this.typeName_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.typeName_ = var3;
            }

            return var3;
         }
      }

      public ByteString getTypeNameBytes() {
         Object var1 = this.typeName_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.typeName_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasExtendee() {
         return (this.bitField0_ & 32) != 0;
      }

      public String getExtendee() {
         Object var1 = this.extendee_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.extendee_ = var3;
            }

            return var3;
         }
      }

      public ByteString getExtendeeBytes() {
         Object var1 = this.extendee_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.extendee_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasDefaultValue() {
         return (this.bitField0_ & 64) != 0;
      }

      public String getDefaultValue() {
         Object var1 = this.defaultValue_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.defaultValue_ = var3;
            }

            return var3;
         }
      }

      public ByteString getDefaultValueBytes() {
         Object var1 = this.defaultValue_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.defaultValue_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasOneofIndex() {
         return (this.bitField0_ & 128) != 0;
      }

      public int getOneofIndex() {
         return this.oneofIndex_;
      }

      public boolean hasJsonName() {
         return (this.bitField0_ & 256) != 0;
      }

      public String getJsonName() {
         Object var1 = this.jsonName_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.jsonName_ = var3;
            }

            return var3;
         }
      }

      public ByteString getJsonNameBytes() {
         Object var1 = this.jsonName_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.jsonName_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 512) != 0;
      }

      public DescriptorProtos.FieldOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
            this.memoizedIsInitialized = 0;
            return false;
         } else {
            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         if ((this.bitField0_ & 32) != 0) {
            GeneratedMessageV3.writeString(var1, 2, this.extendee_);
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeInt32(3, this.number_);
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeEnum(4, this.label_);
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeEnum(5, this.type_);
         }

         if ((this.bitField0_ & 16) != 0) {
            GeneratedMessageV3.writeString(var1, 6, this.typeName_);
         }

         if ((this.bitField0_ & 64) != 0) {
            GeneratedMessageV3.writeString(var1, 7, this.defaultValue_);
         }

         if ((this.bitField0_ & 512) != 0) {
            var1.writeMessage(8, this.getOptions());
         }

         if ((this.bitField0_ & 128) != 0) {
            var1.writeInt32(9, this.oneofIndex_);
         }

         if ((this.bitField0_ & 256) != 0) {
            GeneratedMessageV3.writeString(var1, 10, this.jsonName_);
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 32) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(2, this.extendee_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeInt32Size(3, this.number_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeEnumSize(4, this.label_);
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeEnumSize(5, this.type_);
            }

            if ((this.bitField0_ & 16) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(6, this.typeName_);
            }

            if ((this.bitField0_ & 64) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(7, this.defaultValue_);
            }

            if ((this.bitField0_ & 512) != 0) {
               var1 += CodedOutputStream.computeMessageSize(8, this.getOptions());
            }

            if ((this.bitField0_ & 128) != 0) {
               var1 += CodedOutputStream.computeInt32Size(9, this.oneofIndex_);
            }

            if ((this.bitField0_ & 256) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(10, this.jsonName_);
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.FieldDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.FieldDescriptorProto var2 = (DescriptorProtos.FieldDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (this.hasNumber() != var2.hasNumber()) {
               return false;
            } else if (this.hasNumber() && this.getNumber() != var2.getNumber()) {
               return false;
            } else if (this.hasLabel() != var2.hasLabel()) {
               return false;
            } else if (this.hasLabel() && this.label_ != var2.label_) {
               return false;
            } else if (this.hasType() != var2.hasType()) {
               return false;
            } else if (this.hasType() && this.type_ != var2.type_) {
               return false;
            } else if (this.hasTypeName() != var2.hasTypeName()) {
               return false;
            } else if (this.hasTypeName() && !this.getTypeName().equals(var2.getTypeName())) {
               return false;
            } else if (this.hasExtendee() != var2.hasExtendee()) {
               return false;
            } else if (this.hasExtendee() && !this.getExtendee().equals(var2.getExtendee())) {
               return false;
            } else if (this.hasDefaultValue() != var2.hasDefaultValue()) {
               return false;
            } else if (this.hasDefaultValue() && !this.getDefaultValue().equals(var2.getDefaultValue())) {
               return false;
            } else if (this.hasOneofIndex() != var2.hasOneofIndex()) {
               return false;
            } else if (this.hasOneofIndex() && this.getOneofIndex() != var2.getOneofIndex()) {
               return false;
            } else if (this.hasJsonName() != var2.hasJsonName()) {
               return false;
            } else if (this.hasJsonName() && !this.getJsonName().equals(var2.getJsonName())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.hasNumber()) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getNumber();
            }

            if (this.hasLabel()) {
               var2 = 37 * var2 + 4;
               var2 = 53 * var2 + this.label_;
            }

            if (this.hasType()) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + this.type_;
            }

            if (this.hasTypeName()) {
               var2 = 37 * var2 + 6;
               var2 = 53 * var2 + this.getTypeName().hashCode();
            }

            if (this.hasExtendee()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getExtendee().hashCode();
            }

            if (this.hasDefaultValue()) {
               var2 = 37 * var2 + 7;
               var2 = 53 * var2 + this.getDefaultValue().hashCode();
            }

            if (this.hasOneofIndex()) {
               var2 = 37 * var2 + 9;
               var2 = 53 * var2 + this.getOneofIndex();
            }

            if (this.hasJsonName()) {
               var2 = 37 * var2 + 10;
               var2 = 53 * var2 + this.getJsonName().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 8;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FieldDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FieldDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FieldDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FieldDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FieldDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FieldDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FieldDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.FieldDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FieldDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FieldDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.FieldDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FieldDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FieldDescriptorProto.Builder newBuilder(DescriptorProtos.FieldDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.FieldDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FieldDescriptorProto.Builder() : (new DescriptorProtos.FieldDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.FieldDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.FieldDescriptorProto.Builder var2 = new DescriptorProtos.FieldDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.FieldDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FieldDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      FieldDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      FieldDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.FieldDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private int number_;
         private int label_;
         private int type_;
         private Object typeName_;
         private Object extendee_;
         private Object defaultValue_;
         private int oneofIndex_;
         private Object jsonName_;
         private DescriptorProtos.FieldOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FieldDescriptorProto.class, DescriptorProtos.FieldDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.label_ = 1;
            this.type_ = 1;
            this.typeName_ = "";
            this.extendee_ = "";
            this.defaultValue_ = "";
            this.jsonName_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.label_ = 1;
            this.type_ = 1;
            this.typeName_ = "";
            this.extendee_ = "";
            this.defaultValue_ = "";
            this.jsonName_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getOptionsFieldBuilder();
            }

         }

         public DescriptorProtos.FieldDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.number_ = 0;
            this.bitField0_ &= -3;
            this.label_ = 1;
            this.bitField0_ &= -5;
            this.type_ = 1;
            this.bitField0_ &= -9;
            this.typeName_ = "";
            this.bitField0_ &= -17;
            this.extendee_ = "";
            this.bitField0_ &= -33;
            this.defaultValue_ = "";
            this.bitField0_ &= -65;
            this.oneofIndex_ = 0;
            this.bitField0_ &= -129;
            this.jsonName_ = "";
            this.bitField0_ &= -257;
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FieldDescriptorProto_descriptor;
         }

         public DescriptorProtos.FieldDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.FieldDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.FieldDescriptorProto build() {
            DescriptorProtos.FieldDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.FieldDescriptorProto buildPartial() {
            DescriptorProtos.FieldDescriptorProto var1 = new DescriptorProtos.FieldDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if ((var2 & 2) != 0) {
               var1.number_ = this.number_;
               var3 |= 2;
            }

            if ((var2 & 4) != 0) {
               var3 |= 4;
            }

            var1.label_ = this.label_;
            if ((var2 & 8) != 0) {
               var3 |= 8;
            }

            var1.type_ = this.type_;
            if ((var2 & 16) != 0) {
               var3 |= 16;
            }

            var1.typeName_ = this.typeName_;
            if ((var2 & 32) != 0) {
               var3 |= 32;
            }

            var1.extendee_ = this.extendee_;
            if ((var2 & 64) != 0) {
               var3 |= 64;
            }

            var1.defaultValue_ = this.defaultValue_;
            if ((var2 & 128) != 0) {
               var1.oneofIndex_ = this.oneofIndex_;
               var3 |= 128;
            }

            if ((var2 & 256) != 0) {
               var3 |= 256;
            }

            var1.jsonName_ = this.jsonName_;
            if ((var2 & 512) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.FieldOptions)this.optionsBuilder_.build();
               }

               var3 |= 512;
            }

            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clone() {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.FieldDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.FieldDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeFrom(DescriptorProtos.FieldDescriptorProto var1) {
            if (var1 == DescriptorProtos.FieldDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (var1.hasNumber()) {
                  this.setNumber(var1.getNumber());
               }

               if (var1.hasLabel()) {
                  this.setLabel(var1.getLabel());
               }

               if (var1.hasType()) {
                  this.setType(var1.getType());
               }

               if (var1.hasTypeName()) {
                  this.bitField0_ |= 16;
                  this.typeName_ = var1.typeName_;
                  this.onChanged();
               }

               if (var1.hasExtendee()) {
                  this.bitField0_ |= 32;
                  this.extendee_ = var1.extendee_;
                  this.onChanged();
               }

               if (var1.hasDefaultValue()) {
                  this.bitField0_ |= 64;
                  this.defaultValue_ = var1.defaultValue_;
                  this.onChanged();
               }

               if (var1.hasOneofIndex()) {
                  this.setOneofIndex(var1.getOneofIndex());
               }

               if (var1.hasJsonName()) {
                  this.bitField0_ |= 256;
                  this.jsonName_ = var1.jsonName_;
                  this.onChanged();
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            return !this.hasOptions() || this.getOptions().isInitialized();
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.FieldDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.FieldDescriptorProto)DescriptorProtos.FieldDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.FieldDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasNumber() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getNumber() {
            return this.number_;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setNumber(int var1) {
            this.bitField0_ |= 2;
            this.number_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearNumber() {
            this.bitField0_ &= -3;
            this.number_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasLabel() {
            return (this.bitField0_ & 4) != 0;
         }

         public DescriptorProtos.FieldDescriptorProto.Label getLabel() {
            DescriptorProtos.FieldDescriptorProto.Label var1 = DescriptorProtos.FieldDescriptorProto.Label.valueOf(this.label_);
            return var1 == null ? DescriptorProtos.FieldDescriptorProto.Label.LABEL_OPTIONAL : var1;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setLabel(DescriptorProtos.FieldDescriptorProto.Label var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 4;
               this.label_ = var1.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearLabel() {
            this.bitField0_ &= -5;
            this.label_ = 1;
            this.onChanged();
            return this;
         }

         public boolean hasType() {
            return (this.bitField0_ & 8) != 0;
         }

         public DescriptorProtos.FieldDescriptorProto.Type getType() {
            DescriptorProtos.FieldDescriptorProto.Type var1 = DescriptorProtos.FieldDescriptorProto.Type.valueOf(this.type_);
            return var1 == null ? DescriptorProtos.FieldDescriptorProto.Type.TYPE_DOUBLE : var1;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setType(DescriptorProtos.FieldDescriptorProto.Type var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 8;
               this.type_ = var1.getNumber();
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearType() {
            this.bitField0_ &= -9;
            this.type_ = 1;
            this.onChanged();
            return this;
         }

         public boolean hasTypeName() {
            return (this.bitField0_ & 16) != 0;
         }

         public String getTypeName() {
            Object var1 = this.typeName_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.typeName_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getTypeNameBytes() {
            Object var1 = this.typeName_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.typeName_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setTypeName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.typeName_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearTypeName() {
            this.bitField0_ &= -17;
            this.typeName_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getTypeName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setTypeNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 16;
               this.typeName_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasExtendee() {
            return (this.bitField0_ & 32) != 0;
         }

         public String getExtendee() {
            Object var1 = this.extendee_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.extendee_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getExtendeeBytes() {
            Object var1 = this.extendee_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.extendee_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setExtendee(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.extendee_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearExtendee() {
            this.bitField0_ &= -33;
            this.extendee_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getExtendee();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setExtendeeBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 32;
               this.extendee_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasDefaultValue() {
            return (this.bitField0_ & 64) != 0;
         }

         public String getDefaultValue() {
            Object var1 = this.defaultValue_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.defaultValue_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getDefaultValueBytes() {
            Object var1 = this.defaultValue_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.defaultValue_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setDefaultValue(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.defaultValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearDefaultValue() {
            this.bitField0_ &= -65;
            this.defaultValue_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getDefaultValue();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setDefaultValueBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 64;
               this.defaultValue_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOneofIndex() {
            return (this.bitField0_ & 128) != 0;
         }

         public int getOneofIndex() {
            return this.oneofIndex_;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setOneofIndex(int var1) {
            this.bitField0_ |= 128;
            this.oneofIndex_ = var1;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearOneofIndex() {
            this.bitField0_ &= -129;
            this.oneofIndex_ = 0;
            this.onChanged();
            return this;
         }

         public boolean hasJsonName() {
            return (this.bitField0_ & 256) != 0;
         }

         public String getJsonName() {
            Object var1 = this.jsonName_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.jsonName_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getJsonNameBytes() {
            Object var1 = this.jsonName_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.jsonName_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setJsonName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 256;
               this.jsonName_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearJsonName() {
            this.bitField0_ &= -257;
            this.jsonName_ = DescriptorProtos.FieldDescriptorProto.getDefaultInstance().getJsonName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setJsonNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 256;
               this.jsonName_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 512) != 0;
         }

         public DescriptorProtos.FieldOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.FieldOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setOptions(DescriptorProtos.FieldOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder setOptions(DescriptorProtos.FieldOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder mergeOptions(DescriptorProtos.FieldOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 512) != 0 && this.options_ != null && this.options_ != DescriptorProtos.FieldOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.FieldOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public DescriptorProtos.FieldOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return (DescriptorProtos.FieldOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.FieldOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.FieldOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public final DescriptorProtos.FieldDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.FieldDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static enum Label implements ProtocolMessageEnum {
         LABEL_OPTIONAL(1),
         LABEL_REQUIRED(2),
         LABEL_REPEATED(3);

         public static final int LABEL_OPTIONAL_VALUE = 1;
         public static final int LABEL_REQUIRED_VALUE = 2;
         public static final int LABEL_REPEATED_VALUE = 3;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public DescriptorProtos.FieldDescriptorProto.Label findValueByNumber(int var1) {
               return DescriptorProtos.FieldDescriptorProto.Label.forNumber(var1);
            }
         };
         private static final DescriptorProtos.FieldDescriptorProto.Label[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static DescriptorProtos.FieldDescriptorProto.Label valueOf(int var0) {
            return forNumber(var0);
         }

         public static DescriptorProtos.FieldDescriptorProto.Label forNumber(int var0) {
            switch(var0) {
            case 1:
               return LABEL_OPTIONAL;
            case 2:
               return LABEL_REQUIRED;
            case 3:
               return LABEL_REPEATED;
            default:
               return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldDescriptorProto.getDescriptor().getEnumTypes().get(1);
         }

         public static DescriptorProtos.FieldDescriptorProto.Label valueOf(Descriptors.EnumValueDescriptor var0) {
            if (var0.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[var0.getIndex()];
            }
         }

         private Label(int var3) {
            this.value = var3;
         }
      }

      public static enum Type implements ProtocolMessageEnum {
         TYPE_DOUBLE(1),
         TYPE_FLOAT(2),
         TYPE_INT64(3),
         TYPE_UINT64(4),
         TYPE_INT32(5),
         TYPE_FIXED64(6),
         TYPE_FIXED32(7),
         TYPE_BOOL(8),
         TYPE_STRING(9),
         TYPE_GROUP(10),
         TYPE_MESSAGE(11),
         TYPE_BYTES(12),
         TYPE_UINT32(13),
         TYPE_ENUM(14),
         TYPE_SFIXED32(15),
         TYPE_SFIXED64(16),
         TYPE_SINT32(17),
         TYPE_SINT64(18);

         public static final int TYPE_DOUBLE_VALUE = 1;
         public static final int TYPE_FLOAT_VALUE = 2;
         public static final int TYPE_INT64_VALUE = 3;
         public static final int TYPE_UINT64_VALUE = 4;
         public static final int TYPE_INT32_VALUE = 5;
         public static final int TYPE_FIXED64_VALUE = 6;
         public static final int TYPE_FIXED32_VALUE = 7;
         public static final int TYPE_BOOL_VALUE = 8;
         public static final int TYPE_STRING_VALUE = 9;
         public static final int TYPE_GROUP_VALUE = 10;
         public static final int TYPE_MESSAGE_VALUE = 11;
         public static final int TYPE_BYTES_VALUE = 12;
         public static final int TYPE_UINT32_VALUE = 13;
         public static final int TYPE_ENUM_VALUE = 14;
         public static final int TYPE_SFIXED32_VALUE = 15;
         public static final int TYPE_SFIXED64_VALUE = 16;
         public static final int TYPE_SINT32_VALUE = 17;
         public static final int TYPE_SINT64_VALUE = 18;
         private static final Internal.EnumLiteMap internalValueMap = new Internal.EnumLiteMap() {
            public DescriptorProtos.FieldDescriptorProto.Type findValueByNumber(int var1) {
               return DescriptorProtos.FieldDescriptorProto.Type.forNumber(var1);
            }
         };
         private static final DescriptorProtos.FieldDescriptorProto.Type[] VALUES = values();
         private final int value;

         public final int getNumber() {
            return this.value;
         }

         /** @deprecated */
         @Deprecated
         public static DescriptorProtos.FieldDescriptorProto.Type valueOf(int var0) {
            return forNumber(var0);
         }

         public static DescriptorProtos.FieldDescriptorProto.Type forNumber(int var0) {
            switch(var0) {
            case 1:
               return TYPE_DOUBLE;
            case 2:
               return TYPE_FLOAT;
            case 3:
               return TYPE_INT64;
            case 4:
               return TYPE_UINT64;
            case 5:
               return TYPE_INT32;
            case 6:
               return TYPE_FIXED64;
            case 7:
               return TYPE_FIXED32;
            case 8:
               return TYPE_BOOL;
            case 9:
               return TYPE_STRING;
            case 10:
               return TYPE_GROUP;
            case 11:
               return TYPE_MESSAGE;
            case 12:
               return TYPE_BYTES;
            case 13:
               return TYPE_UINT32;
            case 14:
               return TYPE_ENUM;
            case 15:
               return TYPE_SFIXED32;
            case 16:
               return TYPE_SFIXED64;
            case 17:
               return TYPE_SINT32;
            case 18:
               return TYPE_SINT64;
            default:
               return null;
            }
         }

         public static Internal.EnumLiteMap internalGetValueMap() {
            return internalValueMap;
         }

         public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            return (Descriptors.EnumValueDescriptor)getDescriptor().getValues().get(this.ordinal());
         }

         public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
         }

         public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor)DescriptorProtos.FieldDescriptorProto.getDescriptor().getEnumTypes().get(0);
         }

         public static DescriptorProtos.FieldDescriptorProto.Type valueOf(Descriptors.EnumValueDescriptor var0) {
            if (var0.getType() != getDescriptor()) {
               throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
            } else {
               return VALUES[var0.getIndex()];
            }
         }

         private Type(int var3) {
            this.value = var3;
         }
      }
   }

   public interface FieldDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasNumber();

      int getNumber();

      boolean hasLabel();

      DescriptorProtos.FieldDescriptorProto.Label getLabel();

      boolean hasType();

      DescriptorProtos.FieldDescriptorProto.Type getType();

      boolean hasTypeName();

      String getTypeName();

      ByteString getTypeNameBytes();

      boolean hasExtendee();

      String getExtendee();

      ByteString getExtendeeBytes();

      boolean hasDefaultValue();

      String getDefaultValue();

      ByteString getDefaultValueBytes();

      boolean hasOneofIndex();

      int getOneofIndex();

      boolean hasJsonName();

      String getJsonName();

      ByteString getJsonNameBytes();

      boolean hasOptions();

      DescriptorProtos.FieldOptions getOptions();

      DescriptorProtos.FieldOptionsOrBuilder getOptionsOrBuilder();
   }

   public static final class ExtensionRangeOptions extends GeneratedMessageV3.ExtendableMessage implements DescriptorProtos.ExtensionRangeOptionsOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int UNINTERPRETED_OPTION_FIELD_NUMBER = 999;
      private List uninterpretedOption_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.ExtensionRangeOptions DEFAULT_INSTANCE = new DescriptorProtos.ExtensionRangeOptions();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.ExtensionRangeOptions parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.ExtensionRangeOptions(var1, var2);
         }
      };

      private ExtensionRangeOptions(GeneratedMessageV3.ExtendableBuilder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private ExtensionRangeOptions() {
         this.memoizedIsInitialized = -1;
         this.uninterpretedOption_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.ExtensionRangeOptions();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private ExtensionRangeOptions(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 7994:
                     if (!(var3 & true)) {
                        this.uninterpretedOption_ = new ArrayList();
                        var3 |= true;
                     }

                     this.uninterpretedOption_.add(var1.readMessage(DescriptorProtos.UninterpretedOption.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if (var3 & true) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.ExtensionRangeOptions.class, DescriptorProtos.ExtensionRangeOptions.Builder.class);
      }

      public List getUninterpretedOptionList() {
         return this.uninterpretedOption_;
      }

      public List getUninterpretedOptionOrBuilderList() {
         return this.uninterpretedOption_;
      }

      public int getUninterpretedOptionCount() {
         return this.uninterpretedOption_.size();
      }

      public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
         return (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1);
      }

      public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
         return (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getUninterpretedOptionCount(); ++var2) {
               if (!this.getUninterpretedOption(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         GeneratedMessageV3.ExtendableMessage.ExtensionWriter var2 = this.newExtensionWriter();

         for(int var3 = 0; var3 < this.uninterpretedOption_.size(); ++var3) {
            var1.writeMessage(999, (MessageLite)this.uninterpretedOption_.get(var3));
         }

         var2.writeUntil(536870912, var1);
         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;

            for(int var2 = 0; var2 < this.uninterpretedOption_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(999, (MessageLite)this.uninterpretedOption_.get(var2));
            }

            var1 += this.extensionsSerializedSize();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.ExtensionRangeOptions)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.ExtensionRangeOptions var2 = (DescriptorProtos.ExtensionRangeOptions)var1;
            if (!this.getUninterpretedOptionList().equals(var2.getUninterpretedOptionList())) {
               return false;
            } else if (!this.unknownFields.equals(var2.unknownFields)) {
               return false;
            } else {
               return this.getExtensionFields().equals(var2.getExtensionFields());
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.getUninterpretedOptionCount() > 0) {
               var2 = 37 * var2 + 999;
               var2 = 53 * var2 + this.getUninterpretedOptionList().hashCode();
            }

            var2 = hashFields(var2, this.getExtensionFields());
            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ExtensionRangeOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ExtensionRangeOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ExtensionRangeOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ExtensionRangeOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ExtensionRangeOptions)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.ExtensionRangeOptions)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.ExtensionRangeOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ExtensionRangeOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.ExtensionRangeOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ExtensionRangeOptions)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.ExtensionRangeOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.ExtensionRangeOptions parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.ExtensionRangeOptions)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.ExtensionRangeOptions.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.ExtensionRangeOptions.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.ExtensionRangeOptions.Builder newBuilder(DescriptorProtos.ExtensionRangeOptions var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.ExtensionRangeOptions.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.ExtensionRangeOptions.Builder() : (new DescriptorProtos.ExtensionRangeOptions.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.ExtensionRangeOptions.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.ExtensionRangeOptions.Builder var2 = new DescriptorProtos.ExtensionRangeOptions.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.ExtensionRangeOptions getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.ExtensionRangeOptions getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      ExtensionRangeOptions(GeneratedMessageV3.ExtendableBuilder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      ExtensionRangeOptions(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.ExtendableBuilder implements DescriptorProtos.ExtensionRangeOptionsOrBuilder {
         private int bitField0_;
         private List uninterpretedOption_;
         private RepeatedFieldBuilderV3 uninterpretedOptionBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.ExtensionRangeOptions.class, DescriptorProtos.ExtensionRangeOptions.Builder.class);
         }

         private Builder() {
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.uninterpretedOption_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getUninterpretedOptionFieldBuilder();
            }

         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clear() {
            super.clear();
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_ExtensionRangeOptions_descriptor;
         }

         public DescriptorProtos.ExtensionRangeOptions getDefaultInstanceForType() {
            return DescriptorProtos.ExtensionRangeOptions.getDefaultInstance();
         }

         public DescriptorProtos.ExtensionRangeOptions build() {
            DescriptorProtos.ExtensionRangeOptions var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.ExtensionRangeOptions buildPartial() {
            DescriptorProtos.ExtensionRangeOptions var1 = new DescriptorProtos.ExtensionRangeOptions(this);
            int var2 = this.bitField0_;
            if (this.uninterpretedOptionBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.uninterpretedOption_ = Collections.unmodifiableList(this.uninterpretedOption_);
                  this.bitField0_ &= -2;
               }

               var1.uninterpretedOption_ = this.uninterpretedOption_;
            } else {
               var1.uninterpretedOption_ = this.uninterpretedOptionBuilder_.build();
            }

            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clone() {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clone();
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clearField(var1);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setExtension(var1, var2);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setExtension(GeneratedMessage.GeneratedExtension var1, int var2, Object var3) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setExtension(var1, var2, var3);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addExtension(GeneratedMessage.GeneratedExtension var1, Object var2) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.addExtension(var1, var2);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearExtension(GeneratedMessage.GeneratedExtension var1) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.clearExtension(var1);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.ExtensionRangeOptions) {
               return this.mergeFrom((DescriptorProtos.ExtensionRangeOptions)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder mergeFrom(DescriptorProtos.ExtensionRangeOptions var1) {
            if (var1 == DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) {
               return this;
            } else {
               if (this.uninterpretedOptionBuilder_ == null) {
                  if (!var1.uninterpretedOption_.isEmpty()) {
                     if (this.uninterpretedOption_.isEmpty()) {
                        this.uninterpretedOption_ = var1.uninterpretedOption_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureUninterpretedOptionIsMutable();
                        this.uninterpretedOption_.addAll(var1.uninterpretedOption_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.uninterpretedOption_.isEmpty()) {
                  if (this.uninterpretedOptionBuilder_.isEmpty()) {
                     this.uninterpretedOptionBuilder_.dispose();
                     this.uninterpretedOptionBuilder_ = null;
                     this.uninterpretedOption_ = var1.uninterpretedOption_;
                     this.bitField0_ &= -2;
                     this.uninterpretedOptionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getUninterpretedOptionFieldBuilder() : null;
                  } else {
                     this.uninterpretedOptionBuilder_.addAllMessages(var1.uninterpretedOption_);
                  }
               }

               this.mergeExtensionFields(var1);
               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getUninterpretedOptionCount(); ++var1) {
               if (!this.getUninterpretedOption(var1).isInitialized()) {
                  return false;
               }
            }

            if (!this.extensionsAreInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.ExtensionRangeOptions var3 = null;

            try {
               var3 = (DescriptorProtos.ExtensionRangeOptions)DescriptorProtos.ExtensionRangeOptions.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.ExtensionRangeOptions)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         private void ensureUninterpretedOptionIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.uninterpretedOption_ = new ArrayList(this.uninterpretedOption_);
               this.bitField0_ |= 1;
            }

         }

         public List getUninterpretedOptionList() {
            return this.uninterpretedOptionBuilder_ == null ? Collections.unmodifiableList(this.uninterpretedOption_) : this.uninterpretedOptionBuilder_.getMessageList();
         }

         public int getUninterpretedOptionCount() {
            return this.uninterpretedOptionBuilder_ == null ? this.uninterpretedOption_.size() : this.uninterpretedOptionBuilder_.getCount();
         }

         public DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOption)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOption)this.uninterpretedOptionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder setUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(DescriptorProtos.UninterpretedOption.Builder var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addUninterpretedOption(int var1, DescriptorProtos.UninterpretedOption.Builder var2) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder addAllUninterpretedOption(Iterable var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.uninterpretedOption_);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder clearUninterpretedOption() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOption_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.ExtensionRangeOptions.Builder removeUninterpretedOption(int var1) {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.ensureUninterpretedOptionIsMutable();
               this.uninterpretedOption_.remove(var1);
               this.onChanged();
            } else {
               this.uninterpretedOptionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.UninterpretedOption.Builder getUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1) {
            return this.uninterpretedOptionBuilder_ == null ? (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOption_.get(var1) : (DescriptorProtos.UninterpretedOptionOrBuilder)this.uninterpretedOptionBuilder_.getMessageOrBuilder(var1);
         }

         public List getUninterpretedOptionOrBuilderList() {
            return this.uninterpretedOptionBuilder_ != null ? this.uninterpretedOptionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.uninterpretedOption_);
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder() {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public DescriptorProtos.UninterpretedOption.Builder addUninterpretedOptionBuilder(int var1) {
            return (DescriptorProtos.UninterpretedOption.Builder)this.getUninterpretedOptionFieldBuilder().addBuilder(var1, DescriptorProtos.UninterpretedOption.getDefaultInstance());
         }

         public List getUninterpretedOptionBuilderList() {
            return this.getUninterpretedOptionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getUninterpretedOptionFieldBuilder() {
            if (this.uninterpretedOptionBuilder_ == null) {
               this.uninterpretedOptionBuilder_ = new RepeatedFieldBuilderV3(this.uninterpretedOption_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.uninterpretedOption_ = null;
            }

            return this.uninterpretedOptionBuilder_;
         }

         public final DescriptorProtos.ExtensionRangeOptions.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.ExtensionRangeOptions.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.ExtensionRangeOptions.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface ExtensionRangeOptionsOrBuilder extends GeneratedMessageV3.ExtendableMessageOrBuilder {
      List getUninterpretedOptionList();

      DescriptorProtos.UninterpretedOption getUninterpretedOption(int var1);

      int getUninterpretedOptionCount();

      List getUninterpretedOptionOrBuilderList();

      DescriptorProtos.UninterpretedOptionOrBuilder getUninterpretedOptionOrBuilder(int var1);
   }

   public static final class DescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.DescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int FIELD_FIELD_NUMBER = 2;
      private List field_;
      public static final int EXTENSION_FIELD_NUMBER = 6;
      private List extension_;
      public static final int NESTED_TYPE_FIELD_NUMBER = 3;
      private List nestedType_;
      public static final int ENUM_TYPE_FIELD_NUMBER = 4;
      private List enumType_;
      public static final int EXTENSION_RANGE_FIELD_NUMBER = 5;
      private List extensionRange_;
      public static final int ONEOF_DECL_FIELD_NUMBER = 8;
      private List oneofDecl_;
      public static final int OPTIONS_FIELD_NUMBER = 7;
      private DescriptorProtos.MessageOptions options_;
      public static final int RESERVED_RANGE_FIELD_NUMBER = 9;
      private List reservedRange_;
      public static final int RESERVED_NAME_FIELD_NUMBER = 10;
      private LazyStringList reservedName_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.DescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.DescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.DescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.DescriptorProto(var1, var2);
         }
      };

      private DescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private DescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.field_ = Collections.emptyList();
         this.extension_ = Collections.emptyList();
         this.nestedType_ = Collections.emptyList();
         this.enumType_ = Collections.emptyList();
         this.extensionRange_ = Collections.emptyList();
         this.oneofDecl_ = Collections.emptyList();
         this.reservedRange_ = Collections.emptyList();
         this.reservedName_ = LazyStringArrayList.EMPTY;
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.DescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private DescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  ByteString var7;
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     var7 = var1.readBytes();
                     this.bitField0_ |= 1;
                     this.name_ = var7;
                     break;
                  case 18:
                     if ((var3 & 2) == 0) {
                        this.field_ = new ArrayList();
                        var3 |= 2;
                     }

                     this.field_.add(var1.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, var2));
                     break;
                  case 26:
                     if ((var3 & 8) == 0) {
                        this.nestedType_ = new ArrayList();
                        var3 |= 8;
                     }

                     this.nestedType_.add(var1.readMessage(PARSER, var2));
                     break;
                  case 34:
                     if ((var3 & 16) == 0) {
                        this.enumType_ = new ArrayList();
                        var3 |= 16;
                     }

                     this.enumType_.add(var1.readMessage(DescriptorProtos.EnumDescriptorProto.PARSER, var2));
                     break;
                  case 42:
                     if ((var3 & 32) == 0) {
                        this.extensionRange_ = new ArrayList();
                        var3 |= 32;
                     }

                     this.extensionRange_.add(var1.readMessage(DescriptorProtos.DescriptorProto.ExtensionRange.PARSER, var2));
                     break;
                  case 50:
                     if ((var3 & 4) == 0) {
                        this.extension_ = new ArrayList();
                        var3 |= 4;
                     }

                     this.extension_.add(var1.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, var2));
                     break;
                  case 58:
                     DescriptorProtos.MessageOptions.Builder var15 = null;
                     if ((this.bitField0_ & 2) != 0) {
                        var15 = this.options_.toBuilder();
                     }

                     this.options_ = (DescriptorProtos.MessageOptions)var1.readMessage(DescriptorProtos.MessageOptions.PARSER, var2);
                     if (var15 != null) {
                        var15.mergeFrom(this.options_);
                        this.options_ = var15.buildPartial();
                     }

                     this.bitField0_ |= 2;
                     break;
                  case 66:
                     if ((var3 & 64) == 0) {
                        this.oneofDecl_ = new ArrayList();
                        var3 |= 64;
                     }

                     this.oneofDecl_.add(var1.readMessage(DescriptorProtos.OneofDescriptorProto.PARSER, var2));
                     break;
                  case 74:
                     if ((var3 & 256) == 0) {
                        this.reservedRange_ = new ArrayList();
                        var3 |= 256;
                     }

                     this.reservedRange_.add(var1.readMessage(DescriptorProtos.DescriptorProto.ReservedRange.PARSER, var2));
                     break;
                  case 82:
                     var7 = var1.readBytes();
                     if ((var3 & 512) == 0) {
                        this.reservedName_ = new LazyStringArrayList();
                        var3 |= 512;
                     }

                     this.reservedName_.add(var7);
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var12) {
               throw var12.setUnfinishedMessage(this);
            } catch (IOException var13) {
               throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 2) != 0) {
                  this.field_ = Collections.unmodifiableList(this.field_);
               }

               if ((var3 & 8) != 0) {
                  this.nestedType_ = Collections.unmodifiableList(this.nestedType_);
               }

               if ((var3 & 16) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
               }

               if ((var3 & 32) != 0) {
                  this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_);
               }

               if ((var3 & 4) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
               }

               if ((var3 & 64) != 0) {
                  this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_);
               }

               if ((var3 & 256) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
               }

               if ((var3 & 512) != 0) {
                  this.reservedName_ = this.reservedName_.getUnmodifiableView();
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.class, DescriptorProtos.DescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public List getFieldList() {
         return this.field_;
      }

      public List getFieldOrBuilderList() {
         return this.field_;
      }

      public int getFieldCount() {
         return this.field_.size();
      }

      public DescriptorProtos.FieldDescriptorProto getField(int var1) {
         return (DescriptorProtos.FieldDescriptorProto)this.field_.get(var1);
      }

      public DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int var1) {
         return (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.field_.get(var1);
      }

      public List getExtensionList() {
         return this.extension_;
      }

      public List getExtensionOrBuilderList() {
         return this.extension_;
      }

      public int getExtensionCount() {
         return this.extension_.size();
      }

      public DescriptorProtos.FieldDescriptorProto getExtension(int var1) {
         return (DescriptorProtos.FieldDescriptorProto)this.extension_.get(var1);
      }

      public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1) {
         return (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(var1);
      }

      public List getNestedTypeList() {
         return this.nestedType_;
      }

      public List getNestedTypeOrBuilderList() {
         return this.nestedType_;
      }

      public int getNestedTypeCount() {
         return this.nestedType_.size();
      }

      public DescriptorProtos.DescriptorProto getNestedType(int var1) {
         return (DescriptorProtos.DescriptorProto)this.nestedType_.get(var1);
      }

      public DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int var1) {
         return (DescriptorProtos.DescriptorProtoOrBuilder)this.nestedType_.get(var1);
      }

      public List getEnumTypeList() {
         return this.enumType_;
      }

      public List getEnumTypeOrBuilderList() {
         return this.enumType_;
      }

      public int getEnumTypeCount() {
         return this.enumType_.size();
      }

      public DescriptorProtos.EnumDescriptorProto getEnumType(int var1) {
         return (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(var1);
      }

      public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1) {
         return (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(var1);
      }

      public List getExtensionRangeList() {
         return this.extensionRange_;
      }

      public List getExtensionRangeOrBuilderList() {
         return this.extensionRange_;
      }

      public int getExtensionRangeCount() {
         return this.extensionRange_.size();
      }

      public DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int var1) {
         return (DescriptorProtos.DescriptorProto.ExtensionRange)this.extensionRange_.get(var1);
      }

      public DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int var1) {
         return (DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder)this.extensionRange_.get(var1);
      }

      public List getOneofDeclList() {
         return this.oneofDecl_;
      }

      public List getOneofDeclOrBuilderList() {
         return this.oneofDecl_;
      }

      public int getOneofDeclCount() {
         return this.oneofDecl_.size();
      }

      public DescriptorProtos.OneofDescriptorProto getOneofDecl(int var1) {
         return (DescriptorProtos.OneofDescriptorProto)this.oneofDecl_.get(var1);
      }

      public DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int var1) {
         return (DescriptorProtos.OneofDescriptorProtoOrBuilder)this.oneofDecl_.get(var1);
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 2) != 0;
      }

      public DescriptorProtos.MessageOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
      }

      public List getReservedRangeList() {
         return this.reservedRange_;
      }

      public List getReservedRangeOrBuilderList() {
         return this.reservedRange_;
      }

      public int getReservedRangeCount() {
         return this.reservedRange_.size();
      }

      public DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int var1) {
         return (DescriptorProtos.DescriptorProto.ReservedRange)this.reservedRange_.get(var1);
      }

      public DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int var1) {
         return (DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder)this.reservedRange_.get(var1);
      }

      public ProtocolStringList getReservedNameList() {
         return this.reservedName_;
      }

      public int getReservedNameCount() {
         return this.reservedName_.size();
      }

      public String getReservedName(int var1) {
         return (String)this.reservedName_.get(var1);
      }

      public ByteString getReservedNameBytes(int var1) {
         return this.reservedName_.getByteString(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            int var2;
            for(var2 = 0; var2 < this.getFieldCount(); ++var2) {
               if (!this.getField(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getExtensionCount(); ++var2) {
               if (!this.getExtension(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getNestedTypeCount(); ++var2) {
               if (!this.getNestedType(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getEnumTypeCount(); ++var2) {
               if (!this.getEnumType(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getExtensionRangeCount(); ++var2) {
               if (!this.getExtensionRange(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getOneofDeclCount(); ++var2) {
               if (!this.getOneofDecl(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         int var2;
         for(var2 = 0; var2 < this.field_.size(); ++var2) {
            var1.writeMessage(2, (MessageLite)this.field_.get(var2));
         }

         for(var2 = 0; var2 < this.nestedType_.size(); ++var2) {
            var1.writeMessage(3, (MessageLite)this.nestedType_.get(var2));
         }

         for(var2 = 0; var2 < this.enumType_.size(); ++var2) {
            var1.writeMessage(4, (MessageLite)this.enumType_.get(var2));
         }

         for(var2 = 0; var2 < this.extensionRange_.size(); ++var2) {
            var1.writeMessage(5, (MessageLite)this.extensionRange_.get(var2));
         }

         for(var2 = 0; var2 < this.extension_.size(); ++var2) {
            var1.writeMessage(6, (MessageLite)this.extension_.get(var2));
         }

         if ((this.bitField0_ & 2) != 0) {
            var1.writeMessage(7, this.getOptions());
         }

         for(var2 = 0; var2 < this.oneofDecl_.size(); ++var2) {
            var1.writeMessage(8, (MessageLite)this.oneofDecl_.get(var2));
         }

         for(var2 = 0; var2 < this.reservedRange_.size(); ++var2) {
            var1.writeMessage(9, (MessageLite)this.reservedRange_.get(var2));
         }

         for(var2 = 0; var2 < this.reservedName_.size(); ++var2) {
            GeneratedMessageV3.writeString(var1, 10, this.reservedName_.getRaw(var2));
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            int var2;
            for(var2 = 0; var2 < this.field_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(2, (MessageLite)this.field_.get(var2));
            }

            for(var2 = 0; var2 < this.nestedType_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(3, (MessageLite)this.nestedType_.get(var2));
            }

            for(var2 = 0; var2 < this.enumType_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(4, (MessageLite)this.enumType_.get(var2));
            }

            for(var2 = 0; var2 < this.extensionRange_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(5, (MessageLite)this.extensionRange_.get(var2));
            }

            for(var2 = 0; var2 < this.extension_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(6, (MessageLite)this.extension_.get(var2));
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += CodedOutputStream.computeMessageSize(7, this.getOptions());
            }

            for(var2 = 0; var2 < this.oneofDecl_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(8, (MessageLite)this.oneofDecl_.get(var2));
            }

            for(var2 = 0; var2 < this.reservedRange_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(9, (MessageLite)this.reservedRange_.get(var2));
            }

            var2 = 0;

            for(int var3 = 0; var3 < this.reservedName_.size(); ++var3) {
               var2 += computeStringSizeNoTag(this.reservedName_.getRaw(var3));
            }

            var1 += var2;
            var1 += 1 * this.getReservedNameList().size();
            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.DescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.DescriptorProto var2 = (DescriptorProtos.DescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (!this.getFieldList().equals(var2.getFieldList())) {
               return false;
            } else if (!this.getExtensionList().equals(var2.getExtensionList())) {
               return false;
            } else if (!this.getNestedTypeList().equals(var2.getNestedTypeList())) {
               return false;
            } else if (!this.getEnumTypeList().equals(var2.getEnumTypeList())) {
               return false;
            } else if (!this.getExtensionRangeList().equals(var2.getExtensionRangeList())) {
               return false;
            } else if (!this.getOneofDeclList().equals(var2.getOneofDeclList())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else if (!this.getReservedRangeList().equals(var2.getReservedRangeList())) {
               return false;
            } else if (!this.getReservedNameList().equals(var2.getReservedNameList())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.getFieldCount() > 0) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getFieldList().hashCode();
            }

            if (this.getExtensionCount() > 0) {
               var2 = 37 * var2 + 6;
               var2 = 53 * var2 + this.getExtensionList().hashCode();
            }

            if (this.getNestedTypeCount() > 0) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getNestedTypeList().hashCode();
            }

            if (this.getEnumTypeCount() > 0) {
               var2 = 37 * var2 + 4;
               var2 = 53 * var2 + this.getEnumTypeList().hashCode();
            }

            if (this.getExtensionRangeCount() > 0) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + this.getExtensionRangeList().hashCode();
            }

            if (this.getOneofDeclCount() > 0) {
               var2 = 37 * var2 + 8;
               var2 = 53 * var2 + this.getOneofDeclList().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 7;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            if (this.getReservedRangeCount() > 0) {
               var2 = 37 * var2 + 9;
               var2 = 53 * var2 + this.getReservedRangeList().hashCode();
            }

            if (this.getReservedNameCount() > 0) {
               var2 = 37 * var2 + 10;
               var2 = 53 * var2 + this.getReservedNameList().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.DescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.DescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.DescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.DescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.DescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.DescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.DescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.DescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.DescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.DescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.DescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.DescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.DescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.DescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.DescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.DescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.DescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.DescriptorProto.Builder newBuilder(DescriptorProtos.DescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.DescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.DescriptorProto.Builder() : (new DescriptorProtos.DescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.DescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.DescriptorProto.Builder var2 = new DescriptorProtos.DescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.DescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.DescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      DescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      DescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.DescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private List field_;
         private RepeatedFieldBuilderV3 fieldBuilder_;
         private List extension_;
         private RepeatedFieldBuilderV3 extensionBuilder_;
         private List nestedType_;
         private RepeatedFieldBuilderV3 nestedTypeBuilder_;
         private List enumType_;
         private RepeatedFieldBuilderV3 enumTypeBuilder_;
         private List extensionRange_;
         private RepeatedFieldBuilderV3 extensionRangeBuilder_;
         private List oneofDecl_;
         private RepeatedFieldBuilderV3 oneofDeclBuilder_;
         private DescriptorProtos.MessageOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;
         private List reservedRange_;
         private RepeatedFieldBuilderV3 reservedRangeBuilder_;
         private LazyStringList reservedName_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.class, DescriptorProtos.DescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.field_ = Collections.emptyList();
            this.extension_ = Collections.emptyList();
            this.nestedType_ = Collections.emptyList();
            this.enumType_ = Collections.emptyList();
            this.extensionRange_ = Collections.emptyList();
            this.oneofDecl_ = Collections.emptyList();
            this.reservedRange_ = Collections.emptyList();
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.field_ = Collections.emptyList();
            this.extension_ = Collections.emptyList();
            this.nestedType_ = Collections.emptyList();
            this.enumType_ = Collections.emptyList();
            this.extensionRange_ = Collections.emptyList();
            this.oneofDecl_ = Collections.emptyList();
            this.reservedRange_ = Collections.emptyList();
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getFieldFieldBuilder();
               this.getExtensionFieldBuilder();
               this.getNestedTypeFieldBuilder();
               this.getEnumTypeFieldBuilder();
               this.getExtensionRangeFieldBuilder();
               this.getOneofDeclFieldBuilder();
               this.getOptionsFieldBuilder();
               this.getReservedRangeFieldBuilder();
            }

         }

         public DescriptorProtos.DescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            if (this.fieldBuilder_ == null) {
               this.field_ = Collections.emptyList();
               this.bitField0_ &= -3;
            } else {
               this.fieldBuilder_.clear();
            }

            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -5;
            } else {
               this.extensionBuilder_.clear();
            }

            if (this.nestedTypeBuilder_ == null) {
               this.nestedType_ = Collections.emptyList();
               this.bitField0_ &= -9;
            } else {
               this.nestedTypeBuilder_.clear();
            }

            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -17;
            } else {
               this.enumTypeBuilder_.clear();
            }

            if (this.extensionRangeBuilder_ == null) {
               this.extensionRange_ = Collections.emptyList();
               this.bitField0_ &= -33;
            } else {
               this.extensionRangeBuilder_.clear();
            }

            if (this.oneofDeclBuilder_ == null) {
               this.oneofDecl_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.oneofDeclBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -257;
            } else {
               this.reservedRangeBuilder_.clear();
            }

            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -513;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_descriptor;
         }

         public DescriptorProtos.DescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.DescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.DescriptorProto build() {
            DescriptorProtos.DescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.DescriptorProto buildPartial() {
            DescriptorProtos.DescriptorProto var1 = new DescriptorProtos.DescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if (this.fieldBuilder_ == null) {
               if ((this.bitField0_ & 2) != 0) {
                  this.field_ = Collections.unmodifiableList(this.field_);
                  this.bitField0_ &= -3;
               }

               var1.field_ = this.field_;
            } else {
               var1.field_ = this.fieldBuilder_.build();
            }

            if (this.extensionBuilder_ == null) {
               if ((this.bitField0_ & 4) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
                  this.bitField0_ &= -5;
               }

               var1.extension_ = this.extension_;
            } else {
               var1.extension_ = this.extensionBuilder_.build();
            }

            if (this.nestedTypeBuilder_ == null) {
               if ((this.bitField0_ & 8) != 0) {
                  this.nestedType_ = Collections.unmodifiableList(this.nestedType_);
                  this.bitField0_ &= -9;
               }

               var1.nestedType_ = this.nestedType_;
            } else {
               var1.nestedType_ = this.nestedTypeBuilder_.build();
            }

            if (this.enumTypeBuilder_ == null) {
               if ((this.bitField0_ & 16) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
                  this.bitField0_ &= -17;
               }

               var1.enumType_ = this.enumType_;
            } else {
               var1.enumType_ = this.enumTypeBuilder_.build();
            }

            if (this.extensionRangeBuilder_ == null) {
               if ((this.bitField0_ & 32) != 0) {
                  this.extensionRange_ = Collections.unmodifiableList(this.extensionRange_);
                  this.bitField0_ &= -33;
               }

               var1.extensionRange_ = this.extensionRange_;
            } else {
               var1.extensionRange_ = this.extensionRangeBuilder_.build();
            }

            if (this.oneofDeclBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.oneofDecl_ = Collections.unmodifiableList(this.oneofDecl_);
                  this.bitField0_ &= -65;
               }

               var1.oneofDecl_ = this.oneofDecl_;
            } else {
               var1.oneofDecl_ = this.oneofDeclBuilder_.build();
            }

            if ((var2 & 128) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.MessageOptions)this.optionsBuilder_.build();
               }

               var3 |= 2;
            }

            if (this.reservedRangeBuilder_ == null) {
               if ((this.bitField0_ & 256) != 0) {
                  this.reservedRange_ = Collections.unmodifiableList(this.reservedRange_);
                  this.bitField0_ &= -257;
               }

               var1.reservedRange_ = this.reservedRange_;
            } else {
               var1.reservedRange_ = this.reservedRangeBuilder_.build();
            }

            if ((this.bitField0_ & 512) != 0) {
               this.reservedName_ = this.reservedName_.getUnmodifiableView();
               this.bitField0_ &= -513;
            }

            var1.reservedName_ = this.reservedName_;
            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.DescriptorProto.Builder clone() {
            return (DescriptorProtos.DescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.DescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.DescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.DescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.DescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.DescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.DescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.DescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.DescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.DescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.DescriptorProto) {
               return this.mergeFrom((DescriptorProtos.DescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder mergeFrom(DescriptorProtos.DescriptorProto var1) {
            if (var1 == DescriptorProtos.DescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (this.fieldBuilder_ == null) {
                  if (!var1.field_.isEmpty()) {
                     if (this.field_.isEmpty()) {
                        this.field_ = var1.field_;
                        this.bitField0_ &= -3;
                     } else {
                        this.ensureFieldIsMutable();
                        this.field_.addAll(var1.field_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.field_.isEmpty()) {
                  if (this.fieldBuilder_.isEmpty()) {
                     this.fieldBuilder_.dispose();
                     this.fieldBuilder_ = null;
                     this.field_ = var1.field_;
                     this.bitField0_ &= -3;
                     this.fieldBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getFieldFieldBuilder() : null;
                  } else {
                     this.fieldBuilder_.addAllMessages(var1.field_);
                  }
               }

               if (this.extensionBuilder_ == null) {
                  if (!var1.extension_.isEmpty()) {
                     if (this.extension_.isEmpty()) {
                        this.extension_ = var1.extension_;
                        this.bitField0_ &= -5;
                     } else {
                        this.ensureExtensionIsMutable();
                        this.extension_.addAll(var1.extension_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.extension_.isEmpty()) {
                  if (this.extensionBuilder_.isEmpty()) {
                     this.extensionBuilder_.dispose();
                     this.extensionBuilder_ = null;
                     this.extension_ = var1.extension_;
                     this.bitField0_ &= -5;
                     this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getExtensionFieldBuilder() : null;
                  } else {
                     this.extensionBuilder_.addAllMessages(var1.extension_);
                  }
               }

               if (this.nestedTypeBuilder_ == null) {
                  if (!var1.nestedType_.isEmpty()) {
                     if (this.nestedType_.isEmpty()) {
                        this.nestedType_ = var1.nestedType_;
                        this.bitField0_ &= -9;
                     } else {
                        this.ensureNestedTypeIsMutable();
                        this.nestedType_.addAll(var1.nestedType_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.nestedType_.isEmpty()) {
                  if (this.nestedTypeBuilder_.isEmpty()) {
                     this.nestedTypeBuilder_.dispose();
                     this.nestedTypeBuilder_ = null;
                     this.nestedType_ = var1.nestedType_;
                     this.bitField0_ &= -9;
                     this.nestedTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getNestedTypeFieldBuilder() : null;
                  } else {
                     this.nestedTypeBuilder_.addAllMessages(var1.nestedType_);
                  }
               }

               if (this.enumTypeBuilder_ == null) {
                  if (!var1.enumType_.isEmpty()) {
                     if (this.enumType_.isEmpty()) {
                        this.enumType_ = var1.enumType_;
                        this.bitField0_ &= -17;
                     } else {
                        this.ensureEnumTypeIsMutable();
                        this.enumType_.addAll(var1.enumType_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.enumType_.isEmpty()) {
                  if (this.enumTypeBuilder_.isEmpty()) {
                     this.enumTypeBuilder_.dispose();
                     this.enumTypeBuilder_ = null;
                     this.enumType_ = var1.enumType_;
                     this.bitField0_ &= -17;
                     this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getEnumTypeFieldBuilder() : null;
                  } else {
                     this.enumTypeBuilder_.addAllMessages(var1.enumType_);
                  }
               }

               if (this.extensionRangeBuilder_ == null) {
                  if (!var1.extensionRange_.isEmpty()) {
                     if (this.extensionRange_.isEmpty()) {
                        this.extensionRange_ = var1.extensionRange_;
                        this.bitField0_ &= -33;
                     } else {
                        this.ensureExtensionRangeIsMutable();
                        this.extensionRange_.addAll(var1.extensionRange_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.extensionRange_.isEmpty()) {
                  if (this.extensionRangeBuilder_.isEmpty()) {
                     this.extensionRangeBuilder_.dispose();
                     this.extensionRangeBuilder_ = null;
                     this.extensionRange_ = var1.extensionRange_;
                     this.bitField0_ &= -33;
                     this.extensionRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getExtensionRangeFieldBuilder() : null;
                  } else {
                     this.extensionRangeBuilder_.addAllMessages(var1.extensionRange_);
                  }
               }

               if (this.oneofDeclBuilder_ == null) {
                  if (!var1.oneofDecl_.isEmpty()) {
                     if (this.oneofDecl_.isEmpty()) {
                        this.oneofDecl_ = var1.oneofDecl_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureOneofDeclIsMutable();
                        this.oneofDecl_.addAll(var1.oneofDecl_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.oneofDecl_.isEmpty()) {
                  if (this.oneofDeclBuilder_.isEmpty()) {
                     this.oneofDeclBuilder_.dispose();
                     this.oneofDeclBuilder_ = null;
                     this.oneofDecl_ = var1.oneofDecl_;
                     this.bitField0_ &= -65;
                     this.oneofDeclBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getOneofDeclFieldBuilder() : null;
                  } else {
                     this.oneofDeclBuilder_.addAllMessages(var1.oneofDecl_);
                  }
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               if (this.reservedRangeBuilder_ == null) {
                  if (!var1.reservedRange_.isEmpty()) {
                     if (this.reservedRange_.isEmpty()) {
                        this.reservedRange_ = var1.reservedRange_;
                        this.bitField0_ &= -257;
                     } else {
                        this.ensureReservedRangeIsMutable();
                        this.reservedRange_.addAll(var1.reservedRange_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.reservedRange_.isEmpty()) {
                  if (this.reservedRangeBuilder_.isEmpty()) {
                     this.reservedRangeBuilder_.dispose();
                     this.reservedRangeBuilder_ = null;
                     this.reservedRange_ = var1.reservedRange_;
                     this.bitField0_ &= -257;
                     this.reservedRangeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getReservedRangeFieldBuilder() : null;
                  } else {
                     this.reservedRangeBuilder_.addAllMessages(var1.reservedRange_);
                  }
               }

               if (!var1.reservedName_.isEmpty()) {
                  if (this.reservedName_.isEmpty()) {
                     this.reservedName_ = var1.reservedName_;
                     this.bitField0_ &= -513;
                  } else {
                     this.ensureReservedNameIsMutable();
                     this.reservedName_.addAll(var1.reservedName_);
                  }

                  this.onChanged();
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            int var1;
            for(var1 = 0; var1 < this.getFieldCount(); ++var1) {
               if (!this.getField(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getExtensionCount(); ++var1) {
               if (!this.getExtension(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getNestedTypeCount(); ++var1) {
               if (!this.getNestedType(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getEnumTypeCount(); ++var1) {
               if (!this.getEnumType(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getExtensionRangeCount(); ++var1) {
               if (!this.getExtensionRange(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getOneofDeclCount(); ++var1) {
               if (!this.getOneofDecl(var1).isInitialized()) {
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.DescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.DescriptorProto)DescriptorProtos.DescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.DescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.DescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         private void ensureFieldIsMutable() {
            if ((this.bitField0_ & 2) == 0) {
               this.field_ = new ArrayList(this.field_);
               this.bitField0_ |= 2;
            }

         }

         public List getFieldList() {
            return this.fieldBuilder_ == null ? Collections.unmodifiableList(this.field_) : this.fieldBuilder_.getMessageList();
         }

         public int getFieldCount() {
            return this.fieldBuilder_ == null ? this.field_.size() : this.fieldBuilder_.getCount();
         }

         public DescriptorProtos.FieldDescriptorProto getField(int var1) {
            return this.fieldBuilder_ == null ? (DescriptorProtos.FieldDescriptorProto)this.field_.get(var1) : (DescriptorProtos.FieldDescriptorProto)this.fieldBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setField(int var1, DescriptorProtos.FieldDescriptorProto var2) {
            if (this.fieldBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureFieldIsMutable();
               this.field_.set(var1, var2);
               this.onChanged();
            } else {
               this.fieldBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setField(int var1, DescriptorProtos.FieldDescriptorProto.Builder var2) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.fieldBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(DescriptorProtos.FieldDescriptorProto var1) {
            if (this.fieldBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureFieldIsMutable();
               this.field_.add(var1);
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(int var1, DescriptorProtos.FieldDescriptorProto var2) {
            if (this.fieldBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureFieldIsMutable();
               this.field_.add(var1, var2);
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(DescriptorProtos.FieldDescriptorProto.Builder var1) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.add(var1.build());
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addField(int var1, DescriptorProtos.FieldDescriptorProto.Builder var2) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.fieldBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllField(Iterable var1) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.field_);
               this.onChanged();
            } else {
               this.fieldBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearField() {
            if (this.fieldBuilder_ == null) {
               this.field_ = Collections.emptyList();
               this.bitField0_ &= -3;
               this.onChanged();
            } else {
               this.fieldBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeField(int var1) {
            if (this.fieldBuilder_ == null) {
               this.ensureFieldIsMutable();
               this.field_.remove(var1);
               this.onChanged();
            } else {
               this.fieldBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder getFieldBuilder(int var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getFieldFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int var1) {
            return this.fieldBuilder_ == null ? (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.field_.get(var1) : (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.fieldBuilder_.getMessageOrBuilder(var1);
         }

         public List getFieldOrBuilderList() {
            return this.fieldBuilder_ != null ? this.fieldBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.field_);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addFieldBuilder() {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getFieldFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addFieldBuilder(int var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getFieldFieldBuilder().addBuilder(var1, DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public List getFieldBuilderList() {
            return this.getFieldFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getFieldFieldBuilder() {
            if (this.fieldBuilder_ == null) {
               this.fieldBuilder_ = new RepeatedFieldBuilderV3(this.field_, (this.bitField0_ & 2) != 0, this.getParentForChildren(), this.isClean());
               this.field_ = null;
            }

            return this.fieldBuilder_;
         }

         private void ensureExtensionIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.extension_ = new ArrayList(this.extension_);
               this.bitField0_ |= 4;
            }

         }

         public List getExtensionList() {
            return this.extensionBuilder_ == null ? Collections.unmodifiableList(this.extension_) : this.extensionBuilder_.getMessageList();
         }

         public int getExtensionCount() {
            return this.extensionBuilder_ == null ? this.extension_.size() : this.extensionBuilder_.getCount();
         }

         public DescriptorProtos.FieldDescriptorProto getExtension(int var1) {
            return this.extensionBuilder_ == null ? (DescriptorProtos.FieldDescriptorProto)this.extension_.get(var1) : (DescriptorProtos.FieldDescriptorProto)this.extensionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setExtension(int var1, DescriptorProtos.FieldDescriptorProto var2) {
            if (this.extensionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.set(var1, var2);
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setExtension(int var1, DescriptorProtos.FieldDescriptorProto.Builder var2) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto var1) {
            if (this.extensionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(var1);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(int var1, DescriptorProtos.FieldDescriptorProto var2) {
            if (this.extensionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(var1, var2);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto.Builder var1) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(var1.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtension(int var1, DescriptorProtos.FieldDescriptorProto.Builder var2) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllExtension(Iterable var1) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.extension_);
               this.onChanged();
            } else {
               this.extensionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearExtension() {
            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -5;
               this.onChanged();
            } else {
               this.extensionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeExtension(int var1) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.remove(var1);
               this.onChanged();
            } else {
               this.extensionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder getExtensionBuilder(int var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getExtensionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1) {
            return this.extensionBuilder_ == null ? (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(var1) : (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extensionBuilder_.getMessageOrBuilder(var1);
         }

         public List getExtensionOrBuilderList() {
            return this.extensionBuilder_ != null ? this.extensionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.extension_);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder() {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getExtensionFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder(int var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getExtensionFieldBuilder().addBuilder(var1, DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public List getExtensionBuilderList() {
            return this.getExtensionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getExtensionFieldBuilder() {
            if (this.extensionBuilder_ == null) {
               this.extensionBuilder_ = new RepeatedFieldBuilderV3(this.extension_, (this.bitField0_ & 4) != 0, this.getParentForChildren(), this.isClean());
               this.extension_ = null;
            }

            return this.extensionBuilder_;
         }

         private void ensureNestedTypeIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.nestedType_ = new ArrayList(this.nestedType_);
               this.bitField0_ |= 8;
            }

         }

         public List getNestedTypeList() {
            return this.nestedTypeBuilder_ == null ? Collections.unmodifiableList(this.nestedType_) : this.nestedTypeBuilder_.getMessageList();
         }

         public int getNestedTypeCount() {
            return this.nestedTypeBuilder_ == null ? this.nestedType_.size() : this.nestedTypeBuilder_.getCount();
         }

         public DescriptorProtos.DescriptorProto getNestedType(int var1) {
            return this.nestedTypeBuilder_ == null ? (DescriptorProtos.DescriptorProto)this.nestedType_.get(var1) : (DescriptorProtos.DescriptorProto)this.nestedTypeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setNestedType(int var1, DescriptorProtos.DescriptorProto var2) {
            if (this.nestedTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureNestedTypeIsMutable();
               this.nestedType_.set(var1, var2);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setNestedType(int var1, DescriptorProtos.DescriptorProto.Builder var2) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(DescriptorProtos.DescriptorProto var1) {
            if (this.nestedTypeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(var1);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(int var1, DescriptorProtos.DescriptorProto var2) {
            if (this.nestedTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(var1, var2);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(DescriptorProtos.DescriptorProto.Builder var1) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(var1.build());
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedType(int var1, DescriptorProtos.DescriptorProto.Builder var2) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllNestedType(Iterable var1) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.nestedType_);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearNestedType() {
            if (this.nestedTypeBuilder_ == null) {
               this.nestedType_ = Collections.emptyList();
               this.bitField0_ &= -9;
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeNestedType(int var1) {
            if (this.nestedTypeBuilder_ == null) {
               this.ensureNestedTypeIsMutable();
               this.nestedType_.remove(var1);
               this.onChanged();
            } else {
               this.nestedTypeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder getNestedTypeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.Builder)this.getNestedTypeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int var1) {
            return this.nestedTypeBuilder_ == null ? (DescriptorProtos.DescriptorProtoOrBuilder)this.nestedType_.get(var1) : (DescriptorProtos.DescriptorProtoOrBuilder)this.nestedTypeBuilder_.getMessageOrBuilder(var1);
         }

         public List getNestedTypeOrBuilderList() {
            return this.nestedTypeBuilder_ != null ? this.nestedTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.nestedType_);
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedTypeBuilder() {
            return (DescriptorProtos.DescriptorProto.Builder)this.getNestedTypeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.Builder addNestedTypeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.Builder)this.getNestedTypeFieldBuilder().addBuilder(var1, DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public List getNestedTypeBuilderList() {
            return this.getNestedTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getNestedTypeFieldBuilder() {
            if (this.nestedTypeBuilder_ == null) {
               this.nestedTypeBuilder_ = new RepeatedFieldBuilderV3(this.nestedType_, (this.bitField0_ & 8) != 0, this.getParentForChildren(), this.isClean());
               this.nestedType_ = null;
            }

            return this.nestedTypeBuilder_;
         }

         private void ensureEnumTypeIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.enumType_ = new ArrayList(this.enumType_);
               this.bitField0_ |= 16;
            }

         }

         public List getEnumTypeList() {
            return this.enumTypeBuilder_ == null ? Collections.unmodifiableList(this.enumType_) : this.enumTypeBuilder_.getMessageList();
         }

         public int getEnumTypeCount() {
            return this.enumTypeBuilder_ == null ? this.enumType_.size() : this.enumTypeBuilder_.getCount();
         }

         public DescriptorProtos.EnumDescriptorProto getEnumType(int var1) {
            return this.enumTypeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(var1) : (DescriptorProtos.EnumDescriptorProto)this.enumTypeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setEnumType(int var1, DescriptorProtos.EnumDescriptorProto var2) {
            if (this.enumTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.set(var1, var2);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setEnumType(int var1, DescriptorProtos.EnumDescriptorProto.Builder var2) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto var1) {
            if (this.enumTypeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(int var1, DescriptorProtos.EnumDescriptorProto var2) {
            if (this.enumTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1, var2);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto.Builder var1) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addEnumType(int var1, DescriptorProtos.EnumDescriptorProto.Builder var2) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllEnumType(Iterable var1) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.enumType_);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearEnumType() {
            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -17;
               this.onChanged();
            } else {
               this.enumTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeEnumType(int var1) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.remove(var1);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder getEnumTypeBuilder(int var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)this.getEnumTypeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1) {
            return this.enumTypeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(var1) : (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumTypeBuilder_.getMessageOrBuilder(var1);
         }

         public List getEnumTypeOrBuilderList() {
            return this.enumTypeBuilder_ != null ? this.enumTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.enumType_);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder() {
            return (DescriptorProtos.EnumDescriptorProto.Builder)this.getEnumTypeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder(int var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)this.getEnumTypeFieldBuilder().addBuilder(var1, DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public List getEnumTypeBuilderList() {
            return this.getEnumTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getEnumTypeFieldBuilder() {
            if (this.enumTypeBuilder_ == null) {
               this.enumTypeBuilder_ = new RepeatedFieldBuilderV3(this.enumType_, (this.bitField0_ & 16) != 0, this.getParentForChildren(), this.isClean());
               this.enumType_ = null;
            }

            return this.enumTypeBuilder_;
         }

         private void ensureExtensionRangeIsMutable() {
            if ((this.bitField0_ & 32) == 0) {
               this.extensionRange_ = new ArrayList(this.extensionRange_);
               this.bitField0_ |= 32;
            }

         }

         public List getExtensionRangeList() {
            return this.extensionRangeBuilder_ == null ? Collections.unmodifiableList(this.extensionRange_) : this.extensionRangeBuilder_.getMessageList();
         }

         public int getExtensionRangeCount() {
            return this.extensionRangeBuilder_ == null ? this.extensionRange_.size() : this.extensionRangeBuilder_.getCount();
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int var1) {
            return this.extensionRangeBuilder_ == null ? (DescriptorProtos.DescriptorProto.ExtensionRange)this.extensionRange_.get(var1) : (DescriptorProtos.DescriptorProto.ExtensionRange)this.extensionRangeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setExtensionRange(int var1, DescriptorProtos.DescriptorProto.ExtensionRange var2) {
            if (this.extensionRangeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.set(var1, var2);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setExtensionRange(int var1, DescriptorProtos.DescriptorProto.ExtensionRange.Builder var2) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(DescriptorProtos.DescriptorProto.ExtensionRange var1) {
            if (this.extensionRangeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(var1);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(int var1, DescriptorProtos.DescriptorProto.ExtensionRange var2) {
            if (this.extensionRangeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(var1, var2);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(DescriptorProtos.DescriptorProto.ExtensionRange.Builder var1) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(var1.build());
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addExtensionRange(int var1, DescriptorProtos.DescriptorProto.ExtensionRange.Builder var2) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllExtensionRange(Iterable var1) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.extensionRange_);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearExtensionRange() {
            if (this.extensionRangeBuilder_ == null) {
               this.extensionRange_ = Collections.emptyList();
               this.bitField0_ &= -33;
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeExtensionRange(int var1) {
            if (this.extensionRangeBuilder_ == null) {
               this.ensureExtensionRangeIsMutable();
               this.extensionRange_.remove(var1);
               this.onChanged();
            } else {
               this.extensionRangeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder getExtensionRangeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)this.getExtensionRangeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int var1) {
            return this.extensionRangeBuilder_ == null ? (DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder)this.extensionRange_.get(var1) : (DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder)this.extensionRangeBuilder_.getMessageOrBuilder(var1);
         }

         public List getExtensionRangeOrBuilderList() {
            return this.extensionRangeBuilder_ != null ? this.extensionRangeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.extensionRange_);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addExtensionRangeBuilder() {
            return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)this.getExtensionRangeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addExtensionRangeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)this.getExtensionRangeFieldBuilder().addBuilder(var1, DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance());
         }

         public List getExtensionRangeBuilderList() {
            return this.getExtensionRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getExtensionRangeFieldBuilder() {
            if (this.extensionRangeBuilder_ == null) {
               this.extensionRangeBuilder_ = new RepeatedFieldBuilderV3(this.extensionRange_, (this.bitField0_ & 32) != 0, this.getParentForChildren(), this.isClean());
               this.extensionRange_ = null;
            }

            return this.extensionRangeBuilder_;
         }

         private void ensureOneofDeclIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.oneofDecl_ = new ArrayList(this.oneofDecl_);
               this.bitField0_ |= 64;
            }

         }

         public List getOneofDeclList() {
            return this.oneofDeclBuilder_ == null ? Collections.unmodifiableList(this.oneofDecl_) : this.oneofDeclBuilder_.getMessageList();
         }

         public int getOneofDeclCount() {
            return this.oneofDeclBuilder_ == null ? this.oneofDecl_.size() : this.oneofDeclBuilder_.getCount();
         }

         public DescriptorProtos.OneofDescriptorProto getOneofDecl(int var1) {
            return this.oneofDeclBuilder_ == null ? (DescriptorProtos.OneofDescriptorProto)this.oneofDecl_.get(var1) : (DescriptorProtos.OneofDescriptorProto)this.oneofDeclBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setOneofDecl(int var1, DescriptorProtos.OneofDescriptorProto var2) {
            if (this.oneofDeclBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.set(var1, var2);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setOneofDecl(int var1, DescriptorProtos.OneofDescriptorProto.Builder var2) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(DescriptorProtos.OneofDescriptorProto var1) {
            if (this.oneofDeclBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(var1);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(int var1, DescriptorProtos.OneofDescriptorProto var2) {
            if (this.oneofDeclBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(var1, var2);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(DescriptorProtos.OneofDescriptorProto.Builder var1) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(var1.build());
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addOneofDecl(int var1, DescriptorProtos.OneofDescriptorProto.Builder var2) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllOneofDecl(Iterable var1) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.oneofDecl_);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearOneofDecl() {
            if (this.oneofDeclBuilder_ == null) {
               this.oneofDecl_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeOneofDecl(int var1) {
            if (this.oneofDeclBuilder_ == null) {
               this.ensureOneofDeclIsMutable();
               this.oneofDecl_.remove(var1);
               this.onChanged();
            } else {
               this.oneofDeclBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.OneofDescriptorProto.Builder getOneofDeclBuilder(int var1) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)this.getOneofDeclFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int var1) {
            return this.oneofDeclBuilder_ == null ? (DescriptorProtos.OneofDescriptorProtoOrBuilder)this.oneofDecl_.get(var1) : (DescriptorProtos.OneofDescriptorProtoOrBuilder)this.oneofDeclBuilder_.getMessageOrBuilder(var1);
         }

         public List getOneofDeclOrBuilderList() {
            return this.oneofDeclBuilder_ != null ? this.oneofDeclBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.oneofDecl_);
         }

         public DescriptorProtos.OneofDescriptorProto.Builder addOneofDeclBuilder() {
            return (DescriptorProtos.OneofDescriptorProto.Builder)this.getOneofDeclFieldBuilder().addBuilder(DescriptorProtos.OneofDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.OneofDescriptorProto.Builder addOneofDeclBuilder(int var1) {
            return (DescriptorProtos.OneofDescriptorProto.Builder)this.getOneofDeclFieldBuilder().addBuilder(var1, DescriptorProtos.OneofDescriptorProto.getDefaultInstance());
         }

         public List getOneofDeclBuilderList() {
            return this.getOneofDeclFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getOneofDeclFieldBuilder() {
            if (this.oneofDeclBuilder_ == null) {
               this.oneofDeclBuilder_ = new RepeatedFieldBuilderV3(this.oneofDecl_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.oneofDecl_ = null;
            }

            return this.oneofDeclBuilder_;
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 128) != 0;
         }

         public DescriptorProtos.MessageOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.MessageOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.DescriptorProto.Builder setOptions(DescriptorProtos.MessageOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setOptions(DescriptorProtos.MessageOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 128;
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder mergeOptions(DescriptorProtos.MessageOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 128) != 0 && this.options_ != null && this.options_ != DescriptorProtos.MessageOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.MessageOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 128;
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -129;
            return this;
         }

         public DescriptorProtos.MessageOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 128;
            this.onChanged();
            return (DescriptorProtos.MessageOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.MessageOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.MessageOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         private void ensureReservedRangeIsMutable() {
            if ((this.bitField0_ & 256) == 0) {
               this.reservedRange_ = new ArrayList(this.reservedRange_);
               this.bitField0_ |= 256;
            }

         }

         public List getReservedRangeList() {
            return this.reservedRangeBuilder_ == null ? Collections.unmodifiableList(this.reservedRange_) : this.reservedRangeBuilder_.getMessageList();
         }

         public int getReservedRangeCount() {
            return this.reservedRangeBuilder_ == null ? this.reservedRange_.size() : this.reservedRangeBuilder_.getCount();
         }

         public DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int var1) {
            return this.reservedRangeBuilder_ == null ? (DescriptorProtos.DescriptorProto.ReservedRange)this.reservedRange_.get(var1) : (DescriptorProtos.DescriptorProto.ReservedRange)this.reservedRangeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setReservedRange(int var1, DescriptorProtos.DescriptorProto.ReservedRange var2) {
            if (this.reservedRangeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(var1, var2);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder setReservedRange(int var1, DescriptorProtos.DescriptorProto.ReservedRange.Builder var2) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(DescriptorProtos.DescriptorProto.ReservedRange var1) {
            if (this.reservedRangeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(int var1, DescriptorProtos.DescriptorProto.ReservedRange var2) {
            if (this.reservedRangeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1, var2);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(DescriptorProtos.DescriptorProto.ReservedRange.Builder var1) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedRange(int var1, DescriptorProtos.DescriptorProto.ReservedRange.Builder var2) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addAllReservedRange(Iterable var1) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.reservedRange_);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearReservedRange() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRange_ = Collections.emptyList();
               this.bitField0_ &= -257;
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder removeReservedRange(int var1) {
            if (this.reservedRangeBuilder_ == null) {
               this.ensureReservedRangeIsMutable();
               this.reservedRange_.remove(var1);
               this.onChanged();
            } else {
               this.reservedRangeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder getReservedRangeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)this.getReservedRangeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int var1) {
            return this.reservedRangeBuilder_ == null ? (DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder)this.reservedRange_.get(var1) : (DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder)this.reservedRangeBuilder_.getMessageOrBuilder(var1);
         }

         public List getReservedRangeOrBuilderList() {
            return this.reservedRangeBuilder_ != null ? this.reservedRangeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.reservedRange_);
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder addReservedRangeBuilder() {
            return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)this.getReservedRangeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder addReservedRangeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)this.getReservedRangeFieldBuilder().addBuilder(var1, DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance());
         }

         public List getReservedRangeBuilderList() {
            return this.getReservedRangeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getReservedRangeFieldBuilder() {
            if (this.reservedRangeBuilder_ == null) {
               this.reservedRangeBuilder_ = new RepeatedFieldBuilderV3(this.reservedRange_, (this.bitField0_ & 256) != 0, this.getParentForChildren(), this.isClean());
               this.reservedRange_ = null;
            }

            return this.reservedRangeBuilder_;
         }

         private void ensureReservedNameIsMutable() {
            if ((this.bitField0_ & 512) == 0) {
               this.reservedName_ = new LazyStringArrayList(this.reservedName_);
               this.bitField0_ |= 512;
            }

         }

         public ProtocolStringList getReservedNameList() {
            return this.reservedName_.getUnmodifiableView();
         }

         public int getReservedNameCount() {
            return this.reservedName_.size();
         }

         public String getReservedName(int var1) {
            return (String)this.reservedName_.get(var1);
         }

         public ByteString getReservedNameBytes(int var1) {
            return this.reservedName_.getByteString(var1);
         }

         public DescriptorProtos.DescriptorProto.Builder setReservedName(int var1, String var2) {
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.set(var1, (Object)var2);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add((Object)var1);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.DescriptorProto.Builder addAllReservedName(Iterable var1) {
            this.ensureReservedNameIsMutable();
            AbstractMessageLite.Builder.addAll(var1, (List)this.reservedName_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder clearReservedName() {
            this.reservedName_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -513;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder addReservedNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.ensureReservedNameIsMutable();
               this.reservedName_.add(var1);
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.DescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.DescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.DescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.DescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }

      public static final class ReservedRange extends GeneratedMessageV3 implements DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int START_FIELD_NUMBER = 1;
         private int start_;
         public static final int END_FIELD_NUMBER = 2;
         private int end_;
         private byte memoizedIsInitialized;
         private static final DescriptorProtos.DescriptorProto.ReservedRange DEFAULT_INSTANCE = new DescriptorProtos.DescriptorProto.ReservedRange();
         /** @deprecated */
         @Deprecated
         public static final Parser PARSER = new AbstractParser() {
            public DescriptorProtos.DescriptorProto.ReservedRange parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
               return new DescriptorProtos.DescriptorProto.ReservedRange(var1, var2);
            }
         };

         private ReservedRange(GeneratedMessageV3.Builder var1) {
            super(var1);
            this.memoizedIsInitialized = -1;
         }

         private ReservedRange() {
            this.memoizedIsInitialized = -1;
         }

         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
            return new DescriptorProtos.DescriptorProto.ReservedRange();
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private ReservedRange(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            this();
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               boolean var3 = false;
               UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

               try {
                  boolean var5 = false;

                  while(!var5) {
                     int var6 = var1.readTag();
                     switch(var6) {
                     case 0:
                        var5 = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.start_ = var1.readInt32();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.end_ = var1.readInt32();
                        break;
                     default:
                        if (!this.parseUnknownField(var1, var4, var2, var6)) {
                           var5 = true;
                        }
                     }
                  }
               } catch (InvalidProtocolBufferException var11) {
                  throw var11.setUnfinishedMessage(this);
               } catch (IOException var12) {
                  throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = var4.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.ReservedRange.class, DescriptorProtos.DescriptorProto.ReservedRange.Builder.class);
         }

         public boolean hasStart() {
            return (this.bitField0_ & 1) != 0;
         }

         public int getStart() {
            return this.start_;
         }

         public boolean hasEnd() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getEnd() {
            return this.end_;
         }

         public final boolean isInitialized() {
            byte var1 = this.memoizedIsInitialized;
            if (var1 == 1) {
               return true;
            } else if (var1 == 0) {
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream var1) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               var1.writeInt32(1, this.start_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1.writeInt32(2, this.end_);
            }

            this.unknownFields.writeTo(var1);
         }

         public int getSerializedSize() {
            int var1 = this.memoizedSize;
            if (var1 != -1) {
               return var1;
            } else {
               var1 = 0;
               if ((this.bitField0_ & 1) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(1, this.start_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(2, this.end_);
               }

               var1 += this.unknownFields.getSerializedSize();
               this.memoizedSize = var1;
               return var1;
            }
         }

         public boolean equals(Object var1) {
            if (var1 == this) {
               return true;
            } else if (!(var1 instanceof DescriptorProtos.DescriptorProto.ReservedRange)) {
               return super.equals(var1);
            } else {
               DescriptorProtos.DescriptorProto.ReservedRange var2 = (DescriptorProtos.DescriptorProto.ReservedRange)var1;
               if (this.hasStart() != var2.hasStart()) {
                  return false;
               } else if (this.hasStart() && this.getStart() != var2.getStart()) {
                  return false;
               } else if (this.hasEnd() != var2.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != var2.getEnd()) {
                  return false;
               } else {
                  return this.unknownFields.equals(var2.unknownFields);
               }
            }
         }

         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               byte var1 = 41;
               int var2 = 19 * var1 + getDescriptor().hashCode();
               if (this.hasStart()) {
                  var2 = 37 * var2 + 1;
                  var2 = 53 * var2 + this.getStart();
               }

               if (this.hasEnd()) {
                  var2 = 37 * var2 + 2;
                  var2 = 53 * var2 + this.getEnd();
               }

               var2 = 29 * var2 + this.unknownFields.hashCode();
               this.memoizedHashCode = var2;
               return var2;
            }
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteString var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(byte[] var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseDelimitedFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(CodedInputStream var0) throws IOException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.DescriptorProto.ReservedRange)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilder(DescriptorProtos.DescriptorProto.ReservedRange var0) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
         }

         public DescriptorProtos.DescriptorProto.ReservedRange.Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new DescriptorProtos.DescriptorProto.ReservedRange.Builder() : (new DescriptorProtos.DescriptorProto.ReservedRange.Builder()).mergeFrom(this);
         }

         protected DescriptorProtos.DescriptorProto.ReservedRange.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
            DescriptorProtos.DescriptorProto.ReservedRange.Builder var2 = new DescriptorProtos.DescriptorProto.ReservedRange.Builder(var1);
            return var2;
         }

          @Override
          public byte[] toByteArray() {
              return new byte[0];
          }

          public static DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser parser() {
            return PARSER;
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         // $FF: synthetic method
         ReservedRange(GeneratedMessageV3.Builder var1, Object var2) {
            this(var1);
         }

         // $FF: synthetic method
         ReservedRange(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
            this(var1, var2);
         }

         public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder {
            private int bitField0_;
            private int start_;
            private int end_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.ReservedRange.class, DescriptorProtos.DescriptorProto.ReservedRange.Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent var1) {
               super(var1);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               }

            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clear() {
               super.clear();
               this.start_ = 0;
               this.bitField0_ &= -2;
               this.end_ = 0;
               this.bitField0_ &= -3;
               return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ReservedRange_descriptor;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange getDefaultInstanceForType() {
               return DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance();
            }

            public DescriptorProtos.DescriptorProto.ReservedRange build() {
               DescriptorProtos.DescriptorProto.ReservedRange var1 = this.buildPartial();
               if (!var1.isInitialized()) {
                  throw newUninitializedMessageException(var1);
               } else {
                  return var1;
               }
            }

            public DescriptorProtos.DescriptorProto.ReservedRange buildPartial() {
               DescriptorProtos.DescriptorProto.ReservedRange var1 = new DescriptorProtos.DescriptorProto.ReservedRange(this);
               int var2 = this.bitField0_;
               int var3 = 0;
               if ((var2 & 1) != 0) {
                  var1.start_ = this.start_;
                  var3 |= 1;
               }

               if ((var2 & 2) != 0) {
                  var1.end_ = this.end_;
                  var3 |= 2;
               }

               var1.bitField0_ = var3;
               this.onBuilt();
               return var1;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clone() {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.clone();
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.setField(var1, var2);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearField(Descriptors.FieldDescriptor var1) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.clearField(var1);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearOneof(Descriptors.OneofDescriptor var1) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.clearOneof(var1);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.setRepeatedField(var1, var2, var3);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.addRepeatedField(var1, var2);
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeFrom(Message var1) {
               if (var1 instanceof DescriptorProtos.DescriptorProto.ReservedRange) {
                  return this.mergeFrom((DescriptorProtos.DescriptorProto.ReservedRange)var1);
               } else {
                  super.mergeFrom(var1);
                  return this;
               }
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeFrom(DescriptorProtos.DescriptorProto.ReservedRange var1) {
               if (var1 == DescriptorProtos.DescriptorProto.ReservedRange.getDefaultInstance()) {
                  return this;
               } else {
                  if (var1.hasStart()) {
                     this.setStart(var1.getStart());
                  }

                  if (var1.hasEnd()) {
                     this.setEnd(var1.getEnd());
                  }

                  this.mergeUnknownFields(var1.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            public final boolean isInitialized() {
               return true;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
               DescriptorProtos.DescriptorProto.ReservedRange var3 = null;

               try {
                  var3 = (DescriptorProtos.DescriptorProto.ReservedRange)DescriptorProtos.DescriptorProto.ReservedRange.PARSER.parsePartialFrom(var1, var2);
               } catch (InvalidProtocolBufferException var8) {
                  var3 = (DescriptorProtos.DescriptorProto.ReservedRange)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (var3 != null) {
                     this.mergeFrom(var3);
                  }

               }

               return this;
            }

            public boolean hasStart() {
               return (this.bitField0_ & 1) != 0;
            }

            public int getStart() {
               return this.start_;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setStart(int var1) {
               this.bitField0_ |= 1;
               this.start_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearStart() {
               this.bitField0_ &= -2;
               this.start_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasEnd() {
               return (this.bitField0_ & 2) != 0;
            }

            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder setEnd(int var1) {
               this.bitField0_ |= 2;
               this.end_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ReservedRange.Builder clearEnd() {
               this.bitField0_ &= -3;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public final DescriptorProtos.DescriptorProto.ReservedRange.Builder setUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.setUnknownFields(var1);
            }

            public final DescriptorProtos.DescriptorProto.ReservedRange.Builder mergeUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.DescriptorProto.ReservedRange.Builder)super.mergeUnknownFields(var1);
            }

            // $FF: synthetic method
            Builder(Object var1) {
               this();
            }

            // $FF: synthetic method
            Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
               this(var1);
            }
         }
      }

      public interface ReservedRangeOrBuilder extends MessageOrBuilder {
         boolean hasStart();

         int getStart();

         boolean hasEnd();

         int getEnd();
      }

      public static final class ExtensionRange extends GeneratedMessageV3 implements DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder {
         private static final long serialVersionUID = 0L;
         private int bitField0_;
         public static final int START_FIELD_NUMBER = 1;
         private int start_;
         public static final int END_FIELD_NUMBER = 2;
         private int end_;
         public static final int OPTIONS_FIELD_NUMBER = 3;
         private DescriptorProtos.ExtensionRangeOptions options_;
         private byte memoizedIsInitialized;
         private static final DescriptorProtos.DescriptorProto.ExtensionRange DEFAULT_INSTANCE = new DescriptorProtos.DescriptorProto.ExtensionRange();
         /** @deprecated */
         @Deprecated
         public static final Parser PARSER = new AbstractParser() {
            public DescriptorProtos.DescriptorProto.ExtensionRange parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
               return new DescriptorProtos.DescriptorProto.ExtensionRange(var1, var2);
            }
         };

         private ExtensionRange(GeneratedMessageV3.Builder var1) {
            super(var1);
            this.memoizedIsInitialized = -1;
         }

         private ExtensionRange() {
            this.memoizedIsInitialized = -1;
         }

         protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
            return new DescriptorProtos.DescriptorProto.ExtensionRange();
         }

         public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
         }

         private ExtensionRange(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            this();
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               boolean var3 = false;
               UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

               try {
                  boolean var5 = false;

                  while(!var5) {
                     int var6 = var1.readTag();
                     switch(var6) {
                     case 0:
                        var5 = true;
                        break;
                     case 8:
                        this.bitField0_ |= 1;
                        this.start_ = var1.readInt32();
                        break;
                     case 16:
                        this.bitField0_ |= 2;
                        this.end_ = var1.readInt32();
                        break;
                     case 26:
                        DescriptorProtos.ExtensionRangeOptions.Builder var7 = null;
                        if ((this.bitField0_ & 4) != 0) {
                           var7 = this.options_.toBuilder();
                        }

                        this.options_ = (DescriptorProtos.ExtensionRangeOptions)var1.readMessage(DescriptorProtos.ExtensionRangeOptions.PARSER, var2);
                        if (var7 != null) {
                           var7.mergeFrom(this.options_);
                           this.options_ = var7.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        break;
                     default:
                        if (!this.parseUnknownField(var1, var4, var2, var6)) {
                           var5 = true;
                        }
                     }
                  }
               } catch (InvalidProtocolBufferException var12) {
                  throw var12.setUnfinishedMessage(this);
               } catch (IOException var13) {
                  throw (new InvalidProtocolBufferException(var13)).setUnfinishedMessage(this);
               } finally {
                  this.unknownFields = var4.build();
                  this.makeExtensionsImmutable();
               }

            }
         }

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.ExtensionRange.class, DescriptorProtos.DescriptorProto.ExtensionRange.Builder.class);
         }

         public boolean hasStart() {
            return (this.bitField0_ & 1) != 0;
         }

         public int getStart() {
            return this.start_;
         }

         public boolean hasEnd() {
            return (this.bitField0_ & 2) != 0;
         }

         public int getEnd() {
            return this.end_;
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 4) != 0;
         }

         public DescriptorProtos.ExtensionRangeOptions getOptions() {
            return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
         }

         public DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() {
            return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
         }

         public final boolean isInitialized() {
            byte var1 = this.memoizedIsInitialized;
            if (var1 == 1) {
               return true;
            } else if (var1 == 0) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }

         public void writeTo(CodedOutputStream var1) throws IOException {
            if ((this.bitField0_ & 1) != 0) {
               var1.writeInt32(1, this.start_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1.writeInt32(2, this.end_);
            }

            if ((this.bitField0_ & 4) != 0) {
               var1.writeMessage(3, this.getOptions());
            }

            this.unknownFields.writeTo(var1);
         }

         public int getSerializedSize() {
            int var1 = this.memoizedSize;
            if (var1 != -1) {
               return var1;
            } else {
               var1 = 0;
               if ((this.bitField0_ & 1) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(1, this.start_);
               }

               if ((this.bitField0_ & 2) != 0) {
                  var1 += CodedOutputStream.computeInt32Size(2, this.end_);
               }

               if ((this.bitField0_ & 4) != 0) {
                  var1 += CodedOutputStream.computeMessageSize(3, this.getOptions());
               }

               var1 += this.unknownFields.getSerializedSize();
               this.memoizedSize = var1;
               return var1;
            }
         }

         public boolean equals(Object var1) {
            if (var1 == this) {
               return true;
            } else if (!(var1 instanceof DescriptorProtos.DescriptorProto.ExtensionRange)) {
               return super.equals(var1);
            } else {
               DescriptorProtos.DescriptorProto.ExtensionRange var2 = (DescriptorProtos.DescriptorProto.ExtensionRange)var1;
               if (this.hasStart() != var2.hasStart()) {
                  return false;
               } else if (this.hasStart() && this.getStart() != var2.getStart()) {
                  return false;
               } else if (this.hasEnd() != var2.hasEnd()) {
                  return false;
               } else if (this.hasEnd() && this.getEnd() != var2.getEnd()) {
                  return false;
               } else if (this.hasOptions() != var2.hasOptions()) {
                  return false;
               } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
                  return false;
               } else {
                  return this.unknownFields.equals(var2.unknownFields);
               }
            }
         }

         public int hashCode() {
            if (this.memoizedHashCode != 0) {
               return this.memoizedHashCode;
            } else {
               byte var1 = 41;
               int var2 = 19 * var1 + getDescriptor().hashCode();
               if (this.hasStart()) {
                  var2 = 37 * var2 + 1;
                  var2 = 53 * var2 + this.getStart();
               }

               if (this.hasEnd()) {
                  var2 = 37 * var2 + 2;
                  var2 = 53 * var2 + this.getEnd();
               }

               if (this.hasOptions()) {
                  var2 = 37 * var2 + 3;
                  var2 = 53 * var2 + this.getOptions().hashCode();
               }

               var2 = 29 * var2 + this.unknownFields.hashCode();
               this.memoizedHashCode = var2;
               return var2;
            }
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteString var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(byte[] var0) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)PARSER.parseFrom(var0);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)PARSER.parseFrom(var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseDelimitedFrom(InputStream var0) throws IOException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(CodedInputStream var0) throws IOException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)GeneratedMessageV3.parseWithIOException(PARSER, var0);
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
            return (DescriptorProtos.DescriptorProto.ExtensionRange)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilderForType() {
            return newBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
         }

         public static DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilder(DescriptorProtos.DescriptorProto.ExtensionRange var0) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange.Builder toBuilder() {
            return this == DEFAULT_INSTANCE ? new DescriptorProtos.DescriptorProto.ExtensionRange.Builder() : (new DescriptorProtos.DescriptorProto.ExtensionRange.Builder()).mergeFrom(this);
         }

         protected DescriptorProtos.DescriptorProto.ExtensionRange.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
            DescriptorProtos.DescriptorProto.ExtensionRange.Builder var2 = new DescriptorProtos.DescriptorProto.ExtensionRange.Builder(var1);
            return var2;
         }

          @Override
          public byte[] toByteArray() {
              return new byte[0];
          }

          public static DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstance() {
            return DEFAULT_INSTANCE;
         }

         public static Parser parser() {
            return PARSER;
         }

         public Parser getParserForType() {
            return PARSER;
         }

         public DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
         }

         // $FF: synthetic method
         ExtensionRange(GeneratedMessageV3.Builder var1, Object var2) {
            this(var1);
         }

         // $FF: synthetic method
         ExtensionRange(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
            this(var1, var2);
         }

         public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder {
            private int bitField0_;
            private int start_;
            private int end_;
            private DescriptorProtos.ExtensionRangeOptions options_;
            private SingleFieldBuilderV3 optionsBuilder_;

            public static final Descriptors.Descriptor getDescriptor() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.DescriptorProto.ExtensionRange.class, DescriptorProtos.DescriptorProto.ExtensionRange.Builder.class);
            }

            private Builder() {
               this.maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent var1) {
               super(var1);
               this.maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
               if (GeneratedMessageV3.alwaysUseFieldBuilders) {
                  this.getOptionsFieldBuilder();
               }

            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clear() {
               super.clear();
               this.start_ = 0;
               this.bitField0_ &= -2;
               this.end_ = 0;
               this.bitField0_ &= -3;
               if (this.optionsBuilder_ == null) {
                  this.options_ = null;
               } else {
                  this.optionsBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
               return DescriptorProtos.internal_static_google_protobuf_DescriptorProto_ExtensionRange_descriptor;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange getDefaultInstanceForType() {
               return DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance();
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange build() {
               DescriptorProtos.DescriptorProto.ExtensionRange var1 = this.buildPartial();
               if (!var1.isInitialized()) {
                  throw newUninitializedMessageException(var1);
               } else {
                  return var1;
               }
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange buildPartial() {
               DescriptorProtos.DescriptorProto.ExtensionRange var1 = new DescriptorProtos.DescriptorProto.ExtensionRange(this);
               int var2 = this.bitField0_;
               int var3 = 0;
               if ((var2 & 1) != 0) {
                  var1.start_ = this.start_;
                  var3 |= 1;
               }

               if ((var2 & 2) != 0) {
                  var1.end_ = this.end_;
                  var3 |= 2;
               }

               if ((var2 & 4) != 0) {
                  if (this.optionsBuilder_ == null) {
                     var1.options_ = this.options_;
                  } else {
                     var1.options_ = (DescriptorProtos.ExtensionRangeOptions)this.optionsBuilder_.build();
                  }

                  var3 |= 4;
               }

               var1.bitField0_ = var3;
               this.onBuilt();
               return var1;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clone() {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.clone();
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.setField(var1, var2);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearField(Descriptors.FieldDescriptor var1) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.clearField(var1);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearOneof(Descriptors.OneofDescriptor var1) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.clearOneof(var1);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.setRepeatedField(var1, var2, var3);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.addRepeatedField(var1, var2);
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeFrom(Message var1) {
               if (var1 instanceof DescriptorProtos.DescriptorProto.ExtensionRange) {
                  return this.mergeFrom((DescriptorProtos.DescriptorProto.ExtensionRange)var1);
               } else {
                  super.mergeFrom(var1);
                  return this;
               }
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeFrom(DescriptorProtos.DescriptorProto.ExtensionRange var1) {
               if (var1 == DescriptorProtos.DescriptorProto.ExtensionRange.getDefaultInstance()) {
                  return this;
               } else {
                  if (var1.hasStart()) {
                     this.setStart(var1.getStart());
                  }

                  if (var1.hasEnd()) {
                     this.setEnd(var1.getEnd());
                  }

                  if (var1.hasOptions()) {
                     this.mergeOptions(var1.getOptions());
                  }

                  this.mergeUnknownFields(var1.unknownFields);
                  this.onChanged();
                  return this;
               }
            }

            public final boolean isInitialized() {
               return !this.hasOptions() || this.getOptions().isInitialized();
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
               DescriptorProtos.DescriptorProto.ExtensionRange var3 = null;

               try {
                  var3 = (DescriptorProtos.DescriptorProto.ExtensionRange)DescriptorProtos.DescriptorProto.ExtensionRange.PARSER.parsePartialFrom(var1, var2);
               } catch (InvalidProtocolBufferException var8) {
                  var3 = (DescriptorProtos.DescriptorProto.ExtensionRange)var8.getUnfinishedMessage();
                  throw var8.unwrapIOException();
               } finally {
                  if (var3 != null) {
                     this.mergeFrom(var3);
                  }

               }

               return this;
            }

            public boolean hasStart() {
               return (this.bitField0_ & 1) != 0;
            }

            public int getStart() {
               return this.start_;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setStart(int var1) {
               this.bitField0_ |= 1;
               this.start_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearStart() {
               this.bitField0_ &= -2;
               this.start_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasEnd() {
               return (this.bitField0_ & 2) != 0;
            }

            public int getEnd() {
               return this.end_;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setEnd(int var1) {
               this.bitField0_ |= 2;
               this.end_ = var1;
               this.onChanged();
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearEnd() {
               this.bitField0_ &= -3;
               this.end_ = 0;
               this.onChanged();
               return this;
            }

            public boolean hasOptions() {
               return (this.bitField0_ & 4) != 0;
            }

            public DescriptorProtos.ExtensionRangeOptions getOptions() {
               if (this.optionsBuilder_ == null) {
                  return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
               } else {
                  return (DescriptorProtos.ExtensionRangeOptions)this.optionsBuilder_.getMessage();
               }
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setOptions(DescriptorProtos.ExtensionRangeOptions var1) {
               if (this.optionsBuilder_ == null) {
                  if (var1 == null) {
                     throw new NullPointerException();
                  }

                  this.options_ = var1;
                  this.onChanged();
               } else {
                  this.optionsBuilder_.setMessage(var1);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder setOptions(DescriptorProtos.ExtensionRangeOptions.Builder var1) {
               if (this.optionsBuilder_ == null) {
                  this.options_ = var1.build();
                  this.onChanged();
               } else {
                  this.optionsBuilder_.setMessage(var1.build());
               }

               this.bitField0_ |= 4;
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeOptions(DescriptorProtos.ExtensionRangeOptions var1) {
               if (this.optionsBuilder_ == null) {
                  if ((this.bitField0_ & 4) != 0 && this.options_ != null && this.options_ != DescriptorProtos.ExtensionRangeOptions.getDefaultInstance()) {
                     this.options_ = DescriptorProtos.ExtensionRangeOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
                  } else {
                     this.options_ = var1;
                  }

                  this.onChanged();
               } else {
                  this.optionsBuilder_.mergeFrom(var1);
               }

               this.bitField0_ |= 4;
               return this;
            }

            public DescriptorProtos.DescriptorProto.ExtensionRange.Builder clearOptions() {
               if (this.optionsBuilder_ == null) {
                  this.options_ = null;
                  this.onChanged();
               } else {
                  this.optionsBuilder_.clear();
               }

               this.bitField0_ &= -5;
               return this;
            }

            public DescriptorProtos.ExtensionRangeOptions.Builder getOptionsBuilder() {
               this.bitField0_ |= 4;
               this.onChanged();
               return (DescriptorProtos.ExtensionRangeOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
            }

            public DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder() {
               if (this.optionsBuilder_ != null) {
                  return (DescriptorProtos.ExtensionRangeOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
               } else {
                  return this.options_ == null ? DescriptorProtos.ExtensionRangeOptions.getDefaultInstance() : this.options_;
               }
            }

            private SingleFieldBuilderV3 getOptionsFieldBuilder() {
               if (this.optionsBuilder_ == null) {
                  this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
                  this.options_ = null;
               }

               return this.optionsBuilder_;
            }

            public final DescriptorProtos.DescriptorProto.ExtensionRange.Builder setUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.setUnknownFields(var1);
            }

            public final DescriptorProtos.DescriptorProto.ExtensionRange.Builder mergeUnknownFields(UnknownFieldSet var1) {
               return (DescriptorProtos.DescriptorProto.ExtensionRange.Builder)super.mergeUnknownFields(var1);
            }

            // $FF: synthetic method
            Builder(Object var1) {
               this();
            }

            // $FF: synthetic method
            Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
               this(var1);
            }
         }
      }

      public interface ExtensionRangeOrBuilder extends MessageOrBuilder {
         boolean hasStart();

         int getStart();

         boolean hasEnd();

         int getEnd();

         boolean hasOptions();

         DescriptorProtos.ExtensionRangeOptions getOptions();

         DescriptorProtos.ExtensionRangeOptionsOrBuilder getOptionsOrBuilder();
      }
   }

   public interface DescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      List getFieldList();

      DescriptorProtos.FieldDescriptorProto getField(int var1);

      int getFieldCount();

      List getFieldOrBuilderList();

      DescriptorProtos.FieldDescriptorProtoOrBuilder getFieldOrBuilder(int var1);

      List getExtensionList();

      DescriptorProtos.FieldDescriptorProto getExtension(int var1);

      int getExtensionCount();

      List getExtensionOrBuilderList();

      DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1);

      List getNestedTypeList();

      DescriptorProtos.DescriptorProto getNestedType(int var1);

      int getNestedTypeCount();

      List getNestedTypeOrBuilderList();

      DescriptorProtos.DescriptorProtoOrBuilder getNestedTypeOrBuilder(int var1);

      List getEnumTypeList();

      DescriptorProtos.EnumDescriptorProto getEnumType(int var1);

      int getEnumTypeCount();

      List getEnumTypeOrBuilderList();

      DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1);

      List getExtensionRangeList();

      DescriptorProtos.DescriptorProto.ExtensionRange getExtensionRange(int var1);

      int getExtensionRangeCount();

      List getExtensionRangeOrBuilderList();

      DescriptorProtos.DescriptorProto.ExtensionRangeOrBuilder getExtensionRangeOrBuilder(int var1);

      List getOneofDeclList();

      DescriptorProtos.OneofDescriptorProto getOneofDecl(int var1);

      int getOneofDeclCount();

      List getOneofDeclOrBuilderList();

      DescriptorProtos.OneofDescriptorProtoOrBuilder getOneofDeclOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.MessageOptions getOptions();

      DescriptorProtos.MessageOptionsOrBuilder getOptionsOrBuilder();

      List getReservedRangeList();

      DescriptorProtos.DescriptorProto.ReservedRange getReservedRange(int var1);

      int getReservedRangeCount();

      List getReservedRangeOrBuilderList();

      DescriptorProtos.DescriptorProto.ReservedRangeOrBuilder getReservedRangeOrBuilder(int var1);

      List getReservedNameList();

      int getReservedNameCount();

      String getReservedName(int var1);

      ByteString getReservedNameBytes(int var1);
   }

   public static final class FileDescriptorProto extends GeneratedMessageV3 implements DescriptorProtos.FileDescriptorProtoOrBuilder {
      private static final long serialVersionUID = 0L;
      private int bitField0_;
      public static final int NAME_FIELD_NUMBER = 1;
      private volatile Object name_;
      public static final int PACKAGE_FIELD_NUMBER = 2;
      private volatile Object package_;
      public static final int DEPENDENCY_FIELD_NUMBER = 3;
      private LazyStringList dependency_;
      public static final int PUBLIC_DEPENDENCY_FIELD_NUMBER = 10;
      private Internal.IntList publicDependency_;
      public static final int WEAK_DEPENDENCY_FIELD_NUMBER = 11;
      private Internal.IntList weakDependency_;
      public static final int MESSAGE_TYPE_FIELD_NUMBER = 4;
      private List messageType_;
      public static final int ENUM_TYPE_FIELD_NUMBER = 5;
      private List enumType_;
      public static final int SERVICE_FIELD_NUMBER = 6;
      private List service_;
      public static final int EXTENSION_FIELD_NUMBER = 7;
      private List extension_;
      public static final int OPTIONS_FIELD_NUMBER = 8;
      private DescriptorProtos.FileOptions options_;
      public static final int SOURCE_CODE_INFO_FIELD_NUMBER = 9;
      private DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
      public static final int SYNTAX_FIELD_NUMBER = 12;
      private volatile Object syntax_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.FileDescriptorProto DEFAULT_INSTANCE = new DescriptorProtos.FileDescriptorProto();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.FileDescriptorProto parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FileDescriptorProto(var1, var2);
         }
      };

      private FileDescriptorProto(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private FileDescriptorProto() {
         this.memoizedIsInitialized = -1;
         this.name_ = "";
         this.package_ = "";
         this.dependency_ = LazyStringArrayList.EMPTY;
         this.publicDependency_ = emptyIntList();
         this.weakDependency_ = emptyIntList();
         this.messageType_ = Collections.emptyList();
         this.enumType_ = Collections.emptyList();
         this.service_ = Collections.emptyList();
         this.extension_ = Collections.emptyList();
         this.syntax_ = "";
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.FileDescriptorProto();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            int var3 = 0;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(true) {
                  while(!var5) {
                     int var6 = var1.readTag();
                     ByteString var7;
                     int var8;
                     int var16;
                     switch(var6) {
                     case 0:
                        var5 = true;
                        continue;
                     case 10:
                        var7 = var1.readBytes();
                        this.bitField0_ |= 1;
                        this.name_ = var7;
                        continue;
                     case 18:
                        var7 = var1.readBytes();
                        this.bitField0_ |= 2;
                        this.package_ = var7;
                        continue;
                     case 26:
                        var7 = var1.readBytes();
                        if ((var3 & 4) == 0) {
                           this.dependency_ = new LazyStringArrayList();
                           var3 |= 4;
                        }

                        this.dependency_.add(var7);
                        continue;
                     case 34:
                        if ((var3 & 32) == 0) {
                           this.messageType_ = new ArrayList();
                           var3 |= 32;
                        }

                        this.messageType_.add(var1.readMessage(DescriptorProtos.DescriptorProto.PARSER, var2));
                        continue;
                     case 42:
                        if ((var3 & 64) == 0) {
                           this.enumType_ = new ArrayList();
                           var3 |= 64;
                        }

                        this.enumType_.add(var1.readMessage(DescriptorProtos.EnumDescriptorProto.PARSER, var2));
                        continue;
                     case 50:
                        if ((var3 & 128) == 0) {
                           this.service_ = new ArrayList();
                           var3 |= 128;
                        }

                        this.service_.add(var1.readMessage(DescriptorProtos.ServiceDescriptorProto.PARSER, var2));
                        continue;
                     case 58:
                        if ((var3 & 256) == 0) {
                           this.extension_ = new ArrayList();
                           var3 |= 256;
                        }

                        this.extension_.add(var1.readMessage(DescriptorProtos.FieldDescriptorProto.PARSER, var2));
                        continue;
                     case 66:
                        DescriptorProtos.FileOptions.Builder var18 = null;
                        if ((this.bitField0_ & 4) != 0) {
                           var18 = this.options_.toBuilder();
                        }

                        this.options_ = (DescriptorProtos.FileOptions)var1.readMessage(DescriptorProtos.FileOptions.PARSER, var2);
                        if (var18 != null) {
                           var18.mergeFrom(this.options_);
                           this.options_ = var18.buildPartial();
                        }

                        this.bitField0_ |= 4;
                        continue;
                     case 74:
                        DescriptorProtos.SourceCodeInfo.Builder var17 = null;
                        if ((this.bitField0_ & 8) != 0) {
                           var17 = this.sourceCodeInfo_.toBuilder();
                        }

                        this.sourceCodeInfo_ = (DescriptorProtos.SourceCodeInfo)var1.readMessage(DescriptorProtos.SourceCodeInfo.PARSER, var2);
                        if (var17 != null) {
                           var17.mergeFrom(this.sourceCodeInfo_);
                           this.sourceCodeInfo_ = var17.buildPartial();
                        }

                        this.bitField0_ |= 8;
                        continue;
                     case 80:
                        if ((var3 & 8) == 0) {
                           this.publicDependency_ = newIntList();
                           var3 |= 8;
                        }

                        this.publicDependency_.addInt(var1.readInt32());
                        continue;
                     case 82:
                        var16 = var1.readRawVarint32();
                        var8 = var1.pushLimit(var16);
                        if ((var3 & 8) == 0 && var1.getBytesUntilLimit() > 0) {
                           this.publicDependency_ = newIntList();
                           var3 |= 8;
                        }
                        break;
                     case 88:
                        if ((var3 & 16) == 0) {
                           this.weakDependency_ = newIntList();
                           var3 |= 16;
                        }

                        this.weakDependency_.addInt(var1.readInt32());
                        continue;
                     case 90:
                        var16 = var1.readRawVarint32();
                        var8 = var1.pushLimit(var16);
                        if ((var3 & 16) == 0 && var1.getBytesUntilLimit() > 0) {
                           this.weakDependency_ = newIntList();
                           var3 |= 16;
                        }

                        while(var1.getBytesUntilLimit() > 0) {
                           this.weakDependency_.addInt(var1.readInt32());
                        }

                        var1.popLimit(var8);
                        continue;
                     case 98:
                        var7 = var1.readBytes();
                        this.bitField0_ |= 16;
                        this.syntax_ = var7;
                        continue;
                     default:
                        if (!this.parseUnknownField(var1, var4, var2, var6)) {
                           var5 = true;
                        }
                        continue;
                     }

                     while(var1.getBytesUntilLimit() > 0) {
                        this.publicDependency_.addInt(var1.readInt32());
                     }

                     var1.popLimit(var8);
                  }

                  return;
               }
            } catch (InvalidProtocolBufferException var13) {
               throw var13.setUnfinishedMessage(this);
            } catch (IOException var14) {
               throw (new InvalidProtocolBufferException(var14)).setUnfinishedMessage(this);
            } finally {
               if ((var3 & 4) != 0) {
                  this.dependency_ = this.dependency_.getUnmodifiableView();
               }

               if ((var3 & 32) != 0) {
                  this.messageType_ = Collections.unmodifiableList(this.messageType_);
               }

               if ((var3 & 64) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
               }

               if ((var3 & 128) != 0) {
                  this.service_ = Collections.unmodifiableList(this.service_);
               }

               if ((var3 & 256) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
               }

               if ((var3 & 8) != 0) {
                  this.publicDependency_.makeImmutable();
               }

               if ((var3 & 16) != 0) {
                  this.weakDependency_.makeImmutable();
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }
         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorProto.class, DescriptorProtos.FileDescriptorProto.Builder.class);
      }

      public boolean hasName() {
         return (this.bitField0_ & 1) != 0;
      }

      public String getName() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.name_ = var3;
            }

            return var3;
         }
      }

      public ByteString getNameBytes() {
         Object var1 = this.name_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.name_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public boolean hasPackage() {
         return (this.bitField0_ & 2) != 0;
      }

      public String getPackage() {
         Object var1 = this.package_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.package_ = var3;
            }

            return var3;
         }
      }

      public ByteString getPackageBytes() {
         Object var1 = this.package_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.package_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public ProtocolStringList getDependencyList() {
         return this.dependency_;
      }

      public int getDependencyCount() {
         return this.dependency_.size();
      }

      public String getDependency(int var1) {
         return (String)this.dependency_.get(var1);
      }

      public ByteString getDependencyBytes(int var1) {
         return this.dependency_.getByteString(var1);
      }

      public List getPublicDependencyList() {
         return this.publicDependency_;
      }

      public int getPublicDependencyCount() {
         return this.publicDependency_.size();
      }

      public int getPublicDependency(int var1) {
         return this.publicDependency_.getInt(var1);
      }

      public List getWeakDependencyList() {
         return this.weakDependency_;
      }

      public int getWeakDependencyCount() {
         return this.weakDependency_.size();
      }

      public int getWeakDependency(int var1) {
         return this.weakDependency_.getInt(var1);
      }

      public List getMessageTypeList() {
         return this.messageType_;
      }

      public List getMessageTypeOrBuilderList() {
         return this.messageType_;
      }

      public int getMessageTypeCount() {
         return this.messageType_.size();
      }

      public DescriptorProtos.DescriptorProto getMessageType(int var1) {
         return (DescriptorProtos.DescriptorProto)this.messageType_.get(var1);
      }

      public DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int var1) {
         return (DescriptorProtos.DescriptorProtoOrBuilder)this.messageType_.get(var1);
      }

      public List getEnumTypeList() {
         return this.enumType_;
      }

      public List getEnumTypeOrBuilderList() {
         return this.enumType_;
      }

      public int getEnumTypeCount() {
         return this.enumType_.size();
      }

      public DescriptorProtos.EnumDescriptorProto getEnumType(int var1) {
         return (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(var1);
      }

      public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1) {
         return (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(var1);
      }

      public List getServiceList() {
         return this.service_;
      }

      public List getServiceOrBuilderList() {
         return this.service_;
      }

      public int getServiceCount() {
         return this.service_.size();
      }

      public DescriptorProtos.ServiceDescriptorProto getService(int var1) {
         return (DescriptorProtos.ServiceDescriptorProto)this.service_.get(var1);
      }

      public DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int var1) {
         return (DescriptorProtos.ServiceDescriptorProtoOrBuilder)this.service_.get(var1);
      }

      public List getExtensionList() {
         return this.extension_;
      }

      public List getExtensionOrBuilderList() {
         return this.extension_;
      }

      public int getExtensionCount() {
         return this.extension_.size();
      }

      public DescriptorProtos.FieldDescriptorProto getExtension(int var1) {
         return (DescriptorProtos.FieldDescriptorProto)this.extension_.get(var1);
      }

      public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1) {
         return (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(var1);
      }

      public boolean hasOptions() {
         return (this.bitField0_ & 4) != 0;
      }

      public DescriptorProtos.FileOptions getOptions() {
         return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
      }

      public DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder() {
         return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
      }

      public boolean hasSourceCodeInfo() {
         return (this.bitField0_ & 8) != 0;
      }

      public DescriptorProtos.SourceCodeInfo getSourceCodeInfo() {
         return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
      }

      public DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() {
         return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
      }

      public boolean hasSyntax() {
         return (this.bitField0_ & 16) != 0;
      }

      public String getSyntax() {
         Object var1 = this.syntax_;
         if (var1 instanceof String) {
            return (String)var1;
         } else {
            ByteString var2 = (ByteString)var1;
            String var3 = var2.toStringUtf8();
            if (var2.isValidUtf8()) {
               this.syntax_ = var3;
            }

            return var3;
         }
      }

      public ByteString getSyntaxBytes() {
         Object var1 = this.syntax_;
         if (var1 instanceof String) {
            ByteString var2 = ByteString.copyFromUtf8((String)var1);
            this.syntax_ = var2;
            return var2;
         } else {
            return (ByteString)var1;
         }
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            int var2;
            for(var2 = 0; var2 < this.getMessageTypeCount(); ++var2) {
               if (!this.getMessageType(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getEnumTypeCount(); ++var2) {
               if (!this.getEnumType(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getServiceCount(); ++var2) {
               if (!this.getService(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            for(var2 = 0; var2 < this.getExtensionCount(); ++var2) {
               if (!this.getExtension(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               this.memoizedIsInitialized = 0;
               return false;
            } else {
               this.memoizedIsInitialized = 1;
               return true;
            }
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         if ((this.bitField0_ & 1) != 0) {
            GeneratedMessageV3.writeString(var1, 1, this.name_);
         }

         if ((this.bitField0_ & 2) != 0) {
            GeneratedMessageV3.writeString(var1, 2, this.package_);
         }

         int var2;
         for(var2 = 0; var2 < this.dependency_.size(); ++var2) {
            GeneratedMessageV3.writeString(var1, 3, this.dependency_.getRaw(var2));
         }

         for(var2 = 0; var2 < this.messageType_.size(); ++var2) {
            var1.writeMessage(4, (MessageLite)this.messageType_.get(var2));
         }

         for(var2 = 0; var2 < this.enumType_.size(); ++var2) {
            var1.writeMessage(5, (MessageLite)this.enumType_.get(var2));
         }

         for(var2 = 0; var2 < this.service_.size(); ++var2) {
            var1.writeMessage(6, (MessageLite)this.service_.get(var2));
         }

         for(var2 = 0; var2 < this.extension_.size(); ++var2) {
            var1.writeMessage(7, (MessageLite)this.extension_.get(var2));
         }

         if ((this.bitField0_ & 4) != 0) {
            var1.writeMessage(8, this.getOptions());
         }

         if ((this.bitField0_ & 8) != 0) {
            var1.writeMessage(9, this.getSourceCodeInfo());
         }

         for(var2 = 0; var2 < this.publicDependency_.size(); ++var2) {
            var1.writeInt32(10, this.publicDependency_.getInt(var2));
         }

         for(var2 = 0; var2 < this.weakDependency_.size(); ++var2) {
            var1.writeInt32(11, this.weakDependency_.getInt(var2));
         }

         if ((this.bitField0_ & 16) != 0) {
            GeneratedMessageV3.writeString(var1, 12, this.syntax_);
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;
            if ((this.bitField0_ & 1) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(1, this.name_);
            }

            if ((this.bitField0_ & 2) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(2, this.package_);
            }

            int var2 = 0;

            int var3;
            for(var3 = 0; var3 < this.dependency_.size(); ++var3) {
               var2 += computeStringSizeNoTag(this.dependency_.getRaw(var3));
            }

            var1 += var2;
            var1 += 1 * this.getDependencyList().size();

            for(var2 = 0; var2 < this.messageType_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(4, (MessageLite)this.messageType_.get(var2));
            }

            for(var2 = 0; var2 < this.enumType_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(5, (MessageLite)this.enumType_.get(var2));
            }

            for(var2 = 0; var2 < this.service_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(6, (MessageLite)this.service_.get(var2));
            }

            for(var2 = 0; var2 < this.extension_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(7, (MessageLite)this.extension_.get(var2));
            }

            if ((this.bitField0_ & 4) != 0) {
               var1 += CodedOutputStream.computeMessageSize(8, this.getOptions());
            }

            if ((this.bitField0_ & 8) != 0) {
               var1 += CodedOutputStream.computeMessageSize(9, this.getSourceCodeInfo());
            }

            var2 = 0;

            for(var3 = 0; var3 < this.publicDependency_.size(); ++var3) {
               var2 += CodedOutputStream.computeInt32SizeNoTag(this.publicDependency_.getInt(var3));
            }

            var1 += var2;
            var1 += 1 * this.getPublicDependencyList().size();
            var2 = 0;

            for(var3 = 0; var3 < this.weakDependency_.size(); ++var3) {
               var2 += CodedOutputStream.computeInt32SizeNoTag(this.weakDependency_.getInt(var3));
            }

            var1 += var2;
            var1 += 1 * this.getWeakDependencyList().size();
            if ((this.bitField0_ & 16) != 0) {
               var1 += GeneratedMessageV3.computeStringSize(12, this.syntax_);
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.FileDescriptorProto)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.FileDescriptorProto var2 = (DescriptorProtos.FileDescriptorProto)var1;
            if (this.hasName() != var2.hasName()) {
               return false;
            } else if (this.hasName() && !this.getName().equals(var2.getName())) {
               return false;
            } else if (this.hasPackage() != var2.hasPackage()) {
               return false;
            } else if (this.hasPackage() && !this.getPackage().equals(var2.getPackage())) {
               return false;
            } else if (!this.getDependencyList().equals(var2.getDependencyList())) {
               return false;
            } else if (!this.getPublicDependencyList().equals(var2.getPublicDependencyList())) {
               return false;
            } else if (!this.getWeakDependencyList().equals(var2.getWeakDependencyList())) {
               return false;
            } else if (!this.getMessageTypeList().equals(var2.getMessageTypeList())) {
               return false;
            } else if (!this.getEnumTypeList().equals(var2.getEnumTypeList())) {
               return false;
            } else if (!this.getServiceList().equals(var2.getServiceList())) {
               return false;
            } else if (!this.getExtensionList().equals(var2.getExtensionList())) {
               return false;
            } else if (this.hasOptions() != var2.hasOptions()) {
               return false;
            } else if (this.hasOptions() && !this.getOptions().equals(var2.getOptions())) {
               return false;
            } else if (this.hasSourceCodeInfo() != var2.hasSourceCodeInfo()) {
               return false;
            } else if (this.hasSourceCodeInfo() && !this.getSourceCodeInfo().equals(var2.getSourceCodeInfo())) {
               return false;
            } else if (this.hasSyntax() != var2.hasSyntax()) {
               return false;
            } else if (this.hasSyntax() && !this.getSyntax().equals(var2.getSyntax())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.hasName()) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getName().hashCode();
            }

            if (this.hasPackage()) {
               var2 = 37 * var2 + 2;
               var2 = 53 * var2 + this.getPackage().hashCode();
            }

            if (this.getDependencyCount() > 0) {
               var2 = 37 * var2 + 3;
               var2 = 53 * var2 + this.getDependencyList().hashCode();
            }

            if (this.getPublicDependencyCount() > 0) {
               var2 = 37 * var2 + 10;
               var2 = 53 * var2 + this.getPublicDependencyList().hashCode();
            }

            if (this.getWeakDependencyCount() > 0) {
               var2 = 37 * var2 + 11;
               var2 = 53 * var2 + this.getWeakDependencyList().hashCode();
            }

            if (this.getMessageTypeCount() > 0) {
               var2 = 37 * var2 + 4;
               var2 = 53 * var2 + this.getMessageTypeList().hashCode();
            }

            if (this.getEnumTypeCount() > 0) {
               var2 = 37 * var2 + 5;
               var2 = 53 * var2 + this.getEnumTypeList().hashCode();
            }

            if (this.getServiceCount() > 0) {
               var2 = 37 * var2 + 6;
               var2 = 53 * var2 + this.getServiceList().hashCode();
            }

            if (this.getExtensionCount() > 0) {
               var2 = 37 * var2 + 7;
               var2 = 53 * var2 + this.getExtensionList().hashCode();
            }

            if (this.hasOptions()) {
               var2 = 37 * var2 + 8;
               var2 = 53 * var2 + this.getOptions().hashCode();
            }

            if (this.hasSourceCodeInfo()) {
               var2 = 37 * var2 + 9;
               var2 = 53 * var2 + this.getSourceCodeInfo().hashCode();
            }

            if (this.hasSyntax()) {
               var2 = 37 * var2 + 12;
               var2 = 53 * var2 + this.getSyntax().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorProto)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorProto)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FileDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FileDescriptorProto parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FileDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileDescriptorProto parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileDescriptorProto)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.FileDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileDescriptorProto parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileDescriptorProto)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.FileDescriptorProto.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FileDescriptorProto.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FileDescriptorProto.Builder newBuilder(DescriptorProtos.FileDescriptorProto var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.FileDescriptorProto.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FileDescriptorProto.Builder() : (new DescriptorProtos.FileDescriptorProto.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.FileDescriptorProto.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.FileDescriptorProto.Builder var2 = new DescriptorProtos.FileDescriptorProto.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.FileDescriptorProto getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FileDescriptorProto getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      FileDescriptorProto(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      FileDescriptorProto(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.FileDescriptorProtoOrBuilder {
         private int bitField0_;
         private Object name_;
         private Object package_;
         private LazyStringList dependency_;
         private Internal.IntList publicDependency_;
         private Internal.IntList weakDependency_;
         private List messageType_;
         private RepeatedFieldBuilderV3 messageTypeBuilder_;
         private List enumType_;
         private RepeatedFieldBuilderV3 enumTypeBuilder_;
         private List service_;
         private RepeatedFieldBuilderV3 serviceBuilder_;
         private List extension_;
         private RepeatedFieldBuilderV3 extensionBuilder_;
         private DescriptorProtos.FileOptions options_;
         private SingleFieldBuilderV3 optionsBuilder_;
         private DescriptorProtos.SourceCodeInfo sourceCodeInfo_;
         private SingleFieldBuilderV3 sourceCodeInfoBuilder_;
         private Object syntax_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorProto.class, DescriptorProtos.FileDescriptorProto.Builder.class);
         }

         private Builder() {
            this.name_ = "";
            this.package_ = "";
            this.dependency_ = LazyStringArrayList.EMPTY;
            this.publicDependency_ = GeneratedMessageV3.emptyIntList();
            this.weakDependency_ = GeneratedMessageV3.emptyIntList();
            this.messageType_ = Collections.emptyList();
            this.enumType_ = Collections.emptyList();
            this.service_ = Collections.emptyList();
            this.extension_ = Collections.emptyList();
            this.syntax_ = "";
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.name_ = "";
            this.package_ = "";
            this.dependency_ = LazyStringArrayList.EMPTY;
            this.publicDependency_ = GeneratedMessageV3.emptyIntList();
            this.weakDependency_ = GeneratedMessageV3.emptyIntList();
            this.messageType_ = Collections.emptyList();
            this.enumType_ = Collections.emptyList();
            this.service_ = Collections.emptyList();
            this.extension_ = Collections.emptyList();
            this.syntax_ = "";
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getMessageTypeFieldBuilder();
               this.getEnumTypeFieldBuilder();
               this.getServiceFieldBuilder();
               this.getExtensionFieldBuilder();
               this.getOptionsFieldBuilder();
               this.getSourceCodeInfoFieldBuilder();
            }

         }

         public DescriptorProtos.FileDescriptorProto.Builder clear() {
            super.clear();
            this.name_ = "";
            this.bitField0_ &= -2;
            this.package_ = "";
            this.bitField0_ &= -3;
            this.dependency_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -5;
            this.publicDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -9;
            this.weakDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -17;
            if (this.messageTypeBuilder_ == null) {
               this.messageType_ = Collections.emptyList();
               this.bitField0_ &= -33;
            } else {
               this.messageTypeBuilder_.clear();
            }

            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -65;
            } else {
               this.enumTypeBuilder_.clear();
            }

            if (this.serviceBuilder_ == null) {
               this.service_ = Collections.emptyList();
               this.bitField0_ &= -129;
            } else {
               this.serviceBuilder_.clear();
            }

            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -257;
            } else {
               this.extensionBuilder_.clear();
            }

            if (this.optionsBuilder_ == null) {
               this.options_ = null;
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfo_ = null;
            } else {
               this.sourceCodeInfoBuilder_.clear();
            }

            this.bitField0_ &= -1025;
            this.syntax_ = "";
            this.bitField0_ &= -2049;
            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorProto_descriptor;
         }

         public DescriptorProtos.FileDescriptorProto getDefaultInstanceForType() {
            return DescriptorProtos.FileDescriptorProto.getDefaultInstance();
         }

         public DescriptorProtos.FileDescriptorProto build() {
            DescriptorProtos.FileDescriptorProto var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.FileDescriptorProto buildPartial() {
            DescriptorProtos.FileDescriptorProto var1 = new DescriptorProtos.FileDescriptorProto(this);
            int var2 = this.bitField0_;
            int var3 = 0;
            if ((var2 & 1) != 0) {
               var3 |= 1;
            }

            var1.name_ = this.name_;
            if ((var2 & 2) != 0) {
               var3 |= 2;
            }

            var1.package_ = this.package_;
            if ((this.bitField0_ & 4) != 0) {
               this.dependency_ = this.dependency_.getUnmodifiableView();
               this.bitField0_ &= -5;
            }

            var1.dependency_ = this.dependency_;
            if ((this.bitField0_ & 8) != 0) {
               this.publicDependency_.makeImmutable();
               this.bitField0_ &= -9;
            }

            var1.publicDependency_ = this.publicDependency_;
            if ((this.bitField0_ & 16) != 0) {
               this.weakDependency_.makeImmutable();
               this.bitField0_ &= -17;
            }

            var1.weakDependency_ = this.weakDependency_;
            if (this.messageTypeBuilder_ == null) {
               if ((this.bitField0_ & 32) != 0) {
                  this.messageType_ = Collections.unmodifiableList(this.messageType_);
                  this.bitField0_ &= -33;
               }

               var1.messageType_ = this.messageType_;
            } else {
               var1.messageType_ = this.messageTypeBuilder_.build();
            }

            if (this.enumTypeBuilder_ == null) {
               if ((this.bitField0_ & 64) != 0) {
                  this.enumType_ = Collections.unmodifiableList(this.enumType_);
                  this.bitField0_ &= -65;
               }

               var1.enumType_ = this.enumType_;
            } else {
               var1.enumType_ = this.enumTypeBuilder_.build();
            }

            if (this.serviceBuilder_ == null) {
               if ((this.bitField0_ & 128) != 0) {
                  this.service_ = Collections.unmodifiableList(this.service_);
                  this.bitField0_ &= -129;
               }

               var1.service_ = this.service_;
            } else {
               var1.service_ = this.serviceBuilder_.build();
            }

            if (this.extensionBuilder_ == null) {
               if ((this.bitField0_ & 256) != 0) {
                  this.extension_ = Collections.unmodifiableList(this.extension_);
                  this.bitField0_ &= -257;
               }

               var1.extension_ = this.extension_;
            } else {
               var1.extension_ = this.extensionBuilder_.build();
            }

            if ((var2 & 512) != 0) {
               if (this.optionsBuilder_ == null) {
                  var1.options_ = this.options_;
               } else {
                  var1.options_ = (DescriptorProtos.FileOptions)this.optionsBuilder_.build();
               }

               var3 |= 4;
            }

            if ((var2 & 1024) != 0) {
               if (this.sourceCodeInfoBuilder_ == null) {
                  var1.sourceCodeInfo_ = this.sourceCodeInfo_;
               } else {
                  var1.sourceCodeInfo_ = (DescriptorProtos.SourceCodeInfo)this.sourceCodeInfoBuilder_.build();
               }

               var3 |= 8;
            }

            if ((var2 & 2048) != 0) {
               var3 |= 16;
            }

            var1.syntax_ = this.syntax_;
            var1.bitField0_ = var3;
            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clone() {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.clone();
         }

         public DescriptorProtos.FileDescriptorProto.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.clearField(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.FileDescriptorProto.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.FileDescriptorProto) {
               return this.mergeFrom((DescriptorProtos.FileDescriptorProto)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeFrom(DescriptorProtos.FileDescriptorProto var1) {
            if (var1 == DescriptorProtos.FileDescriptorProto.getDefaultInstance()) {
               return this;
            } else {
               if (var1.hasName()) {
                  this.bitField0_ |= 1;
                  this.name_ = var1.name_;
                  this.onChanged();
               }

               if (var1.hasPackage()) {
                  this.bitField0_ |= 2;
                  this.package_ = var1.package_;
                  this.onChanged();
               }

               if (!var1.dependency_.isEmpty()) {
                  if (this.dependency_.isEmpty()) {
                     this.dependency_ = var1.dependency_;
                     this.bitField0_ &= -5;
                  } else {
                     this.ensureDependencyIsMutable();
                     this.dependency_.addAll(var1.dependency_);
                  }

                  this.onChanged();
               }

               if (!var1.publicDependency_.isEmpty()) {
                  if (this.publicDependency_.isEmpty()) {
                     this.publicDependency_ = var1.publicDependency_;
                     this.bitField0_ &= -9;
                  } else {
                     this.ensurePublicDependencyIsMutable();
                     this.publicDependency_.addAll(var1.publicDependency_);
                  }

                  this.onChanged();
               }

               if (!var1.weakDependency_.isEmpty()) {
                  if (this.weakDependency_.isEmpty()) {
                     this.weakDependency_ = var1.weakDependency_;
                     this.bitField0_ &= -17;
                  } else {
                     this.ensureWeakDependencyIsMutable();
                     this.weakDependency_.addAll(var1.weakDependency_);
                  }

                  this.onChanged();
               }

               if (this.messageTypeBuilder_ == null) {
                  if (!var1.messageType_.isEmpty()) {
                     if (this.messageType_.isEmpty()) {
                        this.messageType_ = var1.messageType_;
                        this.bitField0_ &= -33;
                     } else {
                        this.ensureMessageTypeIsMutable();
                        this.messageType_.addAll(var1.messageType_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.messageType_.isEmpty()) {
                  if (this.messageTypeBuilder_.isEmpty()) {
                     this.messageTypeBuilder_.dispose();
                     this.messageTypeBuilder_ = null;
                     this.messageType_ = var1.messageType_;
                     this.bitField0_ &= -33;
                     this.messageTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getMessageTypeFieldBuilder() : null;
                  } else {
                     this.messageTypeBuilder_.addAllMessages(var1.messageType_);
                  }
               }

               if (this.enumTypeBuilder_ == null) {
                  if (!var1.enumType_.isEmpty()) {
                     if (this.enumType_.isEmpty()) {
                        this.enumType_ = var1.enumType_;
                        this.bitField0_ &= -65;
                     } else {
                        this.ensureEnumTypeIsMutable();
                        this.enumType_.addAll(var1.enumType_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.enumType_.isEmpty()) {
                  if (this.enumTypeBuilder_.isEmpty()) {
                     this.enumTypeBuilder_.dispose();
                     this.enumTypeBuilder_ = null;
                     this.enumType_ = var1.enumType_;
                     this.bitField0_ &= -65;
                     this.enumTypeBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getEnumTypeFieldBuilder() : null;
                  } else {
                     this.enumTypeBuilder_.addAllMessages(var1.enumType_);
                  }
               }

               if (this.serviceBuilder_ == null) {
                  if (!var1.service_.isEmpty()) {
                     if (this.service_.isEmpty()) {
                        this.service_ = var1.service_;
                        this.bitField0_ &= -129;
                     } else {
                        this.ensureServiceIsMutable();
                        this.service_.addAll(var1.service_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.service_.isEmpty()) {
                  if (this.serviceBuilder_.isEmpty()) {
                     this.serviceBuilder_.dispose();
                     this.serviceBuilder_ = null;
                     this.service_ = var1.service_;
                     this.bitField0_ &= -129;
                     this.serviceBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getServiceFieldBuilder() : null;
                  } else {
                     this.serviceBuilder_.addAllMessages(var1.service_);
                  }
               }

               if (this.extensionBuilder_ == null) {
                  if (!var1.extension_.isEmpty()) {
                     if (this.extension_.isEmpty()) {
                        this.extension_ = var1.extension_;
                        this.bitField0_ &= -257;
                     } else {
                        this.ensureExtensionIsMutable();
                        this.extension_.addAll(var1.extension_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.extension_.isEmpty()) {
                  if (this.extensionBuilder_.isEmpty()) {
                     this.extensionBuilder_.dispose();
                     this.extensionBuilder_ = null;
                     this.extension_ = var1.extension_;
                     this.bitField0_ &= -257;
                     this.extensionBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getExtensionFieldBuilder() : null;
                  } else {
                     this.extensionBuilder_.addAllMessages(var1.extension_);
                  }
               }

               if (var1.hasOptions()) {
                  this.mergeOptions(var1.getOptions());
               }

               if (var1.hasSourceCodeInfo()) {
                  this.mergeSourceCodeInfo(var1.getSourceCodeInfo());
               }

               if (var1.hasSyntax()) {
                  this.bitField0_ |= 2048;
                  this.syntax_ = var1.syntax_;
                  this.onChanged();
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            int var1;
            for(var1 = 0; var1 < this.getMessageTypeCount(); ++var1) {
               if (!this.getMessageType(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getEnumTypeCount(); ++var1) {
               if (!this.getEnumType(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getServiceCount(); ++var1) {
               if (!this.getService(var1).isInitialized()) {
                  return false;
               }
            }

            for(var1 = 0; var1 < this.getExtensionCount(); ++var1) {
               if (!this.getExtension(var1).isInitialized()) {
                  return false;
               }
            }

            if (this.hasOptions() && !this.getOptions().isInitialized()) {
               return false;
            } else {
               return true;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.FileDescriptorProto var3 = null;

            try {
               var3 = (DescriptorProtos.FileDescriptorProto)DescriptorProtos.FileDescriptorProto.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.FileDescriptorProto)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         public boolean hasName() {
            return (this.bitField0_ & 1) != 0;
         }

         public String getName() {
            Object var1 = this.name_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.name_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getNameBytes() {
            Object var1 = this.name_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.name_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setName(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearName() {
            this.bitField0_ &= -2;
            this.name_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getName();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setNameBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 1;
               this.name_ = var1;
               this.onChanged();
               return this;
            }
         }

         public boolean hasPackage() {
            return (this.bitField0_ & 2) != 0;
         }

         public String getPackage() {
            Object var1 = this.package_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.package_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getPackageBytes() {
            Object var1 = this.package_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.package_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setPackage(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.package_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearPackage() {
            this.bitField0_ &= -3;
            this.package_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getPackage();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setPackageBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2;
               this.package_ = var1;
               this.onChanged();
               return this;
            }
         }

         private void ensureDependencyIsMutable() {
            if ((this.bitField0_ & 4) == 0) {
               this.dependency_ = new LazyStringArrayList(this.dependency_);
               this.bitField0_ |= 4;
            }

         }

         public ProtocolStringList getDependencyList() {
            return this.dependency_.getUnmodifiableView();
         }

         public int getDependencyCount() {
            return this.dependency_.size();
         }

         public String getDependency(int var1) {
            return (String)this.dependency_.get(var1);
         }

         public ByteString getDependencyBytes(int var1) {
            return this.dependency_.getByteString(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setDependency(int var1, String var2) {
            if (var2 == null) {
               throw new NullPointerException();
            } else {
               this.ensureDependencyIsMutable();
               this.dependency_.set(var1, (Object)var2);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder addDependency(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.ensureDependencyIsMutable();
               this.dependency_.add((Object)var1);
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllDependency(Iterable var1) {
            this.ensureDependencyIsMutable();
            AbstractMessageLite.Builder.addAll(var1, (List)this.dependency_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearDependency() {
            this.dependency_ = LazyStringArrayList.EMPTY;
            this.bitField0_ &= -5;
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addDependencyBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.ensureDependencyIsMutable();
               this.dependency_.add(var1);
               this.onChanged();
               return this;
            }
         }

         private void ensurePublicDependencyIsMutable() {
            if ((this.bitField0_ & 8) == 0) {
               this.publicDependency_ = GeneratedMessageV3.mutableCopy(this.publicDependency_);
               this.bitField0_ |= 8;
            }

         }

         public List getPublicDependencyList() {
            return (List)((this.bitField0_ & 8) != 0 ? Collections.unmodifiableList(this.publicDependency_) : this.publicDependency_);
         }

         public int getPublicDependencyCount() {
            return this.publicDependency_.size();
         }

         public int getPublicDependency(int var1) {
            return this.publicDependency_.getInt(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setPublicDependency(int var1, int var2) {
            this.ensurePublicDependencyIsMutable();
            this.publicDependency_.setInt(var1, var2);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addPublicDependency(int var1) {
            this.ensurePublicDependencyIsMutable();
            this.publicDependency_.addInt(var1);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllPublicDependency(Iterable var1) {
            this.ensurePublicDependencyIsMutable();
            AbstractMessageLite.Builder.addAll(var1, (List)this.publicDependency_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearPublicDependency() {
            this.publicDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -9;
            this.onChanged();
            return this;
         }

         private void ensureWeakDependencyIsMutable() {
            if ((this.bitField0_ & 16) == 0) {
               this.weakDependency_ = GeneratedMessageV3.mutableCopy(this.weakDependency_);
               this.bitField0_ |= 16;
            }

         }

         public List getWeakDependencyList() {
            return (List)((this.bitField0_ & 16) != 0 ? Collections.unmodifiableList(this.weakDependency_) : this.weakDependency_);
         }

         public int getWeakDependencyCount() {
            return this.weakDependency_.size();
         }

         public int getWeakDependency(int var1) {
            return this.weakDependency_.getInt(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setWeakDependency(int var1, int var2) {
            this.ensureWeakDependencyIsMutable();
            this.weakDependency_.setInt(var1, var2);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addWeakDependency(int var1) {
            this.ensureWeakDependencyIsMutable();
            this.weakDependency_.addInt(var1);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllWeakDependency(Iterable var1) {
            this.ensureWeakDependencyIsMutable();
            AbstractMessageLite.Builder.addAll(var1, (List)this.weakDependency_);
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearWeakDependency() {
            this.weakDependency_ = GeneratedMessageV3.emptyIntList();
            this.bitField0_ &= -17;
            this.onChanged();
            return this;
         }

         private void ensureMessageTypeIsMutable() {
            if ((this.bitField0_ & 32) == 0) {
               this.messageType_ = new ArrayList(this.messageType_);
               this.bitField0_ |= 32;
            }

         }

         public List getMessageTypeList() {
            return this.messageTypeBuilder_ == null ? Collections.unmodifiableList(this.messageType_) : this.messageTypeBuilder_.getMessageList();
         }

         public int getMessageTypeCount() {
            return this.messageTypeBuilder_ == null ? this.messageType_.size() : this.messageTypeBuilder_.getCount();
         }

         public DescriptorProtos.DescriptorProto getMessageType(int var1) {
            return this.messageTypeBuilder_ == null ? (DescriptorProtos.DescriptorProto)this.messageType_.get(var1) : (DescriptorProtos.DescriptorProto)this.messageTypeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setMessageType(int var1, DescriptorProtos.DescriptorProto var2) {
            if (this.messageTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureMessageTypeIsMutable();
               this.messageType_.set(var1, var2);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setMessageType(int var1, DescriptorProtos.DescriptorProto.Builder var2) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.messageTypeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(DescriptorProtos.DescriptorProto var1) {
            if (this.messageTypeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureMessageTypeIsMutable();
               this.messageType_.add(var1);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(int var1, DescriptorProtos.DescriptorProto var2) {
            if (this.messageTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureMessageTypeIsMutable();
               this.messageType_.add(var1, var2);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(DescriptorProtos.DescriptorProto.Builder var1) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.add(var1.build());
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addMessageType(int var1, DescriptorProtos.DescriptorProto.Builder var2) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllMessageType(Iterable var1) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.messageType_);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearMessageType() {
            if (this.messageTypeBuilder_ == null) {
               this.messageType_ = Collections.emptyList();
               this.bitField0_ &= -33;
               this.onChanged();
            } else {
               this.messageTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeMessageType(int var1) {
            if (this.messageTypeBuilder_ == null) {
               this.ensureMessageTypeIsMutable();
               this.messageType_.remove(var1);
               this.onChanged();
            } else {
               this.messageTypeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.DescriptorProto.Builder getMessageTypeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.Builder)this.getMessageTypeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int var1) {
            return this.messageTypeBuilder_ == null ? (DescriptorProtos.DescriptorProtoOrBuilder)this.messageType_.get(var1) : (DescriptorProtos.DescriptorProtoOrBuilder)this.messageTypeBuilder_.getMessageOrBuilder(var1);
         }

         public List getMessageTypeOrBuilderList() {
            return this.messageTypeBuilder_ != null ? this.messageTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.messageType_);
         }

         public DescriptorProtos.DescriptorProto.Builder addMessageTypeBuilder() {
            return (DescriptorProtos.DescriptorProto.Builder)this.getMessageTypeFieldBuilder().addBuilder(DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.DescriptorProto.Builder addMessageTypeBuilder(int var1) {
            return (DescriptorProtos.DescriptorProto.Builder)this.getMessageTypeFieldBuilder().addBuilder(var1, DescriptorProtos.DescriptorProto.getDefaultInstance());
         }

         public List getMessageTypeBuilderList() {
            return this.getMessageTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getMessageTypeFieldBuilder() {
            if (this.messageTypeBuilder_ == null) {
               this.messageTypeBuilder_ = new RepeatedFieldBuilderV3(this.messageType_, (this.bitField0_ & 32) != 0, this.getParentForChildren(), this.isClean());
               this.messageType_ = null;
            }

            return this.messageTypeBuilder_;
         }

         private void ensureEnumTypeIsMutable() {
            if ((this.bitField0_ & 64) == 0) {
               this.enumType_ = new ArrayList(this.enumType_);
               this.bitField0_ |= 64;
            }

         }

         public List getEnumTypeList() {
            return this.enumTypeBuilder_ == null ? Collections.unmodifiableList(this.enumType_) : this.enumTypeBuilder_.getMessageList();
         }

         public int getEnumTypeCount() {
            return this.enumTypeBuilder_ == null ? this.enumType_.size() : this.enumTypeBuilder_.getCount();
         }

         public DescriptorProtos.EnumDescriptorProto getEnumType(int var1) {
            return this.enumTypeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProto)this.enumType_.get(var1) : (DescriptorProtos.EnumDescriptorProto)this.enumTypeBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setEnumType(int var1, DescriptorProtos.EnumDescriptorProto var2) {
            if (this.enumTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.set(var1, var2);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setEnumType(int var1, DescriptorProtos.EnumDescriptorProto.Builder var2) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto var1) {
            if (this.enumTypeBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(int var1, DescriptorProtos.EnumDescriptorProto var2) {
            if (this.enumTypeBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1, var2);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(DescriptorProtos.EnumDescriptorProto.Builder var1) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addEnumType(int var1, DescriptorProtos.EnumDescriptorProto.Builder var2) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllEnumType(Iterable var1) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.enumType_);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearEnumType() {
            if (this.enumTypeBuilder_ == null) {
               this.enumType_ = Collections.emptyList();
               this.bitField0_ &= -65;
               this.onChanged();
            } else {
               this.enumTypeBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeEnumType(int var1) {
            if (this.enumTypeBuilder_ == null) {
               this.ensureEnumTypeIsMutable();
               this.enumType_.remove(var1);
               this.onChanged();
            } else {
               this.enumTypeBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.EnumDescriptorProto.Builder getEnumTypeBuilder(int var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)this.getEnumTypeFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1) {
            return this.enumTypeBuilder_ == null ? (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumType_.get(var1) : (DescriptorProtos.EnumDescriptorProtoOrBuilder)this.enumTypeBuilder_.getMessageOrBuilder(var1);
         }

         public List getEnumTypeOrBuilderList() {
            return this.enumTypeBuilder_ != null ? this.enumTypeBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.enumType_);
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder() {
            return (DescriptorProtos.EnumDescriptorProto.Builder)this.getEnumTypeFieldBuilder().addBuilder(DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.EnumDescriptorProto.Builder addEnumTypeBuilder(int var1) {
            return (DescriptorProtos.EnumDescriptorProto.Builder)this.getEnumTypeFieldBuilder().addBuilder(var1, DescriptorProtos.EnumDescriptorProto.getDefaultInstance());
         }

         public List getEnumTypeBuilderList() {
            return this.getEnumTypeFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getEnumTypeFieldBuilder() {
            if (this.enumTypeBuilder_ == null) {
               this.enumTypeBuilder_ = new RepeatedFieldBuilderV3(this.enumType_, (this.bitField0_ & 64) != 0, this.getParentForChildren(), this.isClean());
               this.enumType_ = null;
            }

            return this.enumTypeBuilder_;
         }

         private void ensureServiceIsMutable() {
            if ((this.bitField0_ & 128) == 0) {
               this.service_ = new ArrayList(this.service_);
               this.bitField0_ |= 128;
            }

         }

         public List getServiceList() {
            return this.serviceBuilder_ == null ? Collections.unmodifiableList(this.service_) : this.serviceBuilder_.getMessageList();
         }

         public int getServiceCount() {
            return this.serviceBuilder_ == null ? this.service_.size() : this.serviceBuilder_.getCount();
         }

         public DescriptorProtos.ServiceDescriptorProto getService(int var1) {
            return this.serviceBuilder_ == null ? (DescriptorProtos.ServiceDescriptorProto)this.service_.get(var1) : (DescriptorProtos.ServiceDescriptorProto)this.serviceBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setService(int var1, DescriptorProtos.ServiceDescriptorProto var2) {
            if (this.serviceBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureServiceIsMutable();
               this.service_.set(var1, var2);
               this.onChanged();
            } else {
               this.serviceBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setService(int var1, DescriptorProtos.ServiceDescriptorProto.Builder var2) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.serviceBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(DescriptorProtos.ServiceDescriptorProto var1) {
            if (this.serviceBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureServiceIsMutable();
               this.service_.add(var1);
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(int var1, DescriptorProtos.ServiceDescriptorProto var2) {
            if (this.serviceBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureServiceIsMutable();
               this.service_.add(var1, var2);
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(DescriptorProtos.ServiceDescriptorProto.Builder var1) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.add(var1.build());
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addService(int var1, DescriptorProtos.ServiceDescriptorProto.Builder var2) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.serviceBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllService(Iterable var1) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.service_);
               this.onChanged();
            } else {
               this.serviceBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearService() {
            if (this.serviceBuilder_ == null) {
               this.service_ = Collections.emptyList();
               this.bitField0_ &= -129;
               this.onChanged();
            } else {
               this.serviceBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeService(int var1) {
            if (this.serviceBuilder_ == null) {
               this.ensureServiceIsMutable();
               this.service_.remove(var1);
               this.onChanged();
            } else {
               this.serviceBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder getServiceBuilder(int var1) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)this.getServiceFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int var1) {
            return this.serviceBuilder_ == null ? (DescriptorProtos.ServiceDescriptorProtoOrBuilder)this.service_.get(var1) : (DescriptorProtos.ServiceDescriptorProtoOrBuilder)this.serviceBuilder_.getMessageOrBuilder(var1);
         }

         public List getServiceOrBuilderList() {
            return this.serviceBuilder_ != null ? this.serviceBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.service_);
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addServiceBuilder() {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)this.getServiceFieldBuilder().addBuilder(DescriptorProtos.ServiceDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.ServiceDescriptorProto.Builder addServiceBuilder(int var1) {
            return (DescriptorProtos.ServiceDescriptorProto.Builder)this.getServiceFieldBuilder().addBuilder(var1, DescriptorProtos.ServiceDescriptorProto.getDefaultInstance());
         }

         public List getServiceBuilderList() {
            return this.getServiceFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getServiceFieldBuilder() {
            if (this.serviceBuilder_ == null) {
               this.serviceBuilder_ = new RepeatedFieldBuilderV3(this.service_, (this.bitField0_ & 128) != 0, this.getParentForChildren(), this.isClean());
               this.service_ = null;
            }

            return this.serviceBuilder_;
         }

         private void ensureExtensionIsMutable() {
            if ((this.bitField0_ & 256) == 0) {
               this.extension_ = new ArrayList(this.extension_);
               this.bitField0_ |= 256;
            }

         }

         public List getExtensionList() {
            return this.extensionBuilder_ == null ? Collections.unmodifiableList(this.extension_) : this.extensionBuilder_.getMessageList();
         }

         public int getExtensionCount() {
            return this.extensionBuilder_ == null ? this.extension_.size() : this.extensionBuilder_.getCount();
         }

         public DescriptorProtos.FieldDescriptorProto getExtension(int var1) {
            return this.extensionBuilder_ == null ? (DescriptorProtos.FieldDescriptorProto)this.extension_.get(var1) : (DescriptorProtos.FieldDescriptorProto)this.extensionBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FileDescriptorProto.Builder setExtension(int var1, DescriptorProtos.FieldDescriptorProto var2) {
            if (this.extensionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.set(var1, var2);
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setExtension(int var1, DescriptorProtos.FieldDescriptorProto.Builder var2) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto var1) {
            if (this.extensionBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(var1);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(int var1, DescriptorProtos.FieldDescriptorProto var2) {
            if (this.extensionBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureExtensionIsMutable();
               this.extension_.add(var1, var2);
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(DescriptorProtos.FieldDescriptorProto.Builder var1) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(var1.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addExtension(int var1, DescriptorProtos.FieldDescriptorProto.Builder var2) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.extensionBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder addAllExtension(Iterable var1) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.extension_);
               this.onChanged();
            } else {
               this.extensionBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearExtension() {
            if (this.extensionBuilder_ == null) {
               this.extension_ = Collections.emptyList();
               this.bitField0_ &= -257;
               this.onChanged();
            } else {
               this.extensionBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder removeExtension(int var1) {
            if (this.extensionBuilder_ == null) {
               this.ensureExtensionIsMutable();
               this.extension_.remove(var1);
               this.onChanged();
            } else {
               this.extensionBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.FieldDescriptorProto.Builder getExtensionBuilder(int var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getExtensionFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1) {
            return this.extensionBuilder_ == null ? (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extension_.get(var1) : (DescriptorProtos.FieldDescriptorProtoOrBuilder)this.extensionBuilder_.getMessageOrBuilder(var1);
         }

         public List getExtensionOrBuilderList() {
            return this.extensionBuilder_ != null ? this.extensionBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.extension_);
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder() {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getExtensionFieldBuilder().addBuilder(DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FieldDescriptorProto.Builder addExtensionBuilder(int var1) {
            return (DescriptorProtos.FieldDescriptorProto.Builder)this.getExtensionFieldBuilder().addBuilder(var1, DescriptorProtos.FieldDescriptorProto.getDefaultInstance());
         }

         public List getExtensionBuilderList() {
            return this.getExtensionFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getExtensionFieldBuilder() {
            if (this.extensionBuilder_ == null) {
               this.extensionBuilder_ = new RepeatedFieldBuilderV3(this.extension_, (this.bitField0_ & 256) != 0, this.getParentForChildren(), this.isClean());
               this.extension_ = null;
            }

            return this.extensionBuilder_;
         }

         public boolean hasOptions() {
            return (this.bitField0_ & 512) != 0;
         }

         public DescriptorProtos.FileOptions getOptions() {
            if (this.optionsBuilder_ == null) {
               return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
            } else {
               return (DescriptorProtos.FileOptions)this.optionsBuilder_.getMessage();
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setOptions(DescriptorProtos.FileOptions var1) {
            if (this.optionsBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.options_ = var1;
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setOptions(DescriptorProtos.FileOptions.Builder var1) {
            if (this.optionsBuilder_ == null) {
               this.options_ = var1.build();
               this.onChanged();
            } else {
               this.optionsBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeOptions(DescriptorProtos.FileOptions var1) {
            if (this.optionsBuilder_ == null) {
               if ((this.bitField0_ & 512) != 0 && this.options_ != null && this.options_ != DescriptorProtos.FileOptions.getDefaultInstance()) {
                  this.options_ = DescriptorProtos.FileOptions.newBuilder(this.options_).mergeFrom(var1).buildPartial();
               } else {
                  this.options_ = var1;
               }

               this.onChanged();
            } else {
               this.optionsBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 512;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearOptions() {
            if (this.optionsBuilder_ == null) {
               this.options_ = null;
               this.onChanged();
            } else {
               this.optionsBuilder_.clear();
            }

            this.bitField0_ &= -513;
            return this;
         }

         public DescriptorProtos.FileOptions.Builder getOptionsBuilder() {
            this.bitField0_ |= 512;
            this.onChanged();
            return (DescriptorProtos.FileOptions.Builder)this.getOptionsFieldBuilder().getBuilder();
         }

         public DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder() {
            if (this.optionsBuilder_ != null) {
               return (DescriptorProtos.FileOptionsOrBuilder)this.optionsBuilder_.getMessageOrBuilder();
            } else {
               return this.options_ == null ? DescriptorProtos.FileOptions.getDefaultInstance() : this.options_;
            }
         }

         private SingleFieldBuilderV3 getOptionsFieldBuilder() {
            if (this.optionsBuilder_ == null) {
               this.optionsBuilder_ = new SingleFieldBuilderV3(this.getOptions(), this.getParentForChildren(), this.isClean());
               this.options_ = null;
            }

            return this.optionsBuilder_;
         }

         public boolean hasSourceCodeInfo() {
            return (this.bitField0_ & 1024) != 0;
         }

         public DescriptorProtos.SourceCodeInfo getSourceCodeInfo() {
            if (this.sourceCodeInfoBuilder_ == null) {
               return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
            } else {
               return (DescriptorProtos.SourceCodeInfo)this.sourceCodeInfoBuilder_.getMessage();
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSourceCodeInfo(DescriptorProtos.SourceCodeInfo var1) {
            if (this.sourceCodeInfoBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.sourceCodeInfo_ = var1;
               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.setMessage(var1);
            }

            this.bitField0_ |= 1024;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSourceCodeInfo(DescriptorProtos.SourceCodeInfo.Builder var1) {
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfo_ = var1.build();
               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.setMessage(var1.build());
            }

            this.bitField0_ |= 1024;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder mergeSourceCodeInfo(DescriptorProtos.SourceCodeInfo var1) {
            if (this.sourceCodeInfoBuilder_ == null) {
               if ((this.bitField0_ & 1024) != 0 && this.sourceCodeInfo_ != null && this.sourceCodeInfo_ != DescriptorProtos.SourceCodeInfo.getDefaultInstance()) {
                  this.sourceCodeInfo_ = DescriptorProtos.SourceCodeInfo.newBuilder(this.sourceCodeInfo_).mergeFrom(var1).buildPartial();
               } else {
                  this.sourceCodeInfo_ = var1;
               }

               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.mergeFrom(var1);
            }

            this.bitField0_ |= 1024;
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearSourceCodeInfo() {
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfo_ = null;
               this.onChanged();
            } else {
               this.sourceCodeInfoBuilder_.clear();
            }

            this.bitField0_ &= -1025;
            return this;
         }

         public DescriptorProtos.SourceCodeInfo.Builder getSourceCodeInfoBuilder() {
            this.bitField0_ |= 1024;
            this.onChanged();
            return (DescriptorProtos.SourceCodeInfo.Builder)this.getSourceCodeInfoFieldBuilder().getBuilder();
         }

         public DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder() {
            if (this.sourceCodeInfoBuilder_ != null) {
               return (DescriptorProtos.SourceCodeInfoOrBuilder)this.sourceCodeInfoBuilder_.getMessageOrBuilder();
            } else {
               return this.sourceCodeInfo_ == null ? DescriptorProtos.SourceCodeInfo.getDefaultInstance() : this.sourceCodeInfo_;
            }
         }

         private SingleFieldBuilderV3 getSourceCodeInfoFieldBuilder() {
            if (this.sourceCodeInfoBuilder_ == null) {
               this.sourceCodeInfoBuilder_ = new SingleFieldBuilderV3(this.getSourceCodeInfo(), this.getParentForChildren(), this.isClean());
               this.sourceCodeInfo_ = null;
            }

            return this.sourceCodeInfoBuilder_;
         }

         public boolean hasSyntax() {
            return (this.bitField0_ & 2048) != 0;
         }

         public String getSyntax() {
            Object var1 = this.syntax_;
            if (!(var1 instanceof String)) {
               ByteString var2 = (ByteString)var1;
               String var3 = var2.toStringUtf8();
               if (var2.isValidUtf8()) {
                  this.syntax_ = var3;
               }

               return var3;
            } else {
               return (String)var1;
            }
         }

         public ByteString getSyntaxBytes() {
            Object var1 = this.syntax_;
            if (var1 instanceof String) {
               ByteString var2 = ByteString.copyFromUtf8((String)var1);
               this.syntax_ = var2;
               return var2;
            } else {
               return (ByteString)var1;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSyntax(String var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.syntax_ = var1;
               this.onChanged();
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorProto.Builder clearSyntax() {
            this.bitField0_ &= -2049;
            this.syntax_ = DescriptorProtos.FileDescriptorProto.getDefaultInstance().getSyntax();
            this.onChanged();
            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder setSyntaxBytes(ByteString var1) {
            if (var1 == null) {
               throw new NullPointerException();
            } else {
               this.bitField0_ |= 2048;
               this.syntax_ = var1;
               this.onChanged();
               return this;
            }
         }

         public final DescriptorProtos.FileDescriptorProto.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.FileDescriptorProto.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FileDescriptorProto.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface FileDescriptorProtoOrBuilder extends MessageOrBuilder {
      boolean hasName();

      String getName();

      ByteString getNameBytes();

      boolean hasPackage();

      String getPackage();

      ByteString getPackageBytes();

      List getDependencyList();

      int getDependencyCount();

      String getDependency(int var1);

      ByteString getDependencyBytes(int var1);

      List getPublicDependencyList();

      int getPublicDependencyCount();

      int getPublicDependency(int var1);

      List getWeakDependencyList();

      int getWeakDependencyCount();

      int getWeakDependency(int var1);

      List getMessageTypeList();

      DescriptorProtos.DescriptorProto getMessageType(int var1);

      int getMessageTypeCount();

      List getMessageTypeOrBuilderList();

      DescriptorProtos.DescriptorProtoOrBuilder getMessageTypeOrBuilder(int var1);

      List getEnumTypeList();

      DescriptorProtos.EnumDescriptorProto getEnumType(int var1);

      int getEnumTypeCount();

      List getEnumTypeOrBuilderList();

      DescriptorProtos.EnumDescriptorProtoOrBuilder getEnumTypeOrBuilder(int var1);

      List getServiceList();

      DescriptorProtos.ServiceDescriptorProto getService(int var1);

      int getServiceCount();

      List getServiceOrBuilderList();

      DescriptorProtos.ServiceDescriptorProtoOrBuilder getServiceOrBuilder(int var1);

      List getExtensionList();

      DescriptorProtos.FieldDescriptorProto getExtension(int var1);

      int getExtensionCount();

      List getExtensionOrBuilderList();

      DescriptorProtos.FieldDescriptorProtoOrBuilder getExtensionOrBuilder(int var1);

      boolean hasOptions();

      DescriptorProtos.FileOptions getOptions();

      DescriptorProtos.FileOptionsOrBuilder getOptionsOrBuilder();

      boolean hasSourceCodeInfo();

      DescriptorProtos.SourceCodeInfo getSourceCodeInfo();

      DescriptorProtos.SourceCodeInfoOrBuilder getSourceCodeInfoOrBuilder();

      boolean hasSyntax();

      String getSyntax();

      ByteString getSyntaxBytes();
   }

   public static final class FileDescriptorSet extends GeneratedMessageV3 implements DescriptorProtos.FileDescriptorSetOrBuilder {
      private static final long serialVersionUID = 0L;
      public static final int FILE_FIELD_NUMBER = 1;
      private List file_;
      private byte memoizedIsInitialized;
      private static final DescriptorProtos.FileDescriptorSet DEFAULT_INSTANCE = new DescriptorProtos.FileDescriptorSet();
      /** @deprecated */
      @Deprecated
      public static final Parser PARSER = new AbstractParser() {
         public DescriptorProtos.FileDescriptorSet parsePartialFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
            return new DescriptorProtos.FileDescriptorSet(var1, var2);
         }
      };

      private FileDescriptorSet(GeneratedMessageV3.Builder var1) {
         super(var1);
         this.memoizedIsInitialized = -1;
      }

      private FileDescriptorSet() {
         this.memoizedIsInitialized = -1;
         this.file_ = Collections.emptyList();
      }

      protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter var1) {
         return new DescriptorProtos.FileDescriptorSet();
      }

      public final UnknownFieldSet getUnknownFields() {
         return this.unknownFields;
      }

      private FileDescriptorSet(CodedInputStream var1, ExtensionRegistryLite var2) throws InvalidProtocolBufferException {
         this();
         if (var2 == null) {
            throw new NullPointerException();
         } else {
            boolean var3 = false;
            UnknownFieldSet.Builder var4 = UnknownFieldSet.newBuilder();

            try {
               boolean var5 = false;

               while(!var5) {
                  int var6 = var1.readTag();
                  switch(var6) {
                  case 0:
                     var5 = true;
                     break;
                  case 10:
                     if (!(var3 & true)) {
                        this.file_ = new ArrayList();
                        var3 |= true;
                     }

                     this.file_.add(var1.readMessage(DescriptorProtos.FileDescriptorProto.PARSER, var2));
                     break;
                  default:
                     if (!this.parseUnknownField(var1, var4, var2, var6)) {
                        var5 = true;
                     }
                  }
               }
            } catch (InvalidProtocolBufferException var11) {
               throw var11.setUnfinishedMessage(this);
            } catch (IOException var12) {
               throw (new InvalidProtocolBufferException(var12)).setUnfinishedMessage(this);
            } finally {
               if (var3 & true) {
                  this.file_ = Collections.unmodifiableList(this.file_);
               }

               this.unknownFields = var4.build();
               this.makeExtensionsImmutable();
            }

         }
      }

      public static final Descriptors.Descriptor getDescriptor() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
      }

      protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
         return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorSet.class, DescriptorProtos.FileDescriptorSet.Builder.class);
      }

      public List getFileList() {
         return this.file_;
      }

      public List getFileOrBuilderList() {
         return this.file_;
      }

      public int getFileCount() {
         return this.file_.size();
      }

      public DescriptorProtos.FileDescriptorProto getFile(int var1) {
         return (DescriptorProtos.FileDescriptorProto)this.file_.get(var1);
      }

      public DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int var1) {
         return (DescriptorProtos.FileDescriptorProtoOrBuilder)this.file_.get(var1);
      }

      public final boolean isInitialized() {
         byte var1 = this.memoizedIsInitialized;
         if (var1 == 1) {
            return true;
         } else if (var1 == 0) {
            return false;
         } else {
            for(int var2 = 0; var2 < this.getFileCount(); ++var2) {
               if (!this.getFile(var2).isInitialized()) {
                  this.memoizedIsInitialized = 0;
                  return false;
               }
            }

            this.memoizedIsInitialized = 1;
            return true;
         }
      }

      public void writeTo(CodedOutputStream var1) throws IOException {
         for(int var2 = 0; var2 < this.file_.size(); ++var2) {
            var1.writeMessage(1, (MessageLite)this.file_.get(var2));
         }

         this.unknownFields.writeTo(var1);
      }

      public int getSerializedSize() {
         int var1 = this.memoizedSize;
         if (var1 != -1) {
            return var1;
         } else {
            var1 = 0;

            for(int var2 = 0; var2 < this.file_.size(); ++var2) {
               var1 += CodedOutputStream.computeMessageSize(1, (MessageLite)this.file_.get(var2));
            }

            var1 += this.unknownFields.getSerializedSize();
            this.memoizedSize = var1;
            return var1;
         }
      }

      public boolean equals(Object var1) {
         if (var1 == this) {
            return true;
         } else if (!(var1 instanceof DescriptorProtos.FileDescriptorSet)) {
            return super.equals(var1);
         } else {
            DescriptorProtos.FileDescriptorSet var2 = (DescriptorProtos.FileDescriptorSet)var1;
            if (!this.getFileList().equals(var2.getFileList())) {
               return false;
            } else {
               return this.unknownFields.equals(var2.unknownFields);
            }
         }
      }

      public int hashCode() {
         if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
         } else {
            byte var1 = 41;
            int var2 = 19 * var1 + getDescriptor().hashCode();
            if (this.getFileCount() > 0) {
               var2 = 37 * var2 + 1;
               var2 = 53 * var2 + this.getFileList().hashCode();
            }

            var2 = 29 * var2 + this.unknownFields.hashCode();
            this.memoizedHashCode = var2;
            return var2;
         }
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteBuffer var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorSet)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteBuffer var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorSet)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteString var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorSet)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(ByteString var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorSet)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(byte[] var0) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorSet)PARSER.parseFrom(var0);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(byte[] var0, ExtensionRegistryLite var1) throws InvalidProtocolBufferException {
         return (DescriptorProtos.FileDescriptorSet)PARSER.parseFrom(var0, var1);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FileDescriptorSet)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileDescriptorSet)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FileDescriptorSet parseDelimitedFrom(InputStream var0) throws IOException {
         return (DescriptorProtos.FileDescriptorSet)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileDescriptorSet parseDelimitedFrom(InputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileDescriptorSet)GeneratedMessageV3.parseDelimitedWithIOException(PARSER, var0, var1);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(CodedInputStream var0) throws IOException {
         return (DescriptorProtos.FileDescriptorSet)GeneratedMessageV3.parseWithIOException(PARSER, var0);
      }

      public static DescriptorProtos.FileDescriptorSet parseFrom(CodedInputStream var0, ExtensionRegistryLite var1) throws IOException {
         return (DescriptorProtos.FileDescriptorSet)GeneratedMessageV3.parseWithIOException(PARSER, var0, var1);
      }

      public DescriptorProtos.FileDescriptorSet.Builder newBuilderForType() {
         return newBuilder();
      }

      public static DescriptorProtos.FileDescriptorSet.Builder newBuilder() {
         return DEFAULT_INSTANCE.toBuilder();
      }

      public static DescriptorProtos.FileDescriptorSet.Builder newBuilder(DescriptorProtos.FileDescriptorSet var0) {
         return DEFAULT_INSTANCE.toBuilder().mergeFrom(var0);
      }

      public DescriptorProtos.FileDescriptorSet.Builder toBuilder() {
         return this == DEFAULT_INSTANCE ? new DescriptorProtos.FileDescriptorSet.Builder() : (new DescriptorProtos.FileDescriptorSet.Builder()).mergeFrom(this);
      }

      protected DescriptorProtos.FileDescriptorSet.Builder newBuilderForType(GeneratedMessageV3.BuilderParent var1) {
         DescriptorProtos.FileDescriptorSet.Builder var2 = new DescriptorProtos.FileDescriptorSet.Builder(var1);
         return var2;
      }

       @Override
       public byte[] toByteArray() {
           return new byte[0];
       }

       public static DescriptorProtos.FileDescriptorSet getDefaultInstance() {
         return DEFAULT_INSTANCE;
      }

      public static Parser parser() {
         return PARSER;
      }

      public Parser getParserForType() {
         return PARSER;
      }

      public DescriptorProtos.FileDescriptorSet getDefaultInstanceForType() {
         return DEFAULT_INSTANCE;
      }

      // $FF: synthetic method
      FileDescriptorSet(GeneratedMessageV3.Builder var1, Object var2) {
         this(var1);
      }

      // $FF: synthetic method
      FileDescriptorSet(CodedInputStream var1, ExtensionRegistryLite var2, Object var3) throws InvalidProtocolBufferException {
         this(var1, var2);
      }

      public static final class Builder extends GeneratedMessageV3.Builder implements DescriptorProtos.FileDescriptorSetOrBuilder {
         private int bitField0_;
         private List file_;
         private RepeatedFieldBuilderV3 fileBuilder_;

         public static final Descriptors.Descriptor getDescriptor() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
         }

         protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_fieldAccessorTable.ensureFieldAccessorsInitialized(DescriptorProtos.FileDescriptorSet.class, DescriptorProtos.FileDescriptorSet.Builder.class);
         }

         private Builder() {
            this.file_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private Builder(GeneratedMessageV3.BuilderParent var1) {
            super(var1);
            this.file_ = Collections.emptyList();
            this.maybeForceBuilderInitialization();
         }

         private void maybeForceBuilderInitialization() {
            if (GeneratedMessageV3.alwaysUseFieldBuilders) {
               this.getFileFieldBuilder();
            }

         }

         public DescriptorProtos.FileDescriptorSet.Builder clear() {
            super.clear();
            if (this.fileBuilder_ == null) {
               this.file_ = Collections.emptyList();
               this.bitField0_ &= -2;
            } else {
               this.fileBuilder_.clear();
            }

            return this;
         }

         public Descriptors.Descriptor getDescriptorForType() {
            return DescriptorProtos.internal_static_google_protobuf_FileDescriptorSet_descriptor;
         }

         public DescriptorProtos.FileDescriptorSet getDefaultInstanceForType() {
            return DescriptorProtos.FileDescriptorSet.getDefaultInstance();
         }

         public DescriptorProtos.FileDescriptorSet build() {
            DescriptorProtos.FileDescriptorSet var1 = this.buildPartial();
            if (!var1.isInitialized()) {
               throw newUninitializedMessageException(var1);
            } else {
               return var1;
            }
         }

         public DescriptorProtos.FileDescriptorSet buildPartial() {
            DescriptorProtos.FileDescriptorSet var1 = new DescriptorProtos.FileDescriptorSet(this);
            int var2 = this.bitField0_;
            if (this.fileBuilder_ == null) {
               if ((this.bitField0_ & 1) != 0) {
                  this.file_ = Collections.unmodifiableList(this.file_);
                  this.bitField0_ &= -2;
               }

               var1.file_ = this.file_;
            } else {
               var1.file_ = this.fileBuilder_.build();
            }

            this.onBuilt();
            return var1;
         }

         public DescriptorProtos.FileDescriptorSet.Builder clone() {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.clone();
         }

         public DescriptorProtos.FileDescriptorSet.Builder setField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.setField(var1, var2);
         }

         public DescriptorProtos.FileDescriptorSet.Builder clearField(Descriptors.FieldDescriptor var1) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.clearField(var1);
         }

         public DescriptorProtos.FileDescriptorSet.Builder clearOneof(Descriptors.OneofDescriptor var1) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.clearOneof(var1);
         }

         public DescriptorProtos.FileDescriptorSet.Builder setRepeatedField(Descriptors.FieldDescriptor var1, int var2, Object var3) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.setRepeatedField(var1, var2, var3);
         }

         public DescriptorProtos.FileDescriptorSet.Builder addRepeatedField(Descriptors.FieldDescriptor var1, Object var2) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.addRepeatedField(var1, var2);
         }

         public DescriptorProtos.FileDescriptorSet.Builder mergeFrom(Message var1) {
            if (var1 instanceof DescriptorProtos.FileDescriptorSet) {
               return this.mergeFrom((DescriptorProtos.FileDescriptorSet)var1);
            } else {
               super.mergeFrom(var1);
               return this;
            }
         }

         public DescriptorProtos.FileDescriptorSet.Builder mergeFrom(DescriptorProtos.FileDescriptorSet var1) {
            if (var1 == DescriptorProtos.FileDescriptorSet.getDefaultInstance()) {
               return this;
            } else {
               if (this.fileBuilder_ == null) {
                  if (!var1.file_.isEmpty()) {
                     if (this.file_.isEmpty()) {
                        this.file_ = var1.file_;
                        this.bitField0_ &= -2;
                     } else {
                        this.ensureFileIsMutable();
                        this.file_.addAll(var1.file_);
                     }

                     this.onChanged();
                  }
               } else if (!var1.file_.isEmpty()) {
                  if (this.fileBuilder_.isEmpty()) {
                     this.fileBuilder_.dispose();
                     this.fileBuilder_ = null;
                     this.file_ = var1.file_;
                     this.bitField0_ &= -2;
                     this.fileBuilder_ = GeneratedMessageV3.alwaysUseFieldBuilders ? this.getFileFieldBuilder() : null;
                  } else {
                     this.fileBuilder_.addAllMessages(var1.file_);
                  }
               }

               this.mergeUnknownFields(var1.unknownFields);
               this.onChanged();
               return this;
            }
         }

         public final boolean isInitialized() {
            for(int var1 = 0; var1 < this.getFileCount(); ++var1) {
               if (!this.getFile(var1).isInitialized()) {
                  return false;
               }
            }

            return true;
         }

         public DescriptorProtos.FileDescriptorSet.Builder mergeFrom(CodedInputStream var1, ExtensionRegistryLite var2) throws IOException {
            DescriptorProtos.FileDescriptorSet var3 = null;

            try {
               var3 = (DescriptorProtos.FileDescriptorSet)DescriptorProtos.FileDescriptorSet.PARSER.parsePartialFrom(var1, var2);
            } catch (InvalidProtocolBufferException var8) {
               var3 = (DescriptorProtos.FileDescriptorSet)var8.getUnfinishedMessage();
               throw var8.unwrapIOException();
            } finally {
               if (var3 != null) {
                  this.mergeFrom(var3);
               }

            }

            return this;
         }

         private void ensureFileIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
               this.file_ = new ArrayList(this.file_);
               this.bitField0_ |= 1;
            }

         }

         public List getFileList() {
            return this.fileBuilder_ == null ? Collections.unmodifiableList(this.file_) : this.fileBuilder_.getMessageList();
         }

         public int getFileCount() {
            return this.fileBuilder_ == null ? this.file_.size() : this.fileBuilder_.getCount();
         }

         public DescriptorProtos.FileDescriptorProto getFile(int var1) {
            return this.fileBuilder_ == null ? (DescriptorProtos.FileDescriptorProto)this.file_.get(var1) : (DescriptorProtos.FileDescriptorProto)this.fileBuilder_.getMessage(var1);
         }

         public DescriptorProtos.FileDescriptorSet.Builder setFile(int var1, DescriptorProtos.FileDescriptorProto var2) {
            if (this.fileBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureFileIsMutable();
               this.file_.set(var1, var2);
               this.onChanged();
            } else {
               this.fileBuilder_.setMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder setFile(int var1, DescriptorProtos.FileDescriptorProto.Builder var2) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.set(var1, var2.build());
               this.onChanged();
            } else {
               this.fileBuilder_.setMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(DescriptorProtos.FileDescriptorProto var1) {
            if (this.fileBuilder_ == null) {
               if (var1 == null) {
                  throw new NullPointerException();
               }

               this.ensureFileIsMutable();
               this.file_.add(var1);
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(int var1, DescriptorProtos.FileDescriptorProto var2) {
            if (this.fileBuilder_ == null) {
               if (var2 == null) {
                  throw new NullPointerException();
               }

               this.ensureFileIsMutable();
               this.file_.add(var1, var2);
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(var1, var2);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(DescriptorProtos.FileDescriptorProto.Builder var1) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.add(var1.build());
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(var1.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addFile(int var1, DescriptorProtos.FileDescriptorProto.Builder var2) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.add(var1, var2.build());
               this.onChanged();
            } else {
               this.fileBuilder_.addMessage(var1, var2.build());
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder addAllFile(Iterable var1) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               AbstractMessageLite.Builder.addAll(var1, this.file_);
               this.onChanged();
            } else {
               this.fileBuilder_.addAllMessages(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder clearFile() {
            if (this.fileBuilder_ == null) {
               this.file_ = Collections.emptyList();
               this.bitField0_ &= -2;
               this.onChanged();
            } else {
               this.fileBuilder_.clear();
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorSet.Builder removeFile(int var1) {
            if (this.fileBuilder_ == null) {
               this.ensureFileIsMutable();
               this.file_.remove(var1);
               this.onChanged();
            } else {
               this.fileBuilder_.remove(var1);
            }

            return this;
         }

         public DescriptorProtos.FileDescriptorProto.Builder getFileBuilder(int var1) {
            return (DescriptorProtos.FileDescriptorProto.Builder)this.getFileFieldBuilder().getBuilder(var1);
         }

         public DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int var1) {
            return this.fileBuilder_ == null ? (DescriptorProtos.FileDescriptorProtoOrBuilder)this.file_.get(var1) : (DescriptorProtos.FileDescriptorProtoOrBuilder)this.fileBuilder_.getMessageOrBuilder(var1);
         }

         public List getFileOrBuilderList() {
            return this.fileBuilder_ != null ? this.fileBuilder_.getMessageOrBuilderList() : Collections.unmodifiableList(this.file_);
         }

         public DescriptorProtos.FileDescriptorProto.Builder addFileBuilder() {
            return (DescriptorProtos.FileDescriptorProto.Builder)this.getFileFieldBuilder().addBuilder(DescriptorProtos.FileDescriptorProto.getDefaultInstance());
         }

         public DescriptorProtos.FileDescriptorProto.Builder addFileBuilder(int var1) {
            return (DescriptorProtos.FileDescriptorProto.Builder)this.getFileFieldBuilder().addBuilder(var1, DescriptorProtos.FileDescriptorProto.getDefaultInstance());
         }

         public List getFileBuilderList() {
            return this.getFileFieldBuilder().getBuilderList();
         }

         private RepeatedFieldBuilderV3 getFileFieldBuilder() {
            if (this.fileBuilder_ == null) {
               this.fileBuilder_ = new RepeatedFieldBuilderV3(this.file_, (this.bitField0_ & 1) != 0, this.getParentForChildren(), this.isClean());
               this.file_ = null;
            }

            return this.fileBuilder_;
         }

         public final DescriptorProtos.FileDescriptorSet.Builder setUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.setUnknownFields(var1);
         }

         public final DescriptorProtos.FileDescriptorSet.Builder mergeUnknownFields(UnknownFieldSet var1) {
            return (DescriptorProtos.FileDescriptorSet.Builder)super.mergeUnknownFields(var1);
         }

         // $FF: synthetic method
         Builder(Object var1) {
            this();
         }

         // $FF: synthetic method
         Builder(GeneratedMessageV3.BuilderParent var1, Object var2) {
            this(var1);
         }
      }
   }

   public interface FileDescriptorSetOrBuilder extends MessageOrBuilder {
      List getFileList();

      DescriptorProtos.FileDescriptorProto getFile(int var1);

      int getFileCount();

      List getFileOrBuilderList();

      DescriptorProtos.FileDescriptorProtoOrBuilder getFileOrBuilder(int var1);
   }
}
